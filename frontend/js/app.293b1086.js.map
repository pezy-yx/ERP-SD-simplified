{"version":3,"file":"js/app.293b1086.js","mappings":"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","sources":["webpack://site/./src/assets/icons/ sync nonrecursive \\.svg$","webpack://site/./src/App.vue?cae1","webpack://site/./src/App.vue","webpack://site/./src/App.vue?7ccd","webpack://site/./src/main.ts","webpack://site/./src/components/varbox/utils.ts","webpack://site/./src/utils/VarTree.ts","webpack://site/./src/utils/searchMethods.ts","webpack://site/./src/components/applicationContent/AppContent.vue?8029","webpack://site/./src/components/applicationContent/AppContent.vue","webpack://site/./src/components/applicationContent/AppContent.vue?722b","webpack://site/./src/components/varbox/inputs/StringInput.vue?0523","webpack://site/./src/components/varbox/inputs/StringInput.vue","webpack://site/./src/components/varbox/inputs/StringInput.vue?97de","webpack://site/./src/components/varbox/inputs/DateInput.vue?9bd1","webpack://site/./src/components/varbox/inputs/DateInput.vue","webpack://site/./src/components/varbox/inputs/DateInput.vue?d53f","webpack://site/./src/components/varbox/inputs/BooleanInput.vue?e52a","webpack://site/./src/components/varbox/inputs/BooleanInput.vue","webpack://site/./src/components/varbox/inputs/BooleanInput.vue?7bb3","webpack://site/./src/components/searchModel/ParamInput.vue?7a57","webpack://site/./src/components/searchModel/ParamInput.vue","webpack://site/./src/components/searchModel/ParamInput.vue?9a4e","webpack://site/./src/api/searchService.ts","webpack://site/./src/components/searchModel/SearchModal.vue?7634","webpack://site/./src/components/searchModel/SearchModal.vue","webpack://site/./src/components/searchModel/SearchModal.vue?1ed7","webpack://site/./src/components/varbox/VarInput.vue?e4aa","webpack://site/./src/components/varbox/VarInput.vue","webpack://site/./src/components/varbox/VarInput.vue?612f","webpack://site/./src/components/varbox/inputs/InputProps.ts","webpack://site/./src/components/NavigationBar.vue?c372","webpack://site/./src/components/NavigationBar.vue","webpack://site/./src/components/NavigationBar.vue?c3d5","webpack://site/./src/utils/ApplicationHistoryManager.ts","webpack://site/./src/components/RecentApplications.vue?8ff5","webpack://site/./src/components/RecentApplications.vue","webpack://site/./src/components/RecentApplications.vue?1250","webpack://site/./src/views/Application.vue?3a0e","webpack://site/./src/views/Application.vue","webpack://site/./src/views/Application.vue?bf15","webpack://site/./src/views/ApplicationDirectory.vue?52e9","webpack://site/./src/views/ApplicationDirectory.vue","webpack://site/./src/views/ApplicationDirectory.vue?79e1","webpack://site/./src/views/MaintainBP/MaintainBusinessPartnerView.vue","webpack://site/./src/components/FilterTabs.vue","webpack://site/./src/components/FilterTabs.vue?b99b","webpack://site/./src/views/MaintainBP/MaintainBusinessPartnerView.vue?85c1","webpack://site/./src/test/varbox/TestPageErp.vue?7a1f","webpack://site/./src/test/varbox/TestPageErp.vue","webpack://site/./src/test/varbox/MyCustomInput.vue?c672","webpack://site/./src/test/varbox/MyCustomInput.vue","webpack://site/./src/test/varbox/MyCustomInput.vue?f229","webpack://site/./src/test/varbox/VarInputCasesErp.ts","webpack://site/./src/test/varbox/TestPageErp.vue?1afc","webpack://site/./src/test/SearchModalTest.vue?4788","webpack://site/./src/test/SearchModalTest.vue","webpack://site/./src/test/SearchModalTest.vue?5d9e","webpack://site/./src/test/AppContentTest.vue","webpack://site/./src/test/AppContentTest.vue?1eed","webpack://site/./src/views/BPRelationship/Main.vue?4864","webpack://site/./src/views/BPRelationship/Main.vue","webpack://site/./src/views/BPRelationship/Main.vue?c99a","webpack://site/./src/views/BPRelationship/Create.vue?fcd1","webpack://site/./src/views/BPRelationship/Create.vue","webpack://site/./src/views/BPRelationship/Create.vue?a26e","webpack://site/./src/views/BPRelationship/Display.vue?3de0","webpack://site/./src/views/BPRelationship/Display.vue","webpack://site/./src/views/BPRelationship/Display.vue?98bf","webpack://site/./src/views/BPRelationship/Change.vue?3710","webpack://site/./src/views/BPRelationship/Change.vue","webpack://site/./src/views/BPRelationship/Change.vue?df8e","webpack://site/./src/test/BPRelationshipTest.vue?d661","webpack://site/./src/test/BPRelationshipTest.vue","webpack://site/./src/test/BPRelationshipTest.vue?3626","webpack://site/./src/views/example/ExampleApplication.vue?609c","webpack://site/./src/views/example/ExampleApplication.vue","webpack://site/./src/views/example/ExampleApplication.vue?3030","webpack://site/./src/components/customeStringInput.vue?172d","webpack://site/./src/components/customeStringInput.vue","webpack://site/./src/components/customeStringInput.vue?d8be","webpack://site/./src/api/auth.ts","webpack://site/./src/views/Login.vue?cc75","webpack://site/./src/views/Login.vue","webpack://site/./src/views/Login.vue?240b","webpack://site/./src/views/Register.vue?05be","webpack://site/./src/views/Register.vue","webpack://site/./src/views/Register.vue?157d","webpack://site/./src/components/SingleApp.vue","webpack://site/./src/components/SingleApp.vue?0bdd","webpack://site/./src/views/Home.vue?dd08","webpack://site/./src/views/Home.vue","webpack://site/./src/views/Home.vue?9051","webpack://site/./src/utils/ItemConditionKit.ts","webpack://site/./src/components/itemCondition/ItemConditionDetail.vue?08e8","webpack://site/./src/components/itemCondition/ItemConditionDetail.vue","webpack://site/./src/components/itemCondition/ItemConditionDetail.vue?7c40","webpack://site/./src/views/ManageSO/ManageSalesOrders.vue?6efd","webpack://site/./src/views/ManageSO/ManageSalesOrders.vue","webpack://site/./src/views/ManageSO/ManageSalesOrders.vue?276a","webpack://site/./src/views/inquiry/Main.vue?a413","webpack://site/./src/views/inquiry/Main.vue","webpack://site/./src/views/inquiry/Main.vue?e749","webpack://site/./src/views/inquiry/Create.vue?067c","webpack://site/./src/views/inquiry/Create.vue","webpack://site/./src/views/inquiry/Create.vue?e03a","webpack://site/./src/views/inquiry/Change.vue?30c7","webpack://site/./src/views/inquiry/Change.vue","webpack://site/./src/views/inquiry/Change.vue?4680","webpack://site/./src/views/inquiry/Display.vue?925a","webpack://site/./src/views/inquiry/Display.vue","webpack://site/./src/views/inquiry/Display.vue?6345","webpack://site/./src/views/outboundDeliveries/CreateMain.vue?c809","webpack://site/./src/views/outboundDeliveries/CreateMain.vue","webpack://site/./src/views/outboundDeliveries/CreateMain.vue?3339","webpack://site/./src/views/outboundDeliveries/Create.vue?7932","webpack://site/./src/views/outboundDeliveries/Create.vue","webpack://site/./src/views/outboundDeliveries/Create.vue?6fd1","webpack://site/./src/views/outboundDeliveries/PickMain.vue?afd2","webpack://site/./src/views/outboundDeliveries/PickMain.vue","webpack://site/./src/views/outboundDeliveries/PickMain.vue?93af","webpack://site/./src/views/outboundDeliveries/Pick.vue?f080","webpack://site/./src/views/outboundDeliveries/Pick.vue","webpack://site/./src/views/outboundDeliveries/Pick.vue?8b86","webpack://site/./src/views/outboundDeliveries/ManageMain.vue?9237","webpack://site/./src/views/outboundDeliveries/ManageMain.vue","webpack://site/./src/views/outboundDeliveries/ManageMain.vue?a0d2","webpack://site/./src/views/outboundDeliveries/Manage.vue?43c7","webpack://site/./src/views/outboundDeliveries/Manage.vue","webpack://site/./src/views/outboundDeliveries/Manage.vue?0ba2","webpack://site/./src/views/billDoc/Main.vue?bee9","webpack://site/./src/views/billDoc/Main.vue","webpack://site/./src/views/billDoc/Main.vue?c632","webpack://site/./src/views/billDoc/Create.vue?12bd","webpack://site/./src/views/billDoc/Create.vue","webpack://site/./src/views/billDoc/Create.vue?ac6c","webpack://site/./src/views/billDoc/Display.vue?0fcc","webpack://site/./src/views/billDoc/Display.vue","webpack://site/./src/views/billDoc/Display.vue?d426","webpack://site/./src/views/billDoc/Change.vue?6482","webpack://site/./src/views/billDoc/Change.vue","webpack://site/./src/views/billDoc/Change.vue?e402","webpack://site/./src/views/GetMyPassBack.vue","webpack://site/./src/views/GetMyPassBack.vue?5da4","webpack://site/./src/views/manageSalesQuotations/manageSalesQuotations.vue?e94f","webpack://site/./src/views/manageSalesQuotations/manageSalesQuotations.vue","webpack://site/./src/views/manageSalesQuotations/manageSalesQuotations.vue?8844","webpack://site/./src/views/VarTreeTutorial.vue?676b","webpack://site/./src/views/VarTreeTutorial.vue","webpack://site/./src/views/VarTreeTutorial.vue?d9d4","webpack://site/./src/views/test/ItemConditionKitTest.vue?63dd","webpack://site/./src/views/test/ItemConditionKitTest.vue","webpack://site/./src/views/test/ItemConditionKitTest.vue?d102","webpack://site/./src/views/MaterialDocumentOverview/Overview.vue?673d","webpack://site/./src/views/MaterialDocumentOverview/Overview.vue","webpack://site/./src/views/MaterialDocumentOverview/Overview.vue?365a","webpack://site/./src/router/index.ts","webpack://site/./src/components/varbox/VarBox.vue?da62","webpack://site/./src/components/varbox/VarBox.vue","webpack://site/./src/components/varbox/VarBox.vue?f457","webpack://site/webpack/bootstrap","webpack://site/webpack/runtime/chunk loaded","webpack://site/webpack/runtime/compat get default export","webpack://site/webpack/runtime/define property getters","webpack://site/webpack/runtime/ensure chunk","webpack://site/webpack/runtime/get javascript chunk filename","webpack://site/webpack/runtime/get mini-css chunk filename","webpack://site/webpack/runtime/global","webpack://site/webpack/runtime/hasOwnProperty shorthand","webpack://site/webpack/runtime/load script","webpack://site/webpack/runtime/make namespace object","webpack://site/webpack/runtime/publicPath","webpack://site/webpack/runtime/css loading","webpack://site/webpack/runtime/jsonp chunk loading","webpack://site/webpack/startup"],"sourcesContent":["var map = {\n\t\"./closed-eye.svg\": 6107,\n\t\"./create-BP-relationship.svg\": 5373,\n\t\"./create-billing-documents.svg\": 4440,\n\t\"./create-inquiry.svg\": 908,\n\t\"./create-outbound-deliveries.svg\": 4429,\n\t\"./default-app-icon.svg\": 2134,\n\t\"./maintain-BP.svg\": 2407,\n\t\"./manage-outbound-deliveries.svg\": 8196,\n\t\"./manage-sales-orders.svg\": 3413,\n\t\"./manage-sales-quotations.svg\": 7299,\n\t\"./material-documents-overview.svg\": 47,\n\t\"./open-eye.svg\": 7887,\n\t\"./posting-incoming-payments.svg\": 271\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 527;","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"app\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_router_view)\n  ]))\n}","<template>\r\n  <div id=\"app\">\r\n    <router-view />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\"> // 注意这里可能需要添加 lang=\"ts\" 如果你的项目使用 TypeScript\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'App',\r\n});\r\n</script>\r\n\r\n<style>\r\n/* 全局样式保持不变，确保html和body占据整个视口 */\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n#app {\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #25482C;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n\r\n<!--<template>\r\n  <router-view />\r\n</template>\r\n<script lang=\"ts\" setup></script>!-->\r\n","import { render } from \"./App.vue?vue&type=template&id=3d2dab51&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3d2dab51&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// createApp是Vue 3的API，负责初始化一个Vue应用实例\r\n// 它会创建一个\"虚拟环境\"，管理页面的组件、数据、交互等\r\n// 底层会初始化Vue的响应式系统、组件渲染器和事件系统\r\nimport { createApp } from 'vue'\r\n// App.vue是Vue应用的根组件\r\n// 导入时，Vue会通过构建工具把App.vue编译成JavaScript对象\r\n// 包含渲染函数、数据、方法等\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport './assets/styles/_base.css'\r\n\r\n// 现在可以在任何地方直接使用 window.API_BASE_URL\r\ndeclare global {\r\n  interface Window {\r\n    API_BASE_URL: string;\r\n  }\r\n}\r\n\r\n// 从环境变量读取并设置为全局变量\r\nwindow.API_BASE_URL = window.API_BASE_URL || \r\n                      process.env.VUE_APP_API_BASE_URL || \r\n                      'http://localhost:3000'\r\n\r\n// 创建Vue应用，把App.vue挂载到index.html的<div id=\"app\">元素上\r\n// 启动页面渲染\r\ncreateApp(App).use(router).mount('#app')\r\n","import { VarTree } from \"@/utils/VarTree\";\r\nexport function getPathString(tree: VarTree ,path: string[]): string {\r\n  // 用-连接，元素的-和.用.转义\r\n  if(!tree.root){\r\n    return \"no root\"\r\n  }\r\n  if(path.length == 0){\r\n    return escape(tree.root.name)\r\n  }\r\n  return escape(tree.root.name) + \"-\" + path\r\n    .map(segment => escape(segment))\r\n    .join('-');\r\n}\r\nfunction escape(s:string):string {\r\n  return s.replace(/[-.]/g, m => '.' + m)\r\n}\r\n\r\n// const test = computed<string>(()=>{\r\n//   if(props.tree == undefined){\r\n//     return \"no tree\"\r\n//   }\r\n//   if(props.node == undefined){\r\n//     return \"no node\"\r\n//   }\r\n//   const paths = props.tree.findPathToNode(props.node)\r\n//   if(!paths){\r\n//     return \"dfs failed\"\r\n//   }\r\n//   return getPathString(paths)\r\n// })","import { DefineComponent, Ref, ref } from \"vue\";\r\nimport type { Component } from 'vue'\r\n/**\r\n * VarNode类：变量节点\r\n * 每个节点包含类型、名称、默认值、只读状态和子节点\r\n */\r\nexport type VarTypeString = 'string' | 'date' | 'selection' | 'dict' | 'dynamiclist' | 'fixlist' | 'number' | 'boolean'\r\nexport type NodeTypeString = 'dict' | 'list' | 'leaf'\r\nexport type VarNodeValue = Object | null\r\nexport type VarNodeValueValidator = {\r\n  creteria: (value: VarNodeValue) => boolean,\r\n  message?: string\r\n}\r\nexport type VarNodeValueValidators = VarNodeValueValidator[]\r\n\r\n// 搜索方法接口\r\nexport interface SearchMethod {\r\n  name: string\r\n  paramTree: VarTree | null\r\n  serviceUrl: string\r\n  resultHeaderDisplay?: Record<string, string>\r\n}\r\n\r\n// 搜索结果处理函数类型\r\nexport type SearchResultHandler = (data: {\r\n  method: SearchMethod\r\n  params: any\r\n  results: any\r\n  selectedResults: any[]\r\n  firstSelectedResult: any\r\n}, currentNode: VarNode) => void\r\n\r\nexport type SelectableDependingOn = (\r\n  node?: VarNode,\r\n  parent?: VarNode,\r\n  tree?: VarTree\r\n) => boolean\r\n\r\nexport type VarNodeConfig = {\r\n  /**\r\n   * @description 自定义组件钩子\r\n   */\r\n  customComponent?: Component;\r\n\r\n  /**\r\n   * @description 验证钩子\r\n   * @example [{creteria: (v) => typeof v === 'string' && v.length > 0, message: '不能为空'}]\r\n   */\r\n  validators?: VarNodeValueValidators; // 内容检查函数集合\r\n\r\n  // 值相关参数\r\n  /**\r\n   * @description 最小日期（ISO格式）\r\n   * @example \"2024-01-01\"\r\n   */\r\n  minDate?: string; // \r\n  /**\r\n   * @description 最大日期（ISO格式）\r\n   * @example \"2024-01-01\"\r\n   */\r\n  maxDate?: string;\r\n  /**\r\n   * @description 选项列表（用于selection类型）\r\n   * @example [\"选项1\", \"选项2\", \"选项3\"]\r\n   */\r\n  options?: string[];\r\n\r\n  // 搜索相关参数\r\n  /**\r\n   * @description 搜索方法配置\r\n   * @description 如果有配置，将显示搜索按钮\r\n   * @example [{name: \"搜索方法1\", paramTree: null, serviceUrl: \"/api/search/1\"}, {name: \"搜索方法2\", paramTree: null, serviceUrl: \"/api/search/2\"}]\r\n   */\r\n  searchMethods?: SearchMethod[] | null;\r\n  /**\r\n   * @description 自定义搜索结果处理函数\r\n   * @description 如果有配置，将覆盖默认的搜索结果处理逻辑\r\n   * @param {SearchResult} data - 搜索结果数据\r\n   * @param {VarNode} currentNode - 当前节点\r\n   * @example (data, currentNode) => {console.log(data, currentNode)}\r\n   */\r\n  customSearchResultHandler?: SearchResultHandler; // 自定义搜索结果处理函数\r\n\r\n  // 显示相关参数\r\n  // parent\r\n  /**\r\n   * @description 隐藏列表，用于父节点，决定哪些子节点不显示，优先级低于showWhiteList\r\n   * @example [\"需要隐藏的子节点name1\", \"需要隐藏的子节点name2\"]\r\n   */\r\n  hideList?: string[];\r\n  /**\r\n   * @description 显示白名单，用于父节点，决定只有哪些子节点显示，优先级高于hideList\r\n   * @example [\"只需要显示的子节点name1\", \"只需要显示的子节点name2\"]\r\n   */\r\n  showWhiteList?: string[];\r\n  /**\r\n   * @description 子节点名称显示翻译，用于父节点，决定子节点名称的显示\r\n   * @example {name1: \"显示名称1\", name2: \"显示名称2\"}\r\n   */\r\n  childNameDisplayTranslation?: Record<string, string>;\r\n  // child\r\n  /**\r\n   * @description CSS类名前缀，用于自定义布局样式\r\n   * @example \"custom-class-prefix\"\r\n   */\r\n  classPrefix?: string; // CSS类名前缀，用于自定义布局样式\r\n  /**\r\n   * @description 是否隐藏当前的Label\r\n   */\r\n  hideLabel?: boolean; // 是否隐藏当前的Label\r\n  /**\r\n   * @description 是否在父节点下隐藏当前节点\r\n   */\r\n  hideSelf?: boolean;\r\n\r\n  // 动态列表-表格形式 相关参数\r\n  // parent\r\n  /**\r\n   * @description 动态列表，用于父节点，决定动态列表子节点的模板\r\n   * @description 动态列表必填参数\r\n   * @example {varType: 'dict', children: [{varType: 'string', name: 'name'}, {varType: 'string', name: 'age'}]}\r\n   */\r\n  childTemplate?: NodeStructure; // 子节点模板，用于动态列表\r\n  /**\r\n   * @description 动态列表，用于父节点，决定动态列表最大行数，缺省为Infinity\r\n   */\r\n  maxLength?: number; // 最大长度，用于动态列表\r\n  /**\r\n   * @description 动态列表，用于父节点，决定动态列表初始行数，缺省为3\r\n   */\r\n  rowProvided?: number;\r\n  /**\r\n   * @description 动态列表，用于父节点，决定选择列是否可用的函数\r\n   * @description 如果返回false，选择列将不可用\r\n   * @param {VarNode} [node] 当前节点 可选\r\n   * @param {VarNode} [parent] 父节点\r\n   * @param {VarTree} [tree] 整个树\r\n   * @returns {boolean} true为可用，false为不可用\r\n   * @example (node, parent, tree) => {return true}\r\n   * @example (node, parent, tree) => {return node.getValue().columnA == 'magic value'}\r\n   */\r\n  selectableDependingOn?: SelectableDependingOn;\r\n  // child\r\n  /**\r\n   * @description 动态列表，用于子节点，记录是否被选中\r\n   * @description 高频读写\r\n   */\r\n  selected?: boolean; // 是否为选中状态\r\n\r\n  /**\r\n   * @description 用于读写任意数据，适用于较为独特的场景\r\n   * \r\n   * ### 推荐使用场景\r\n   * - 需要将一些状态与VarNode绑定，但又不想污染VarNode的值\r\n   * - 需要将一些状态与VarNode绑定，但不限制于boolean/string/number类型\r\n   * - 需要将一些状态与VarNode绑定，但又不想使用Vue的响应式系统\r\n   * \r\n   * 高频场景建议在VarNodeConfig中添加一个字段，写清说明\r\n   */\r\n  data?: any //\r\n}\r\n\r\nexport type NodeStructure = {\r\n  varType: VarTypeString;\r\n  nodeType?: NodeTypeString;\r\n  name?: string;\r\n  nameDisplay?: string;\r\n  defaultValue?: VarNodeValue;\r\n  readonly?: boolean;\r\n  config?: VarNodeConfig;\r\n  children?: NodeStructure[];\r\n  iconPath?: string; // **新增：图标路径，用于显示在UI上**\r\n}\r\n\r\nexport class VarNode {\r\n  public nodeType: NodeTypeString;\r\n  public varType: VarTypeString;\r\n  public name: string;\r\n  public nameDisplay: string;\r\n  public defaultValue: VarNodeValue;\r\n  public readonly: boolean;\r\n  public children: VarNode[];\r\n  public index: number;\r\n  public config: VarNodeConfig;\r\n  public iconPath?: string; // **新增：图标路径，用于显示在UI上**\r\n\r\n  /**\r\n   * 当前值，object，可读写\r\n   */\r\n  private _currentValue: VarNodeValue = {};\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param {NodeTypeString} nodeType - 节点类型：\"dict\"|\"list\"|\"leaf\"\r\n   * @param {VarTypeString} varType - 变量类型：对应组件的变量类型\r\n   * @param {string} name - 变量名称，留空时自动生成\r\n   * @param {string} nameDisplay - 变量名称，留空时自动生成\r\n   * @param {VarNodeValue} defaultValue - 默认值\r\n   * @param {boolean} readonly - 是否只读\r\n   * @param {VarNode[]} children - 子节点数组\r\n   * @param {VarNodeConfig} config - 其他配置参数，钩子等\r\n   * @param {string} iconPath - **新增：图标路径**\r\n   */\r\n  constructor(\r\n    nodeType: NodeTypeString = 'leaf',\r\n    varType: VarTypeString = 'string',\r\n    name: string = '',\r\n    defaultValue: VarNodeValue = null,\r\n    readonly: boolean = false,\r\n    children: VarNode[] = [],\r\n    config: VarNodeConfig | null = null,\r\n    nameDisplay?: string,\r\n    iconPath?: string, // **新增参数**\r\n  ) {\r\n    this.nodeType = nodeType // \"dict\"|\"list\"|\"leaf\"\r\n    this.varType = varType   // 对应组件的变量类型\r\n    this.name = name         // 变量名称\r\n    this.nameDisplay = nameDisplay || \"\" // 显示名称，默认为name\r\n    this.defaultValue = defaultValue\r\n    this.readonly = readonly\r\n    this.children = children || []\r\n    this.index = -1          // 中序遍历位置，由VarTree初始化时设置\r\n    this.config = config ? { ...config } : {} // 创建新的config对象，避免引用共享\r\n    this.iconPath = iconPath; // **新增：设置iconPath**\r\n    // this._currentValue = defaultValue; // 初始化object\r\n    if (this.nodeType === 'leaf') {\r\n      this.currentValue = defaultValue; // 设置初始值\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取当前值（自动聚合子节点）\r\n   */\r\n  get currentValue(): VarNodeValue {\r\n    if (this.nodeType === 'dict') {\r\n      // 聚合dict类型的子节点\r\n      const result: { [key: string]: VarNodeValue } = {}\r\n      this.children.forEach(child => {\r\n        result[child.name] = child.currentValue // 递归获取子节点的当前值\r\n      })\r\n      return result\r\n    }\r\n    if (this.nodeType === 'list') {\r\n      // 聚合list类型的子节点\r\n      return this.children.map(child => child.currentValue) // 递归获取子节点的当前值\r\n    }\r\n    // leaf节点直接返回当前值\r\n    return this._currentValue; // 递归结束\r\n  }\r\n\r\n  /**\r\n   * 设置当前值（自动分发到子节点）\r\n   */\r\n  set currentValue(val: VarNodeValue) {\r\n    if (this.nodeType === 'dict' && typeof val === 'object' && val !== null) {\r\n      this.children.forEach(child => {\r\n        if (val.hasOwnProperty(child.name)) {\r\n          child.currentValue = val[child.name as keyof typeof val]\r\n        }\r\n      })\r\n    } else if (this.nodeType === 'list' && Array.isArray(val)) {\r\n      const deletions: VarNode[] = [];\r\n      this.children.forEach((child, index) => {\r\n        if (index < val.length) {\r\n          child.currentValue = val[index]\r\n        } else {\r\n          child.currentValue = null;\r\n          deletions.push(child);\r\n        }\r\n      })\r\n      this.children = this.children.filter(child => !deletions.includes(child));\r\n\r\n      for (let i = this.children.length; i < val.length; i++) {\r\n        // 创建新子节点时，传递父节点的 varType, readonly, config, nameDisplay, iconPath\r\n        const newChild = new VarNode('leaf', this.varType, '', val[i], this.readonly, [], { ...this.config }, this.nameDisplay, this.iconPath) // **传递 iconPath**\r\n        this.children.push(newChild)\r\n      }\r\n    } else {\r\n      this._currentValue = val;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读值\r\n   */\r\n  getValue(): VarNodeValue {\r\n    return this.currentValue\r\n  }\r\n\r\n  /**\r\n   * 读值\r\n   * @param {VarNodeValue} newValue\r\n   */\r\n  setValue(newValue: VarNodeValue): void {\r\n    this.currentValue = newValue\r\n  }\r\n\r\n  /**\r\n   * 强制设置值，会覆盖所有字段包括缺省字段\r\n   * @param {VarNodeValue} newValue\r\n   */\r\n  forceSetValue(newValue: VarNodeValue): void {\r\n    if (this.nodeType === 'dict' && typeof newValue === 'object' && newValue !== null) {\r\n      // 对于字典类型，强制设置所有子节点\r\n      for (const child of this.children) {\r\n        const childValue = (newValue as any)[child.name]\r\n        if (childValue !== undefined) {\r\n          child.forceSetValue(childValue)\r\n        } else {\r\n          // 对于list类型的子节点，如果没有数据就清空，不设置默认值\r\n          if (child.nodeType === 'list') {\r\n            child.children = []\r\n          } else {\r\n            // 对于非list类型，设置为默认值\r\n            child.forceSetValue(child.defaultValue)\r\n          }\r\n        }\r\n      }\r\n    } else if (this.nodeType === 'list' && Array.isArray(newValue)) {\r\n      // 对于列表类型，清空现有子节点并重新创建\r\n      this.children = []\r\n      for (let i = 0; i < newValue.length; i++) {\r\n        if (this.config?.childTemplate) {\r\n          const newChild = createNodeFromConfig(this.config.childTemplate).clone()\r\n          if (newChild) {\r\n            newChild.forceSetValue(newValue[i])\r\n            this.addChild(newChild)\r\n          }\r\n        } else {\r\n          const newChild = new VarNode('leaf', this.varType, '', null, this.readonly, [], { ...this.config }, '', this.iconPath)\r\n          newChild.forceSetValue(newValue[i])\r\n          this.addChild(newChild)\r\n        }\r\n      }\r\n    } else {\r\n      // 对于叶子节点，直接设置值\r\n      this.currentValue = newValue\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加子节点\r\n   * @param {VarNode} child \r\n   */\r\n  addChild(child: VarNode): void {\r\n    this.children.push(child)\r\n  }\r\n\r\n  /**\r\n   * 移除子节点\r\n   * @param {number} index\r\n   */\r\n  removeChild(index: number): void {\r\n    if (index >= 0 && index < this.children.length) {\r\n      this.children.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description 拿到选中的child节点\r\n   */\r\n  getSelectedChildren(): VarNode[] {\r\n    return this.children.filter(child => child.config.selected)\r\n  }\r\n\r\n  /**\r\n   * @description 设置是否被选中\r\n   * @param value\r\n   */\r\n  setSelection(value: boolean): void {\r\n    this.config.selected = value\r\n  }\r\n\r\n  /**\r\n   * @description 选择子节点\r\n   * @param index\r\n   * @param value\r\n   */\r\n  selectChild(index:number, value: boolean): void {\r\n    if (this.children.length <= index || index<0) {\r\n      return\r\n    }\r\n    this.children[index].setSelection(value)\r\n  }\r\n\r\n  /**\r\n   * 是否为叶子节点\r\n   * @returns {boolean}\r\n   */\r\n  isLeaf(): boolean {\r\n    return this.nodeType === 'leaf'\r\n  }\r\n\r\n  /**\r\n   * 获取显示名称\r\n   * @returns {string}\r\n   */\r\n  getNameDisplay(): string {\r\n    if (this.nameDisplay == \"\"){\r\n      return this.name || ''\r\n    }\r\n    return this.nameDisplay;\r\n  }\r\n\r\n  /**\r\n   * 克隆节点\r\n   * @returns {VarNode}\r\n   */\r\n  clone(): VarNode {\r\n    const clonedChildren: VarNode[] = this.children.map(child => child.clone())\r\n    const node = new VarNode(\r\n      this.nodeType,\r\n      this.varType,\r\n      this.name,\r\n      this.defaultValue,\r\n      this.readonly,\r\n      clonedChildren,\r\n      { ...this.config }, // 深拷贝config对象\r\n      this.nameDisplay, // 传递 nameDisplay\r\n      this.iconPath // **新增：传递 iconPath**\r\n    )\r\n    if(node.nodeType==='leaf'){\r\n      node.currentValue = this.currentValue\r\n    }\r\n    return node\r\n  }\r\n\r\n  /**\r\n   * 返回一个模板节点\r\n   * 清空所有子节点的值，保留类型和配置\r\n   * @returns {VarNode}\r\n   */\r\n  template(): VarNode {\r\n    const clearedChildren: VarNode[] = this.children.map(child => {\r\n      if (child.isLeaf()) {\r\n        // 创建叶子节点模板时也传递 iconPath\r\n        return new VarNode(child.nodeType, child.varType, child.name, null, child.readonly, [], { ...child.config }, child.nameDisplay, child.iconPath) // **新增：传递 iconPath**\r\n      } else {\r\n        return child.template() // 递归清空子节点\r\n      }\r\n    })\r\n    return new VarNode(\r\n      this.nodeType,\r\n      this.varType,\r\n      this.name,\r\n      null,\r\n      this.readonly,\r\n      clearedChildren,\r\n      { ...this.config }, // 深拷贝config对象\r\n      this.nameDisplay, // 传递 nameDisplay\r\n      this.iconPath // **新增：传递 iconPath**\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 根据路径查找节点\r\n   * @param {string[]} path - 节点路径\r\n   * @returns {VarNode|null}\r\n   */\r\n  findNodeByPath(path: string[]): VarNode | null {\r\n    if (!this || !path || path.length === 0) {\r\n      return this\r\n    }\r\n  \r\n    let currentNode: VarNode = this\r\n    \r\n    for (const pathSegment of path) {\r\n      if (!currentNode || !currentNode.children) {\r\n        return null\r\n      }\r\n      \r\n      // 根据节点类型查找子节点\r\n      if (currentNode.nodeType === 'dict') {\r\n        currentNode = currentNode.children.find(child => child.name === pathSegment) as VarNode\r\n      } else if (currentNode.nodeType === 'list') {\r\n        const index = parseInt(pathSegment)\r\n        currentNode = currentNode.children[index]\r\n      }\r\n      \r\n      if (!currentNode) {\r\n        return null\r\n      }\r\n    }\r\n    \r\n    return currentNode\r\n  }\r\n}\r\n\r\n/**\r\n * VarTree类：变量结构树\r\n * 由VarNode为节点组成的树结构\r\n */\r\nexport class VarTree {\r\n  public root: VarNode | null;\r\n  public nodeIndex: number;\r\n  public forceUpdateKey: Ref<number>;\r\n  \r\n  /**\r\n   * 构造函数\r\n   * @param {VarNode} rootNode - 根节点\r\n   */\r\n  constructor(rootNode: VarNode | null = null) {\r\n    this.root = rootNode\r\n    this.nodeIndex = 0 // 用于生成默认变量名和索引\r\n    this.forceUpdateKey = ref(0)\r\n    \r\n    // 如果有根节点，立即初始化索引和名称\r\n    if (this.root) {\r\n      this._initializeTree()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description 强制刷新树结构\r\n   * @description 用于在数据更新后强制刷新界面\r\n   */\r\n  forceUpdate() {\r\n    this.forceUpdateKey.value++\r\n  }\r\n\r\n  /**\r\n   * 读值\r\n   */\r\n  getValue(): any {\r\n    if(!this.root) return {}\r\n    return this.root.currentValue\r\n  }\r\n\r\n  /**\r\n   * 写值\r\n   * @param {VarNodeValue} newValue\r\n   */\r\n  setValue(newValue: VarNodeValue): void {\r\n    if(!this.root) {\r\n      return\r\n    }\r\n    this.root.currentValue = newValue\r\n  }\r\n\r\n  /**\r\n   * 强制设置值，会覆盖所有字段包括缺省字段\r\n   * @param {VarNodeValue} newValue\r\n   */\r\n  forceSetValue(newValue: VarNodeValue): void {\r\n    if(!this.root) {\r\n      return\r\n    }\r\n    this.root.forceSetValue(newValue)\r\n  }\r\n\r\n  /**\r\n   * 设置根节点\r\n   * @param {VarNode} rootNode \r\n   */\r\n  setRoot(rootNode: VarNode | null): void {\r\n    this.root = rootNode\r\n    this._initializeTree()\r\n  }\r\n\r\n\r\n  getChildren(node: VarNode): VarNode[] {\r\n    if (!node || !node.children) {\r\n      return []\r\n    } else if (node.nodeType === 'dict') {\r\n      // 返回字典类型的子节点\r\n      return node.children.filter(child => child.nodeType !== 'leaf')\r\n    }\r\n    else if (node.nodeType === 'list') {\r\n      // 返回列表类型的子节点\r\n      return node.children.filter(child => child.nodeType !== 'leaf')\r\n    }\r\n    else {\r\n      // 返回叶子节点的子节点（通常为空）\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取根节点\r\n   */\r\n  getRoot(): VarNode | null {\r\n    return this.root\r\n  }\r\n\r\n  /**\r\n   * 克隆根节点\r\n   */\r\n  cloneRoot(): VarNode | null {\r\n    if (!this.root) return null\r\n    return this.root.clone()\r\n  }\r\n\r\n  /**\r\n   * 初始化树结构（设置索引和默认名称）\r\n   * @private\r\n   */\r\n  _initializeTree() {\r\n    this.nodeIndex = 0\r\n    if (this.root) {\r\n      this._inorderTraversal(this.root)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 中序遍历设置索引和默认名称\r\n   * @param {VarNode} node \r\n   * @private\r\n   */\r\n  _inorderTraversal(node: VarNode) {\r\n    if ( !node ) {\r\n      return\r\n    }\r\n\r\n    // 为字典类型的子节点遍历\r\n    if (node.nodeType === 'dict' && node.children) {\r\n      for (const child of node.children) {\r\n        this._inorderTraversal(child)\r\n      }\r\n    }\r\n    \r\n    // 为列表类型的子节点遍历\r\n    if (node.nodeType === 'list' && node.children) {\r\n      for (const child of node.children) {\r\n        this._inorderTraversal(child)\r\n      }\r\n    }\r\n\r\n    // 设置节点索引\r\n    node.index = this.nodeIndex++\r\n    \r\n    // 如果名称为空，设置默认名称\r\n    if (!node.name) {\r\n      node.name = `value_${node.index}`\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取所有节点（前序遍历）\r\n   * @returns {VarNode[]}\r\n   */\r\n  getAllNodes(): VarNode[] {\r\n    const nodes: VarNode[] = []\r\n    if (this.root) {\r\n      this._preorderTraversal(this.root, nodes)\r\n    }\r\n    return nodes\r\n  }\r\n\r\n  /**\r\n   * 前序遍历收集节点\r\n   * @param {VarNode} node \r\n   * @param {VarNode[]} nodes \r\n   * @private\r\n   */\r\n  _preorderTraversal(node: VarNode, nodes: VarNode[]): void {\r\n    if (!node) return\r\n\r\n    nodes.push(node)\r\n\r\n    if (node.children && node.children.length > 0) {\r\n      for (const child of node.children) {\r\n        this._preorderTraversal(child, nodes)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description 通过json设置值，缺省的节点不覆盖为空，和setValue有区别\r\n   * @param {VarNodeValue} newValue\r\n   */\r\n  setValueByJson(newValue: VarNodeValue): void {\r\n    if(!this.root) {\r\n      return\r\n    }\r\n    this._setValueByJson(this.root, newValue)\r\n  }\r\n\r\n  /**\r\n   * @description 通过json设置值，缺省的节点不覆盖为空，和setValue有区别\r\n   * @param {VarNode} node \r\n   * @param {VarNodeValue} newValue\r\n   * @private\r\n   */\r\n  _setValueByJson(node: VarNode, newValue: VarNodeValue): void {\r\n    if (node.nodeType === 'dict' && typeof newValue === 'object' && newValue !== null) {\r\n      for (const key in newValue) {\r\n        const child = node.children.find(child => child.name === key)\r\n        if (child) {\r\n          this._setValueByJson(child, newValue[key as keyof typeof newValue])\r\n        }\r\n      }\r\n    } else if (node.nodeType === 'list' && Array.isArray(newValue)) {\r\n      for (let i = 0; i < newValue.length; i++) {\r\n        if (node.children[i]) {\r\n          this._setValueByJson(node.children[i], newValue[i])\r\n        } else {\r\n          if (!node.config?.childTemplate) {\r\n            const newChild = new VarNode('leaf', node.varType, '', null, node.readonly, [], { ...node.config }, '', node.iconPath)\r\n            newChild.setValue(newValue[i])\r\n            node.addChild(newChild)\r\n          }else {\r\n            const newChild = createNodeFromConfig(node.config.childTemplate).clone()\r\n            if (newChild) {\r\n              newChild.setValue(newValue[i])\r\n              node.addChild(newChild)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (node.nodeType === 'leaf') {\r\n      node.currentValue = newValue\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description 设置节点，引用设置\r\n   * @param sourceNode - 要替换的源节点\r\n   * @param targetPath - 目标路径\r\n   */\r\n  replaceNodeByPath(sourceNode: VarNode, targetPath: string[]): void {\r\n    if (!this.root || !targetPath || targetPath.length === 0) {\r\n      // 如果路径为空，替换根节点\r\n      this.root = sourceNode\r\n      this._initializeTree()\r\n      return\r\n    }\r\n\r\n    // 如果只有一个路径段，说明要替换根节点的直接子节点\r\n    if (targetPath.length === 1) {\r\n      if (!this.root.children) {\r\n        this.root.children = []\r\n      }\r\n      \r\n      const pathSegment = targetPath[0]\r\n      \r\n      if (this.root.nodeType === 'dict') {\r\n        // 查找是否已存在该名称的子节点\r\n        const existingIndex = this.root.children.findIndex(child => child.name === pathSegment)\r\n        if (existingIndex !== -1) {\r\n          // 替换现有节点\r\n          this.root.children[existingIndex] = sourceNode\r\n        } else {\r\n          // 添加新节点\r\n          sourceNode.name = pathSegment\r\n          this.root.children.push(sourceNode)\r\n        }\r\n      } else if (this.root.nodeType === 'list') {\r\n        const index = parseInt(pathSegment)\r\n        if (isNaN(index) || index < 0) {\r\n          throw new Error(`Invalid list index: ${pathSegment}`)\r\n        }\r\n        \r\n        // 扩展数组到所需长度\r\n        while (this.root.children.length <= index) {\r\n          this.root.children.push(new VarNode())\r\n        }\r\n        \r\n        this.root.children[index] = sourceNode\r\n      }\r\n      \r\n      this._initializeTree()\r\n      return\r\n    }\r\n\r\n    // 多层路径，需要找到父节点\r\n    const parentPath = targetPath.slice(0, -1)\r\n    const lastSegment = targetPath[targetPath.length - 1]\r\n    \r\n    const parentNode = this.findNodeByPath(parentPath)\r\n    if (!parentNode) {\r\n      throw new Error(`Parent node not found at path: ${parentPath.join('/')}`)\r\n    }\r\n\r\n    if (!parentNode.children) {\r\n      parentNode.children = []\r\n    }\r\n\r\n    if (parentNode.nodeType === 'dict') {\r\n      // 查找是否已存在该名称的子节点\r\n      const existingIndex = parentNode.children.findIndex(child => child.name === lastSegment)\r\n      if (existingIndex !== -1) {\r\n        // 替换现有节点\r\n        parentNode.children[existingIndex] = sourceNode\r\n      } else {\r\n        // 添加新节点\r\n        sourceNode.name = lastSegment\r\n        parentNode.children.push(sourceNode)\r\n      }\r\n    } else if (parentNode.nodeType === 'list') {\r\n      const index = parseInt(lastSegment)\r\n      if (isNaN(index) || index < 0) {\r\n        throw new Error(`Invalid list index: ${lastSegment}`)\r\n      }\r\n      \r\n      // 扩展数组到所需长度\r\n      while (parentNode.children.length <= index) {\r\n        parentNode.children.push(new VarNode())\r\n      }\r\n      \r\n      parentNode.children[index] = sourceNode\r\n    } else {\r\n      throw new Error(`Cannot add child to leaf node at path: ${parentPath.join('/')}`)\r\n    }\r\n\r\n    this._initializeTree()\r\n  }\r\n\r\n  /**\r\n   * 根据路径查找节点\r\n   * @param {string[]} path - 节点路径\r\n   * @returns {VarNode|null}\r\n   */\r\n  findNodeByPath(path: string[]): VarNode | null {\r\n    if (!this.root || !path || path.length === 0) {\r\n      return this.root\r\n    }\r\n  \r\n    let currentNode = this.root\r\n    \r\n    for (const pathSegment of path) {\r\n      if (!currentNode || !currentNode.children) {\r\n        return null\r\n      }\r\n      \r\n      // 根据节点类型查找子节点\r\n      if (currentNode.nodeType === 'dict') {\r\n        currentNode = currentNode.children.find(child => child.name === pathSegment) as VarNode\r\n      } else if (currentNode.nodeType === 'list') {\r\n        const index = parseInt(pathSegment)\r\n        currentNode = currentNode.children[index]\r\n      }\r\n      \r\n      if (!currentNode) {\r\n        return null\r\n      }\r\n    }\r\n    \r\n    return currentNode\r\n  }\r\n\r\n  /**\r\n   * 根据节点查找路径，深度优先查找，请尽量不要在响应式变量里调用\r\n   * @param {VarNode} targetNode - 目标节点\r\n   * @returns {string[]|null} - 返回从根节点到目标节点的路径，如果未找到则返回 null\r\n   */\r\n  findPathToNode(targetNode: VarNode): string[] | null {\r\n    if (!this.root) {\r\n      return null;\r\n    }\r\n\r\n    // DFS\r\n    const dfs = (currentNode: VarNode, currentPath: string[]): string[] | null => {\r\n      // 如果当前节点就是目标节点，则返回当前路径\r\n      if (currentNode === targetNode) {\r\n        return currentPath;\r\n      }\r\n\r\n      // 遍历子节点\r\n      if (currentNode.children && currentNode.children.length > 0) {\r\n        for (let i = 0; i < currentNode.children.length; i++) {\r\n          const child = currentNode.children[i];\r\n          let nextSegment: string;\r\n\r\n          // 根据父节点的类型决定路径片段\r\n          if (currentNode.nodeType === 'dict') {\r\n            nextSegment = child.name; // 字典用子节点的名字\r\n          } else if (currentNode.nodeType === 'list') {\r\n            nextSegment = String(i); // 列表用子节点的索引\r\n          } else {\r\n            // 如果父节点是叶子节点，则不应该有子节点，跳过\r\n            continue;\r\n          }\r\n\r\n          const result = dfs(child, [...currentPath, nextSegment]);\r\n          if (result) {\r\n            return result; // 找到路径，立即返回\r\n          }\r\n        }\r\n      }\r\n\r\n      return null; // 未在当前路径下找到\r\n    };\r\n\r\n    // 从根节点开始搜索\r\n    return dfs(this.root, []);\r\n  }\r\n}\r\n\r\n// 内容检查函数集合\r\nexport const validators = {\r\n  // 日期格式检查\r\n  date: (value: any) => {\r\n    if (!value) { return true } // 允许空值\r\n    const date = new Date(value)\r\n    return !isNaN(date.getTime())\r\n  },\r\n  \r\n  // 数字检查\r\n  number: (value: any) => {\r\n    if (value === '' || value === null || value === undefined) {\r\n      return true\r\n    }\r\n    return !isNaN(Number(value))\r\n  },\r\n  \r\n  // 非空检查\r\n  required: (value: any) => {\r\n    return value !== undefined && value !== null && value !== ''\r\n  },\r\n  \r\n  // 邮箱格式检查\r\n  email: (value: any) => {\r\n    if (!value) return true\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    return emailRegex.test(value)\r\n  },\r\n  \r\n  // URL格式检查\r\n  url: (value: any) => {\r\n    if (!value) return true\r\n    try {\r\n      new URL(value)\r\n      return true\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 从配置对象创建VarNode\r\n * @param {NodeStructure} struct - 配置对象\r\n * @returns {VarNode}\r\n */\r\nexport function createNodeFromConfig(struct: NodeStructure): VarNode {\r\n  const {\r\n    varType = 'string', // 默认类型为string\r\n    nodeType = varType === 'dict' ? 'dict' : varType === 'dynamiclist' || varType === 'fixlist' ? 'list' : 'leaf',\r\n    name = '',\r\n    nameDisplay = '',\r\n    defaultValue = null,\r\n    readonly = false,\r\n    config = null,\r\n    children,\r\n    iconPath = '' // **新增：从 struct 中解构出 iconPath**\r\n  } = struct\r\n  \r\n  // 支持children为对象（dict）或数组（list）\r\n  let childNodes: VarNode[] = []\r\n  if (nodeType === 'dict' && children && typeof children === 'object' && !Array.isArray(children)) {\r\n    childNodes = Object.entries(children).map(([key, child]) => {\r\n      // 保证子节点name属性\r\n      if (typeof child === 'object' && child !== null) {\r\n        // 保证varType存在，优先(child as any).type/(child as any).varType，否则默认为'string'\r\n        const c: any = child\r\n        const childStruct = { \r\n          name: key, \r\n          varType: c.type ?? c.varType ?? 'string', \r\n          ...c,\r\n          iconPath: c.iconPath || '' // **新增：递归创建子节点时传递 iconPath**\r\n        }\r\n        return createNodeFromConfig(childStruct)\r\n      }\r\n      // 如果 child 不是对象，而是原始值，为其创建叶子节点，并传递 iconPath\r\n      return createNodeFromConfig({ \r\n        name: key, \r\n        varType: 'string', \r\n        defaultValue: String(child),\r\n        iconPath: (child as any).iconPath || '' // **新增：如果原始值有 iconPath**\r\n      })\r\n    })\r\n    // **新增：将 iconPath 传递给 VarNode 构造函数**\r\n    return new VarNode(nodeType, varType, name, defaultValue, readonly, childNodes, config, nameDisplay, iconPath)\r\n  }\r\n  if (Array.isArray(children) && children.length > 0 && nodeType !== 'leaf') {\r\n    childNodes = children.map(child => createNodeFromConfig(child))\r\n    // **新增：将 iconPath 传递给 VarNode 构造函数**\r\n    return new VarNode(nodeType, varType, name, defaultValue, readonly, childNodes, config, nameDisplay, iconPath)\r\n  }\r\n  // leaf节点或无children\r\n  // **新增：将 iconPath 传递给 VarNode 构造函数**\r\n  return new VarNode(nodeType, varType, name, defaultValue, readonly, [], config, nameDisplay, iconPath)\r\n}\r\n\r\nexport function createTreeFromConfig(struct: NodeStructure): VarTree {\r\n  const rootNode = createNodeFromConfig(struct)\r\n  const tree = new VarTree(rootNode)\r\n  tree._initializeTree() // 初始化树结构\r\n  return tree\r\n}\r\n\r\n// // 示例nodeStructure：\r\n// const simpleNodeStructure: NodeStructure = {\r\n//   varType: 'string',\r\n//   nodeType: 'leaf',\r\n//   name: 'exampleString',\r\n//   defaultValue: 'Hello, World!',\r\n//   readonly: false,\r\n//   config: {},\r\n//   children: [],\r\n//   iconPath: 'path/to/simple-icon.svg' // **示例新增**\r\n// }\r\n// const complexNodeStructure: NodeStructure = {\r\n//   varType: 'dict',\r\n//   nodeType: 'dict',\r\n//   name: 'userProfile',\r\n//   defaultValue: null,\r\n//   readonly: false,\r\n//   config: {},\r\n//   iconPath: 'path/to/user-profile-icon.svg', // **示例新增**\r\n//   children: [\r\n//     {\r\n//       varType: 'string',\r\n//       nodeType: 'leaf',\r\n//       name: 'username',\r\n//       defaultValue: 'JohnDoe',\r\n//       readonly: false,\r\n//       iconPath: 'path/to/username-icon.svg' // **示例新增**\r\n//     },\r\n//     {\r\n//       varType: 'number',\r\n//       nodeType: 'leaf',\r\n//       name: 'age',\r\n//       defaultValue: 30,\r\n//       readonly: false\r\n//     },\r\n//     {\r\n//       varType: 'dict',\r\n//       nodeType: 'dict',\r\n//       name: 'address',\r\n//       defaultValue: null,\r\n//       readonly: false,\r\n//       iconPath: 'path/to/address-icon.svg', // **示例新增**\r\n//       children: [\r\n//         {\r\n//           varType: 'string',\r\n//           nodeType: 'leaf',\r\n//           name: 'city',\r\n//           defaultValue: 'New York',\r\n//           readonly: false\r\n//         },\r\n//         {\r\n//           varType: 'string',\r\n//           nodeType: 'leaf',\r\n//           name: 'country',\r\n//           defaultValue: 'USA',\r\n//           readonly: false\r\n//         }\r\n//       ]\r\n//     },\r\n//     {\r\n//       varType: 'dynamiclist',\r\n//       nodeType: 'list',\r\n//       name: 'hobbies',\r\n//       defaultValue: [],\r\n//       readonly: false,\r\n//       iconPath: 'path/to/hobbies-icon.svg', // **示例新增**\r\n//       children: [\r\n//         {\r\n//           varType: 'string',\r\n//           nodeType: 'leaf',\r\n//           name: '',\r\n//           defaultValue: '',\r\n//           readonly: false\r\n//         }\r\n//       ]\r\n//     }\r\n//   ]\r\n// }\r\n\r\n// 快速创建，使用元组创建一个NodeStructure对象\r\nexport function createNodeStructure(\r\n  varType: VarTypeString,\r\n  nodeType: NodeTypeString = 'leaf',\r\n  name: string = '',\r\n  defaultValue: VarNodeValue = null,\r\n  readonly: boolean = false,\r\n  config: VarNodeConfig | null = null,\r\n  children: NodeStructure[] = [],\r\n  nameDisplay:string = '',\r\n  iconPath: string = '' // **新增参数**\r\n): NodeStructure {\r\n  return {\r\n    varType,\r\n    nodeType,\r\n    name,\r\n    defaultValue,\r\n    readonly,\r\n    config: config || {},\r\n    children,\r\n    nameDisplay,\r\n    iconPath // **新增：返回对象中包含 iconPath**\r\n  }\r\n}\r\nexport const cns = createNodeStructure\r\n\r\nexport function isNodeStructure(obj: any): obj is NodeStructure {\r\n  if (obj?.children && Array.isArray(obj.children)){\r\n    for (const child of obj.children) {\r\n      if (!isNodeStructure(child)) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return obj && typeof obj === 'object' && 'varType' in obj && 'nodeType' in obj\r\n}","import { VarTree,SearchMethod, SearchResultHandler, createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\nconst customerIdParamSearchStructure = cns('dict','dict','Search',null,false,{},[\r\n  cns('dict','dict','include',null,false,{},[\r\n    cns('number','leaf','contains',null,false,{},[]),\r\n    cns('number','leaf','equal to',null,false,{},[]),\r\n    cns('number','leaf','starts with',null,false,{},[]),\r\n    cns('number','leaf','ends with',null,false,{},[]),\r\n    cns('number','leaf','less than',null,false,{},[]),\r\n    cns('number','leaf','greater than',null,false,{},[]),\r\n  ]),\r\n  cns('dict','dict','exclude',null,false,{},[\r\n    cns('number','leaf','contains',null,false,{},[]),\r\n    cns('number','leaf','equal to',null,false,{},[]),\r\n    cns('number','leaf','starts with',null,false,{},[]),\r\n    cns('number','leaf','ends with',null,false,{},[]),\r\n    cns('number','leaf','less than',null,false,{},[]),\r\n    cns('number','leaf','greater than',null,false,{},[]),\r\n  ]),\r\n])\r\nconst customerIdParamSearchTree = createTreeFromConfig(customerIdParamSearchStructure);\r\n\r\nexport const customerSearch:SearchMethod[] = [\r\n  {\r\n    name: '顾客搜索',\r\n    paramTree: customerIdParamSearchTree,\r\n    serviceUrl: '/api/search/customer'\r\n  }\r\n]\r\n\r\nconst bpParamSearchStructure = cns('dict', 'dict', 'params', null, false, {hideLabel:true}, [\r\n  cns('dict','dict','Condition Search',null,false,{},[\r\n    cns('string','leaf','Customer',null,false,{searchMethods:customerSearch},[]),\r\n    cns('string','leaf','City',null,false,{},[]),\r\n    cns('string','leaf','Name',null,false,{},[]),\r\n    cns('string','leaf','Country Key',null,false,{},[]),\r\n    cns('string','leaf','Postal Code',null,false,{},[]),\r\n  ],),\r\n  cns('dict','dict','ID Search',null,false,{},[\r\n    cns('dict','dict','include',null,false,{},[\r\n    cns('number','leaf','contains',null,false,{},[]),\r\n    cns('number','leaf','equal to',null,false,{},[]),\r\n    cns('number','leaf','starts with',null,false,{},[]),\r\n    cns('number','leaf','ends with',null,false,{},[]),\r\n    cns('number','leaf','less than',null,false,{},[]),\r\n    cns('number','leaf','greater than',null,false,{},[]),\r\n    ]),\r\n    cns('dict','dict','exclude',null,false,{},[\r\n      cns('number','leaf','contains',null,false,{},[]),\r\n      cns('number','leaf','equal to',null,false,{},[]),\r\n      cns('number','leaf','starts with',null,false,{},[]),\r\n      cns('number','leaf','ends with',null,false,{},[]),\r\n      cns('number','leaf','less than',null,false,{},[]),\r\n      cns('number','leaf','greater than',null,false,{},[]),\r\n    ]),\r\n  ])\r\n],\"\");\r\nconst bpParamSearchTree = createTreeFromConfig(bpParamSearchStructure);\r\n\r\nconst quotationIdParamSearchStructure = cns('dict','dict','Search',null,false,{},[\r\n  cns('dict','dict','include',null,false,{},[\r\n    cns('number','leaf','contains',null,false,{},[]),\r\n    cns('number','leaf','equal to',null,false,{},[]),\r\n    cns('number','leaf','starts with',null,false,{},[]),\r\n    cns('number','leaf','ends with',null,false,{},[]),\r\n    cns('number','leaf','less than',null,false,{},[]),\r\n    cns('number','leaf','greater than',null,false,{},[]),\r\n  ]),\r\n  cns('dict','dict','exclude',null,false,{},[\r\n    cns('number','leaf','contains',null,false,{},[]),\r\n    cns('number','leaf','equal to',null,false,{},[]),\r\n    cns('number','leaf','starts with',null,false,{},[]),\r\n    cns('number','leaf','ends with',null,false,{},[]),\r\n    cns('number','leaf','less than',null,false,{},[]),\r\n    cns('number','leaf','greater than',null,false,{},[]),\r\n  ]),\r\n]);\r\nconst quotationIdParamSearchTree = createTreeFromConfig(quotationIdParamSearchStructure);\r\n\r\n\r\nexport const bpSearch: SearchMethod[] = [\r\n  {\r\n    name: '业务伙伴搜索',\r\n    paramTree: bpParamSearchTree,\r\n    serviceUrl: '/api/search/business-partner'\r\n  }\r\n]\r\n\r\nexport const GLAccountSearch: SearchMethod[] = [\r\n  {\r\n    name: 'G/L Account search',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/gl-account',\r\n  }\r\n]\r\n\r\nexport const CurrencyUnitSearch: SearchMethod[] = [\r\n  {\r\n    name: 'Currency Unit search',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/currency-unit',\r\n  }\r\n]\r\n\r\nexport const relationSearch: SearchMethod[] = [\r\n  {\r\n    name: '关系搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/relation'\r\n  }\r\n]\r\n\r\nexport const inquiryTypeSearch: SearchMethod[] = [\r\n  {\r\n    name: '询价类型搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/inquiry-type'\r\n  }\r\n]\r\n\r\nexport const salesOrgSearch: SearchMethod[] = [\r\n  {\r\n    name: '销售组织搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/sales-org'\r\n  }\r\n]\r\n\r\nexport const distributionChannelSearch: SearchMethod[] = [\r\n  {\r\n    name: '分销渠道搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/distribution-channel'\r\n  }\r\n]\r\n\r\nexport const divisionSearch: SearchMethod[] = [\r\n  {\r\n    name: '部门搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/division'\r\n  }\r\n]\r\n\r\nexport const inquiryIdSearch: SearchMethod[] = [\r\n  {\r\n    name: '询价单搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/inquiry-id'\r\n  }\r\n]\r\n\r\nexport const deliveryIdSearch: SearchMethod[] = [\r\n  {\r\n    name: '交货单搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/delivery-id'\r\n  }\r\n]\r\n\r\nexport const materialSearch: SearchMethod[] = [\r\n  {\r\n    name: '物料搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/material'\r\n  }\r\n]\r\n\r\nexport const plantSearch: SearchMethod[] = [\r\n  {\r\n    name: '工厂搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/plant'\r\n  }\r\n]\r\n\r\nexport const storageLocationSearch: SearchMethod[] = [\r\n  {\r\n    name: '存储位置搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/storage-location'\r\n  }\r\n]\r\n\r\nexport const quotationIdSearch: SearchMethod[] = [\r\n  {\r\n    name: '报价单搜索',\r\n    paramTree: quotationIdParamSearchTree,\r\n    serviceUrl: '/api/search/quotation-id'\r\n  }\r\n]\r\n\r\nconst soParamSearchStructure  = cns('dict', 'dict', 'params', null, false, {}, [\r\n  cns('string', 'leaf', 'quotation_id', '', false,{searchMethods:quotationIdSearch}),\r\n  cns('string','leaf','soldToParty','',false,{searchMethods: bpSearch}),\r\n  cns('string','leaf','soldToParty','',false,{searchMethods:bpSearch}),\r\n  cns('string','leaf',\"search_term\",'',false),\r\n]);\r\nconst soParamSearchTree = createTreeFromConfig(soParamSearchStructure);\r\n\r\nexport const salesOrderIdSearch: SearchMethod[] = [\r\n  {\r\n    name: '销售订单搜索',\r\n    paramTree: soParamSearchTree,\r\n    serviceUrl: '/api/search/salesOrder-id'\r\n  }\r\n]\r\nexport const billingDocumentIdSearch: SearchMethod[] = [\r\n  {\r\n    name: '开票凭证搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/billing-document-id',\r\n    resultHeaderDisplay: {\r\n      'result': '开票凭证号',\r\n      'soldToParty': '售达方',\r\n      'netValue': '净值',\r\n      'currency': '货币'\r\n    }\r\n  }\r\n]\r\n\r\nexport const soldToPartySearch: SearchMethod[] = [\r\n  {\r\n    name: '售达方搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/sold-to-party',\r\n    resultHeaderDisplay: {\r\n      'result': '售达方',\r\n      'city': '城市',\r\n      'country': '国家'\r\n    }\r\n  }\r\n]\r\n\r\nexport const billToPartySearch: SearchMethod[] = [\r\n  {\r\n    name: '开票方搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/bill-to-party',\r\n    resultHeaderDisplay: {\r\n      'result': '开票方',\r\n      'city': '城市',\r\n      'country': '国家'\r\n    }\r\n  }\r\n]\r\n\r\nexport const payerPartySearch: SearchMethod[] = [\r\n  {\r\n    name: '付款方搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/payer-party',\r\n    resultHeaderDisplay: {\r\n      'result': '付款方',\r\n      'city': '城市',\r\n      'country': '国家'\r\n    }\r\n  }\r\n]\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Teleport as _Teleport, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"stage-container\"\n}\nconst _hoisted_2 = { class: \"bottom-bar\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"disabled\"]\n\nimport { ref, toRefs, computed, onMounted } from 'vue'\r\n\r\n// 定义钩子函数类型\r\ntype NavigationHook = (currentStage: number, targetStage: number) => boolean | Promise<boolean>\r\ntype AfterNavigationHook = (currentStage: number, targetStage: number) => void | Promise<void>\r\n\r\nconst hideMagicString = \"/hide\"\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'AppContent',\n  props: {\n    stages: {},\n    footerConfig: {},\n    beforeNext: { type: Function },\n    beforePrev: { type: Function },\n    afterNext: { type: Function },\n    afterPrev: { type: Function },\n    showNavButtons: { type: Boolean },\n    prevText: {},\n    nextText: {},\n    hideBottomBar: { type: Boolean }\n  },\n  emits: [\"stage-change\", \"next\", \"prev\"],\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\r\nconst bottomBarTo = ref('body')\r\nonMounted(() => {\r\n  // 确保底部导航栏在应用内容容器内\r\n  bottomBarTo.value = '#application-layout'\r\n})\r\n\r\nconst props = __props\r\n\r\nconst showBottomBar = computed(() => {\r\n  return props.hideBottomBar?false:true\r\n})\r\n\r\nconst emit = __emit\r\n\r\nconst { stages } = toRefs(props)\r\nconst currentStage = ref(0)\r\nconst isNavigating = ref(false)\r\nconst footerMessage = ref(\"\")\r\n\r\n// 切换到指定stage\r\nasync function goToStage(index: number) {\r\n  if (index >= 0 && index < stages.value.length && index !== currentStage.value) {\r\n    const oldStage = currentStage.value\r\n    currentStage.value = index\r\n    emit('stage-change', index, oldStage)\r\n  }\r\n}\r\n\r\n// 下一步处理函数\r\nasync function handleNext() {\r\n  if (isNavigating.value) {\r\n    return\r\n  }\r\n  isNavigating.value = true\r\n  try {\r\n    // 执行前置钩子\r\n    if (props.beforeNext) {\r\n      const canProceed = await props.beforeNext(currentStage.value, currentStage.value + 1)\r\n      if (!canProceed) {\r\n        isNavigating.value = false\r\n        return\r\n      }\r\n    }\r\n    if (currentStage.value >= stages.value.length - 1) {\r\n      isNavigating.value = false\r\n      return\r\n    }\r\n\r\n    const _currentStage = currentStage.value\r\n    const _targetStage = currentStage.value + 1\r\n\r\n    emit('next', currentStage.value)\r\n    await goToStage(currentStage.value + 1)\r\n\r\n    // 执行后置钩子\r\n    if (props.afterNext) {\r\n      await props.afterNext(_currentStage, _targetStage)\r\n    }\r\n  } finally {\r\n    isNavigating.value = false\r\n  }\r\n}\r\n\r\n// 上一步处理函数\r\nasync function handlePrev() {\r\n  if (isNavigating.value || currentStage.value <= 0) return\r\n\r\n  isNavigating.value = true\r\n  try {\r\n    // 执行前置钩子\r\n    if (props.beforePrev) {\r\n      const canProceed = await props.beforePrev(currentStage.value, currentStage.value - 1)\r\n      if (!canProceed) {\r\n        return\r\n      }\r\n    }\r\n    \r\n    const _currentStage = currentStage.value\r\n    const _targetStage = currentStage.value + 1\r\n\r\n    emit('prev', currentStage.value)\r\n    await goToStage(currentStage.value - 1)\r\n\r\n    // 执行后置钩子\r\n    if (props.afterPrev) {\r\n      await props.afterPrev(_currentStage, _targetStage)\r\n    }\r\n  } finally {\r\n    isNavigating.value = false\r\n  }\r\n}\r\n\r\n// 兼容旧的next/prev方法\r\nfunction next() {\r\n  handleNext()\r\n}\r\n\r\nfunction prev() {\r\n  handlePrev()\r\n}\r\n\r\n// 控制按钮显示和自定义\r\nconst defaultFooterButtons = computed(() => ({\r\n  showPrev: currentStage.value > 0,\r\n  // showNext: currentStage.value < stages.value.length - 1,\r\n  showNext: true,\r\n  prevText: props.prevText || hideMagicString,\r\n  nextText: props.nextText || 'Execute'\r\n}))\r\n\r\nconst stageFooterConfig = computed(() => {\r\n  // 支持每个stage自定义footer按钮显示与否和文本\r\n  // 用法：<AppContent :footer-config=\"[{showPrev: false, nextText: '完成'}]\"/>\r\n  return props.footerConfig?.[currentStage.value] || {}\r\n})\r\n\r\nconst mergedFooterButtons = computed(() => ({\r\n  ...defaultFooterButtons.value,\r\n  ...stageFooterConfig.value\r\n}))\r\n\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\n\r\n// 暴露的方法和属性\r\n__expose({\r\n  forceUpdate,\r\n  footerMessage,\r\n  currentStage,\r\n  goToStage,\r\n  next,\r\n  prev,\r\n  handleNext,\r\n  handlePrev,\r\n  isNavigating,\r\n  // 获取当前stage名称\r\n  getCurrentStageName: () => stages.value[currentStage.value],\r\n  // 获取总stage数量\r\n  getTotalStages: () => stages.value.length,\r\n  // 是否是第一个stage\r\n  isFirstStage: () => currentStage.value === 0,\r\n  // 是否是最后一个stage\r\n  isLastStage: () => currentStage.value === stages.value.length - 1,\r\n  // 重置到第一个stage\r\n  reset: () => goToStage(0)\r\n})\r\n\r\nconst allInterfaces = computed(() => ({\r\n  allProps: props,\r\n  currentStage: currentStage.value,\r\n  stageName: stages.value[currentStage.value],\r\n  isFirstStage: currentStage.value === 0,\r\n  isLastStage: currentStage.value === stages.value.length - 1,\r\n  totalStages: stages.value.length,\r\n  goToStage,\r\n  next: handleNext,\r\n  prev: handlePrev,\r\n  isNavigating: isNavigating.value\r\n}))\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"page-content\",\n    key: forceUpdateKey.value\n  }, [\n    (currentStage.value >= 0 && currentStage.value < _unref(stages).length)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _renderSlot(_ctx.$slots, `stage-${_unref(stages)[currentStage.value]}`, _normalizeProps(_guardReactiveProps(allInterfaces.value)), () => [\n            _createElementVNode(\"h2\", null, _toDisplayString(_unref(stages)[currentStage.value]), 1)\n          ]),\n          _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"bottom-bar-spacing-block\" }, null, -1)),\n          (showBottomBar.value && _unref(stages).length > 0)\n            ? (_openBlock(), _createBlock(_Teleport, {\n                key: 0,\n                to: bottomBarTo.value\n              }, [\n                _createElementVNode(\"div\", _hoisted_2, [\n                  _createElementVNode(\"p\", null, _toDisplayString(footerMessage.value), 1),\n                  _renderSlot(_ctx.$slots, \"footer-content-left\", _normalizeProps(_guardReactiveProps(allInterfaces.value))),\n                  _cache[0] || (_cache[0] = _createElementVNode(\"div\", { class: \"bottom-bar-spacer\" }, null, -1)),\n                  _renderSlot(_ctx.$slots, \"footer-content-right\", _normalizeProps(_guardReactiveProps(allInterfaces.value))),\n                  (mergedFooterButtons.value.showPrev && mergedFooterButtons.value.prevText != hideMagicString)\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        onClick: handlePrev,\n                        class: \"nav-button prev-button\",\n                        disabled: isNavigating.value\n                      }, _toDisplayString(mergedFooterButtons.value.prevText), 9, _hoisted_3))\n                    : _createCommentVNode(\"\", true),\n                  (mergedFooterButtons.value.showNext && mergedFooterButtons.value.nextText != hideMagicString)\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 1,\n                        onClick: handleNext,\n                        class: \"nav-button next-button\",\n                        disabled: isNavigating.value\n                      }, _toDisplayString(mergedFooterButtons.value.nextText), 9, _hoisted_4))\n                    : _createCommentVNode(\"\", true)\n                ])\n              ], 8, [\"to\"]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"page-content\" :key=\"forceUpdateKey\">\r\n    <!-- 只显示当前stage -->\r\n    <div\r\n      v-if=\"currentStage >= 0 && currentStage < stages.length\"\r\n      class=\"stage-container\"\r\n    >\r\n      <slot\r\n        :name=\"`stage-${stages[currentStage]}`\"\r\n        v-bind=\"allInterfaces\"\r\n      >\r\n        <!-- 默认内容 -->\r\n        <h2>{{ stages[currentStage] }}</h2>\r\n      </slot>\r\n\r\n      <span class=\"bottom-bar-spacing-block\"></span>\r\n\r\n      <teleport\r\n        :to=\"bottomBarTo\"\r\n        v-if=\"showBottomBar && stages.length > 0\"\r\n      >\r\n        <!-- 底部导航栏 -->\r\n        <div class=\"bottom-bar\">\r\n          <!-- 自定义插槽内容 -->\r\n          <p>{{ footerMessage }}</p>\r\n          <slot name=\"footer-content-left\" v-bind=\"allInterfaces\"></slot>\r\n  \r\n          <div class=\"bottom-bar-spacer\"></div>\r\n  \r\n          <slot name=\"footer-content-right\" v-bind=\"allInterfaces\"></slot>\r\n  \r\n          <!-- 导航按钮 -->\r\n          <button\r\n            v-if=\"mergedFooterButtons.showPrev && mergedFooterButtons.prevText != hideMagicString\"\r\n            @click=\"handlePrev\"\r\n            class=\"nav-button prev-button\"\r\n            :disabled=\"isNavigating\"\r\n          >\r\n            {{ mergedFooterButtons.prevText }}\r\n          </button>\r\n  \r\n          <button\r\n            v-if=\"mergedFooterButtons.showNext && mergedFooterButtons.nextText != hideMagicString\"\r\n            @click=\"handleNext\"\r\n            class=\"nav-button next-button\"\r\n            :disabled=\"isNavigating\"\r\n          >\r\n            {{ mergedFooterButtons.nextText }}\r\n          </button>\r\n        </div>\r\n      </teleport>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, toRefs, defineEmits, computed, onMounted } from 'vue'\r\n\r\n// 定义钩子函数类型\r\ntype NavigationHook = (currentStage: number, targetStage: number) => boolean | Promise<boolean>\r\ntype AfterNavigationHook = (currentStage: number, targetStage: number) => void | Promise<void>\r\n\r\nconst bottomBarTo = ref('body')\r\nonMounted(() => {\r\n  // 确保底部导航栏在应用内容容器内\r\n  bottomBarTo.value = '#application-layout'\r\n})\r\n\r\nconst props = defineProps<{\r\n  stages: string[]\r\n  footerConfig?: any[]\r\n  // 导航钩子函数\r\n  beforeNext?: NavigationHook\r\n  beforePrev?: NavigationHook\r\n  afterNext?: AfterNavigationHook\r\n  afterPrev?: AfterNavigationHook\r\n  // 按钮显示控制\r\n  showNavButtons?: boolean\r\n  // 自定义按钮文本\r\n  prevText?: string\r\n  nextText?: string\r\n  hideBottomBar?: boolean\r\n}>()\r\n\r\nconst showBottomBar = computed(() => {\r\n  return props.hideBottomBar?false:true\r\n})\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'stage-change', newStage: number, oldStage: number): void\r\n  (e: 'next', currentStage: number): void\r\n  (e: 'prev', currentStage: number): void\r\n}>()\r\n\r\nconst { stages } = toRefs(props)\r\nconst currentStage = ref(0)\r\nconst isNavigating = ref(false)\r\nconst footerMessage = ref(\"\")\r\n\r\n// 切换到指定stage\r\nasync function goToStage(index: number) {\r\n  if (index >= 0 && index < stages.value.length && index !== currentStage.value) {\r\n    const oldStage = currentStage.value\r\n    currentStage.value = index\r\n    emit('stage-change', index, oldStage)\r\n  }\r\n}\r\n\r\n// 下一步处理函数\r\nasync function handleNext() {\r\n  if (isNavigating.value) {\r\n    return\r\n  }\r\n  isNavigating.value = true\r\n  try {\r\n    // 执行前置钩子\r\n    if (props.beforeNext) {\r\n      const canProceed = await props.beforeNext(currentStage.value, currentStage.value + 1)\r\n      if (!canProceed) {\r\n        isNavigating.value = false\r\n        return\r\n      }\r\n    }\r\n    if (currentStage.value >= stages.value.length - 1) {\r\n      isNavigating.value = false\r\n      return\r\n    }\r\n\r\n    const _currentStage = currentStage.value\r\n    const _targetStage = currentStage.value + 1\r\n\r\n    emit('next', currentStage.value)\r\n    await goToStage(currentStage.value + 1)\r\n\r\n    // 执行后置钩子\r\n    if (props.afterNext) {\r\n      await props.afterNext(_currentStage, _targetStage)\r\n    }\r\n  } finally {\r\n    isNavigating.value = false\r\n  }\r\n}\r\n\r\n// 上一步处理函数\r\nasync function handlePrev() {\r\n  if (isNavigating.value || currentStage.value <= 0) return\r\n\r\n  isNavigating.value = true\r\n  try {\r\n    // 执行前置钩子\r\n    if (props.beforePrev) {\r\n      const canProceed = await props.beforePrev(currentStage.value, currentStage.value - 1)\r\n      if (!canProceed) {\r\n        return\r\n      }\r\n    }\r\n    \r\n    const _currentStage = currentStage.value\r\n    const _targetStage = currentStage.value + 1\r\n\r\n    emit('prev', currentStage.value)\r\n    await goToStage(currentStage.value - 1)\r\n\r\n    // 执行后置钩子\r\n    if (props.afterPrev) {\r\n      await props.afterPrev(_currentStage, _targetStage)\r\n    }\r\n  } finally {\r\n    isNavigating.value = false\r\n  }\r\n}\r\n\r\n// 兼容旧的next/prev方法\r\nfunction next() {\r\n  handleNext()\r\n}\r\n\r\nfunction prev() {\r\n  handlePrev()\r\n}\r\n\r\n// 控制按钮显示和自定义\r\nconst defaultFooterButtons = computed(() => ({\r\n  showPrev: currentStage.value > 0,\r\n  // showNext: currentStage.value < stages.value.length - 1,\r\n  showNext: true,\r\n  prevText: props.prevText || hideMagicString,\r\n  nextText: props.nextText || 'Execute'\r\n}))\r\n\r\nconst stageFooterConfig = computed(() => {\r\n  // 支持每个stage自定义footer按钮显示与否和文本\r\n  // 用法：<AppContent :footer-config=\"[{showPrev: false, nextText: '完成'}]\"/>\r\n  return props.footerConfig?.[currentStage.value] || {}\r\n})\r\n\r\nconst mergedFooterButtons = computed(() => ({\r\n  ...defaultFooterButtons.value,\r\n  ...stageFooterConfig.value\r\n}))\r\n\r\nconst hideMagicString = \"/hide\"\r\n\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\n\r\n// 暴露的方法和属性\r\ndefineExpose({\r\n  forceUpdate,\r\n  footerMessage,\r\n  currentStage,\r\n  goToStage,\r\n  next,\r\n  prev,\r\n  handleNext,\r\n  handlePrev,\r\n  isNavigating,\r\n  // 获取当前stage名称\r\n  getCurrentStageName: () => stages.value[currentStage.value],\r\n  // 获取总stage数量\r\n  getTotalStages: () => stages.value.length,\r\n  // 是否是第一个stage\r\n  isFirstStage: () => currentStage.value === 0,\r\n  // 是否是最后一个stage\r\n  isLastStage: () => currentStage.value === stages.value.length - 1,\r\n  // 重置到第一个stage\r\n  reset: () => goToStage(0)\r\n})\r\n\r\nconst allInterfaces = computed(() => ({\r\n  allProps: props,\r\n  currentStage: currentStage.value,\r\n  stageName: stages.value[currentStage.value],\r\n  isFirstStage: currentStage.value === 0,\r\n  isLastStage: currentStage.value === stages.value.length - 1,\r\n  totalStages: stages.value.length,\r\n  goToStage,\r\n  next: handleNext,\r\n  prev: handlePrev,\r\n  isNavigating: isNavigating.value\r\n}))\r\n</script>\r\n\r\n<style scoped>\r\n.page-content {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.stage-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 0;\r\n  width: 100%;\r\n}\r\n\r\n.bottom-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-top: 1px solid var(--theme-color-border);\r\n  position: fixed;\r\n  bottom: 1%;\r\n  left: 1%;\r\n  height: 3vh;\r\n  width: calc(100% - 2 * 1%);\r\n  border-radius: 5px;\r\n  background-color: rgba(47, 60, 72, 0.99);\r\n  color: #EEEED4;\r\n  flex-direction: row;\r\n  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);\r\n  gap: 5px;\r\n}\r\n\r\n.bottom-bar :global(button) {\r\n  padding: 0px 8px;\r\n}\r\n\r\n.bottom-bar > :global(.bottom-bar-spacer) {\r\n  flex-grow: 1;\r\n}\r\n\r\n.bottom-bar > :global(.nav-button) {\r\n  height: 30px;\r\n  border: 1px solid #d0d0d0;\r\n  border-radius: 4px;\r\n  background: white;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.bottom-bar > :global(.nav-button:hover:not(:disabled)) {\r\n  background: #f5f5f5;\r\n  border-color: #b0b0b0;\r\n}\r\n\r\n.bottom-bar > :global(.nav-button:disabled) {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.bottom-bar > :global(.prev-button) {\r\n  color: #666;\r\n}\r\n\r\n.bottom-bar > :global(.next-button) {\r\n  background: var(--theme-color-dark);\r\n  color: white;\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.bottom-bar > :global(.next-button:hover:not(:disabled)) {\r\n  background: var(--theme-color-darker);\r\n  border-color: var(--theme-color-darker);\r\n}\r\n\r\n.bottom-bar > :global(.next-button:active:not(:disabled)) {\r\n  background: var(--theme-color-lighter);\r\n  border-color: var(--theme-color-lighter);\r\n  color: var(--theme-color-darker);\r\n}\r\n\r\n.bottom-bar-spacing-block {\r\n  height: 3vh;\r\n}\r\n</style>","import script from \"./AppContent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./AppContent.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./AppContent.vue?vue&type=style&index=0&id=5cfd3e3e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5cfd3e3e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, vModelText as _vModelText, withKeys as _withKeys, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"string-input-container\" }\nconst _hoisted_2 = [\"readonly\", \"placeholder\"]\nconst _hoisted_3 = [\"onClick\"]\n\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmits } from './InputProps';\r\nimport {getPathString} from '../utils'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'StringInput',\n  props: {...SimpleInputBoxProps,\r\n  modelValue:{\r\n    type: [String, Number],\r\n    default: \"\"\r\n  }\r\n},\n  emits: SimpleInputBoxEmits,\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props\r\nconst emit = __emit\r\n\r\nconst slotScopeData = computed(() => ({\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  allProps: props,\r\n}));\r\nconst pathString = computed<string>(()=>getPathString(props.tree, props.nodePath))\r\nconst inputValue = ref<string>(\r\n  (typeof props.modelValue === 'number' || typeof props.modelValue === 'string')\r\n    ? String(props.modelValue)\r\n    : ''\r\n)\r\n\r\nconst showDropdown = ref<boolean>(false)\r\n\r\nconst showDropdownComputed = computed(() => {\r\n  return showDropdown.value && props.node?.varType === 'selection'\r\n})\r\n\r\nconst selectionOptions = computed(() => {\r\n  return props.node?.config?.options || []\r\n})\r\n\r\nconst inputClass = computed(()=>({\r\n        'string-input': true,\r\n        'readonly': props.readonly,\r\n        'selection-style': props.node?.varType === 'selection'\r\n      }))\r\n\r\n// 监听 inputValue 的变化，并 emit 给父组件\r\nwatch(inputValue, (newValue) => {\r\n  // console.log(\"inputValue 变化了，通过 watch emit 给父组件:\", newValue);\r\n  emit('update:modelValue', newValue);\r\n});\r\n\r\n// 监听 props.modelValue 的变化，同步更新 inputValue\r\n// 这用于处理父组件直接改变 modelValue 的情况 (例如重置)\r\nwatch(() => props.modelValue, (newValue) => {\r\n  const newStringValue = (typeof newValue === 'number' || typeof newValue === 'string')\r\n    ? String(newValue)\r\n    : '';\r\n\r\n  // 只有当 prop 的值与当前 inputValue 不同时才更新，避免无限循环\r\n  // 因为 inputValue 的变化也会通过 watch 触发 update:modelValue\r\n  if (inputValue.value !== newStringValue) {\r\n    // console.log(\"Prop modelValue 变化，同步到 inputValue:\", newStringValue);\r\n    inputValue.value = newStringValue;\r\n  }\r\n}, { immediate: true });\r\n\r\n\r\nfunction handleBlur() {\r\n  emit('blur', inputValue.value);\r\n}\r\n\r\nfunction handleFocus() {\r\n  emit('focus');\r\n}\r\n\r\nfunction handleEnter() {\r\n  if (props.node?.config?.validators !== undefined) {\r\n    for (const validator of props.node.config.validators) {\r\n      const isValid = validator.creteria(inputValue.value);\r\n      if (!isValid) {\r\n        const message = validator.message || '输入值不符合要求'\r\n        emit('validation-error', message);\r\n        return;\r\n      }\r\n    }\r\n  } else {\r\n    emit('validation-error', '');\r\n  }\r\n\r\n  emit('enter', inputValue.value);\r\n  const data = {\r\n    nodePath: props.nodePath\r\n  }\r\n  if (props.node){\r\n    emit('enter-from-node', props.node, inputValue.value, data);\r\n  }\r\n  emit('validation-error', '');\r\n}\r\n\r\nfunction handleInput() {\r\n  const data = {\r\n    nodePath: props.nodePath\r\n  }\r\n  if (props.node){\r\n    emit('input-from-node', props.node, inputValue.value, data);\r\n  }\r\n}\r\n\r\nfunction toggleShowDropdown() {\r\n  showDropdown.value = !showDropdown.value;\r\n}\r\nfunction setShowDropdown(v: boolean) {\r\n  showDropdown.value = v;\r\n}\r\n// 处理输入框点击事件\r\nfunction handleInputClick() {\r\n  if (props.node?.varType === 'selection' && !props.readonly) {\r\n    toggleShowDropdown()\r\n  }\r\n}\r\n\r\n// 选择下拉选项\r\nfunction selectOption(option: string) {\r\n  inputValue.value = option;\r\n  setShowDropdown(false)\r\n  handleEnter();\r\n}\r\n\r\n// 点击外部关闭下拉框\r\nfunction closeDropdown() {\r\n  if (showDropdown.value) {\r\n    setShowDropdown(false)\r\n  }\r\n}\r\n\r\n// 添加全局点击事件监听器\r\nonMounted(() => {\r\n  document.addEventListener('click', closeDropdown);\r\n});\r\n\r\n// 组件卸载时移除事件监听器\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', closeDropdown);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, `${pathString.value}--simple`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"input-wrapper\", {'has-dropdown': props.node?.varType === 'selection'}])\n      }, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((inputValue).value = $event)),\n          readonly: _ctx.readonly,\n          placeholder: _ctx.placeholder,\n          class: _normalizeClass(inputClass.value),\n          onBlur: handleBlur,\n          onFocus: handleFocus,\n          onKeyup: _withKeys(handleEnter, [\"enter\"]),\n          onClick: _withModifiers(handleInputClick, [\"stop\"]),\n          onInput: handleInput\n        }, null, 42, _hoisted_2), [\n          [_vModelText, inputValue.value]\n        ]),\n        (showDropdownComputed.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: \"dropdown-options\",\n              onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(selectionOptions.value, (option) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: option,\n                  class: \"dropdown-option\",\n                  onClick: _withModifiers(($event: any) => (selectOption(option)), [\"stop\"])\n                }, _toDisplayString(option), 9, _hoisted_3))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ], 2)\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"string-input-container\">\r\n    <slot\r\n      :name=\"`${pathString}--simple`\"\r\n      v-bind=\"slotScopeData\"\r\n    >\r\n      <div class=\"input-wrapper\" :class=\"{'has-dropdown': props.node?.varType === 'selection'}\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"inputValue\"\r\n          :readonly=\"readonly\"\r\n          :placeholder=\"placeholder\"\r\n          :class=\"inputClass\"\r\n          @blur=\"handleBlur\"\r\n          @focus=\"handleFocus\"\r\n          @keyup.enter=\"handleEnter\"\r\n          @click.stop=\"handleInputClick\"\r\n          @input=\"handleInput\"\r\n        >\r\n        <div v-if=\"showDropdownComputed\" class=\"dropdown-options\" @click.stop>\r\n          <div\r\n            v-for=\"option in selectionOptions\"\r\n            :key=\"option\"\r\n            class=\"dropdown-option\"\r\n            @click.stop=\"selectOption(option)\"\r\n          >\r\n            {{ option }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmits } from './InputProps';\r\nimport {getPathString} from '../utils'\r\n\r\nconst props = defineProps({...SimpleInputBoxProps,\r\n  modelValue:{\r\n    type: [String, Number],\r\n    default: \"\"\r\n  }\r\n})\r\nconst emit = defineEmits(SimpleInputBoxEmits)\r\n\r\nconst slotScopeData = computed(() => ({\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  allProps: props,\r\n}));\r\nconst pathString = computed<string>(()=>getPathString(props.tree, props.nodePath))\r\nconst inputValue = ref<string>(\r\n  (typeof props.modelValue === 'number' || typeof props.modelValue === 'string')\r\n    ? String(props.modelValue)\r\n    : ''\r\n)\r\n\r\nconst showDropdown = ref<boolean>(false)\r\n\r\nconst showDropdownComputed = computed(() => {\r\n  return showDropdown.value && props.node?.varType === 'selection'\r\n})\r\n\r\nconst selectionOptions = computed(() => {\r\n  return props.node?.config?.options || []\r\n})\r\n\r\nconst inputClass = computed(()=>({\r\n        'string-input': true,\r\n        'readonly': props.readonly,\r\n        'selection-style': props.node?.varType === 'selection'\r\n      }))\r\n\r\n// 监听 inputValue 的变化，并 emit 给父组件\r\nwatch(inputValue, (newValue) => {\r\n  // console.log(\"inputValue 变化了，通过 watch emit 给父组件:\", newValue);\r\n  emit('update:modelValue', newValue);\r\n});\r\n\r\n// 监听 props.modelValue 的变化，同步更新 inputValue\r\n// 这用于处理父组件直接改变 modelValue 的情况 (例如重置)\r\nwatch(() => props.modelValue, (newValue) => {\r\n  const newStringValue = (typeof newValue === 'number' || typeof newValue === 'string')\r\n    ? String(newValue)\r\n    : '';\r\n\r\n  // 只有当 prop 的值与当前 inputValue 不同时才更新，避免无限循环\r\n  // 因为 inputValue 的变化也会通过 watch 触发 update:modelValue\r\n  if (inputValue.value !== newStringValue) {\r\n    // console.log(\"Prop modelValue 变化，同步到 inputValue:\", newStringValue);\r\n    inputValue.value = newStringValue;\r\n  }\r\n}, { immediate: true });\r\n\r\n\r\nfunction handleBlur() {\r\n  emit('blur', inputValue.value);\r\n}\r\n\r\nfunction handleFocus() {\r\n  emit('focus');\r\n}\r\n\r\nfunction handleEnter() {\r\n  if (props.node?.config?.validators !== undefined) {\r\n    for (const validator of props.node.config.validators) {\r\n      const isValid = validator.creteria(inputValue.value);\r\n      if (!isValid) {\r\n        const message = validator.message || '输入值不符合要求'\r\n        emit('validation-error', message);\r\n        return;\r\n      }\r\n    }\r\n  } else {\r\n    emit('validation-error', '');\r\n  }\r\n\r\n  emit('enter', inputValue.value);\r\n  const data = {\r\n    nodePath: props.nodePath\r\n  }\r\n  if (props.node){\r\n    emit('enter-from-node', props.node, inputValue.value, data);\r\n  }\r\n  emit('validation-error', '');\r\n}\r\n\r\nfunction handleInput() {\r\n  const data = {\r\n    nodePath: props.nodePath\r\n  }\r\n  if (props.node){\r\n    emit('input-from-node', props.node, inputValue.value, data);\r\n  }\r\n}\r\n\r\nfunction toggleShowDropdown() {\r\n  showDropdown.value = !showDropdown.value;\r\n}\r\nfunction setShowDropdown(v: boolean) {\r\n  showDropdown.value = v;\r\n}\r\n// 处理输入框点击事件\r\nfunction handleInputClick() {\r\n  if (props.node?.varType === 'selection' && !props.readonly) {\r\n    toggleShowDropdown()\r\n  }\r\n}\r\n\r\n// 选择下拉选项\r\nfunction selectOption(option: string) {\r\n  inputValue.value = option;\r\n  setShowDropdown(false)\r\n  handleEnter();\r\n}\r\n\r\n// 点击外部关闭下拉框\r\nfunction closeDropdown() {\r\n  if (showDropdown.value) {\r\n    setShowDropdown(false)\r\n  }\r\n}\r\n\r\n// 添加全局点击事件监听器\r\nonMounted(() => {\r\n  document.addEventListener('click', closeDropdown);\r\n});\r\n\r\n// 组件卸载时移除事件监听器\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', closeDropdown);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* .string-input {\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.string-input:focus {\r\n  outline: none;\r\n  border-color: #409EFF;\r\n}\r\n\r\n.string-input.readonly {\r\n  background-color: #F5F7FA;\r\n  cursor: not-allowed;\r\n} */\r\n\r\n/* 当varType为selection时，添加下拉箭头样式 */\r\n.string-input.selection-style {\r\n  background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23666' d='m2 0-2 2h4zm0 5 2-2h-4z'/%3E%3C/svg%3E\");\r\n  background-repeat: no-repeat;\r\n  background-position: right 12px center;\r\n  background-size: 12px;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.string-input.selection-style.readonly {\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 输入框包装器 */\r\n.input-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n/* 确保所有输入框都有相同的box-sizing */\r\n.string-input {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n}\r\n\r\n/* 下拉选项容器 */\r\n.dropdown-options {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  background-color: var(--theme-color-page);\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  z-index: 10;\r\n  margin-top: 4px;\r\n}\r\n\r\n/* 下拉选项 */\r\n.dropdown-option {\r\n  padding: 8px 12px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.dropdown-option:hover {\r\n  background-color: var(--theme-color-light-a);\r\n}\r\n</style>","import script from \"./StringInput.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./StringInput.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./StringInput.vue?vue&type=style&index=0&id=190c66d9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-190c66d9\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, vModelText as _vModelText, withKeys as _withKeys, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"date-input-container\" }\nconst _hoisted_2 = { class: \"date-input-group\" }\nconst _hoisted_3 = [\"readonly\", \"placeholder\"]\nconst _hoisted_4 = [\"disabled\"]\nconst _hoisted_5 = [\"min\", \"max\"]\n\nimport { ref, computed, watch, nextTick } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmits } from './InputProps';\r\nimport {getPathString} from '../utils'\r\nimport { VarNode, VarTree } from '@/utils/VarTree'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DateInput',\n  props: SimpleInputBoxProps,\n  emits: SimpleInputBoxEmits,\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props\r\nconst emit = __emit\r\n\r\nconst displayValue = ref<string>(props.modelValue || '')\r\nconst dateValue = ref<string>(formatToDateInput(props.modelValue))\r\nconst showPicker = ref(false)\r\n\r\nconst slotScopeData = computed(() => ({\r\n  handleInput: handleTextInput,\r\n  handleTextInput: handleTextInput,\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  showDatePicker: showDatePicker,\r\n  handleDateChange: handleDateChange,\r\n  hideDatePicker: hideDatePicker,\r\n  allProps: props,\r\n}));\r\nconst pathString = computed<string>(()=>getPathString(props.tree, props.nodePath))\r\n\r\nconst inputClass = computed(() => ({\r\n  'date-input': true,\r\n  'readonly': props.readonly\r\n}))\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  displayValue.value = newValue || ''\r\n  dateValue.value = formatToDateInput(newValue)\r\n})\r\n\r\nfunction formatToDateInput(dateStr: string) {\r\n  if (!dateStr) return ''\r\n  try {\r\n    const date = new Date(dateStr)\r\n    if (isNaN(date.getTime())) return ''\r\n    const year = date.getFullYear()\r\n    const month = String(date.getMonth() + 1).padStart(2, '0')\r\n    const day = String(date.getDate()).padStart(2, '0')\r\n    return `${year}-${month}-${day}`\r\n  } catch {\r\n    return ''\r\n  }\r\n}\r\n\r\nfunction formatDisplayDate(dateStr: string) {\r\n  if (!dateStr) return ''\r\n  try {\r\n    const date = new Date(dateStr)\r\n    if (isNaN(date.getTime())) return dateStr\r\n    return date.toLocaleDateString('zh-CN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit'\r\n    })\r\n  } catch {\r\n    return dateStr\r\n  }\r\n}\r\n\r\nfunction handleTextInput() {\r\n  emit('update:modelValue', displayValue.value)\r\n  const data = {\r\n    nodePath: props.nodePath\r\n  }\r\n  if (props.node){\r\n    emit('input-from-node', props.node, displayValue.value, data);\r\n  }\r\n}\r\n\r\nfunction handleDateChange() {\r\n  if (dateValue.value) {\r\n    displayValue.value = formatDisplayDate(dateValue.value)\r\n    emit('update:modelValue', displayValue.value)\r\n  }\r\n  hideDatePicker()\r\n}\r\n\r\nfunction handleBlur() {\r\n  emit('blur', displayValue.value)\r\n}\r\n\r\nfunction handleEnter() {\r\n  if (props.node?.config?.validators !== undefined) {\r\n    for (const validator of props.node.config.validators) {\r\n      const isValid = validator.creteria(displayValue.value);\r\n      if (!isValid) {\r\n        const message = validator.message || '输入值不符合要求'\r\n        emit('validation-error', message);\r\n        return;\r\n      }\r\n    }\r\n  } else {\r\n    emit('validation-error', '');\r\n  }\r\n\r\n  emit('enter', displayValue.value);\r\n  if (props.node){\r\n    const stringValue = displayValue.value.toString()\r\n    const data = {\r\n      nodePath: props.nodePath\r\n    }\r\n    emit('enter-from-node', props.node, stringValue, data);\r\n  }\r\n  emit('validation-error', '');\r\n}\r\n\r\nfunction showDatePicker() {\r\n  if (props.readonly) return\r\n  showPicker.value = true\r\n  nextTick(() => {\r\n    const picker = document.querySelector<HTMLInputElement>('.date-picker')\r\n    if (picker) picker.focus()\r\n  })\r\n}\r\n\r\nfunction hideDatePicker() {\r\n  setTimeout(() => {\r\n    showPicker.value = false\r\n  }, 200)\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, `${pathString.value}--simple`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n      _renderSlot(_ctx.$slots, `${pathString.value}--simple-input-group`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((displayValue).value = $event)),\n            readonly: _ctx.readonly,\n            placeholder: _ctx.placeholder,\n            class: _normalizeClass(inputClass.value),\n            onInput: handleTextInput,\n            onBlur: handleBlur,\n            onKeyup: _withKeys(handleEnter, [\"enter\"])\n          }, null, 42, _hoisted_3), [\n            [_vModelText, displayValue.value]\n          ]),\n          (!_ctx.readonly)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                type: \"button\",\n                class: \"date-picker-btn\",\n                onClick: showDatePicker,\n                disabled: _ctx.readonly\n              }, _cache[2] || (_cache[2] = [\n                _createStaticVNode(\"<svg width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 18 18\\\" fill=\\\"none\\\" data-v-5402e6c8><rect x=\\\"3\\\" y=\\\"5\\\" width=\\\"14\\\" height=\\\"12\\\" rx=\\\"2\\\" stroke=\\\"#606266\\\" stroke-width=\\\"1.5\\\" fill=\\\"#fff\\\" data-v-5402e6c8></rect><path d=\\\"M3 8H17\\\" stroke=\\\"#606266\\\" stroke-width=\\\"1.5\\\" data-v-5402e6c8></path><rect x=\\\"6\\\" y=\\\"11\\\" width=\\\"2\\\" height=\\\"2\\\" rx=\\\"1\\\" fill=\\\"#606266\\\" data-v-5402e6c8></rect><rect x=\\\"9\\\" y=\\\"11\\\" width=\\\"2\\\" height=\\\"2\\\" rx=\\\"1\\\" fill=\\\"#606266\\\" data-v-5402e6c8></rect><rect x=\\\"12\\\" y=\\\"11\\\" width=\\\"2\\\" height=\\\"2\\\" rx=\\\"1\\\" fill=\\\"#606266\\\" data-v-5402e6c8></rect><path d=\\\"M7 3V6\\\" stroke=\\\"#606266\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" data-v-5402e6c8></path><path d=\\\"M13 3V6\\\" stroke=\\\"#606266\\\" stroke-width=\\\"1.5\\\" stroke-linecap=\\\"round\\\" data-v-5402e6c8></path></svg>\", 1)\n              ]), 8, _hoisted_4))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      (showPicker.value)\n        ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n            key: 0,\n            type: \"date\",\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((dateValue).value = $event)),\n            min: _ctx.config.minDate,\n            max: _ctx.config.maxDate,\n            onChange: handleDateChange,\n            onBlur: hideDatePicker,\n            class: \"date-picker\",\n            ref: \"datePicker\"\n          }, null, 40, _hoisted_5)), [\n            [_vModelText, dateValue.value]\n          ])\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"date-input-container\">\r\n    <slot\r\n      :name=\"`${pathString}--simple`\"\r\n      v-bind=\"slotScopeData\"\r\n    >    \r\n      <slot\r\n        :name=\"`${pathString}--simple-input-group`\"\r\n        v-bind=\"slotScopeData\"\r\n      >\r\n        <div class=\"date-input-group\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"displayValue\"\r\n            :readonly=\"readonly\"\r\n            :placeholder=\"placeholder\"\r\n            :class=\"inputClass\"\r\n            @input=\"handleTextInput\"\r\n            @blur=\"handleBlur\"\r\n            @keyup.enter=\"handleEnter\"\r\n          />\r\n          <button\r\n            v-if=\"!readonly\"\r\n            type=\"button\"\r\n            class=\"date-picker-btn\"\r\n            @click=\"showDatePicker\"\r\n            :disabled=\"readonly\"\r\n          >\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n              <rect x=\"3\" y=\"5\" width=\"14\" height=\"12\" rx=\"2\" stroke=\"#606266\" stroke-width=\"1.5\" fill=\"#fff\"/>\r\n              <path d=\"M3 8H17\" stroke=\"#606266\" stroke-width=\"1.5\"/>\r\n              <rect x=\"6\" y=\"11\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#606266\"/>\r\n              <rect x=\"9\" y=\"11\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#606266\"/>\r\n              <rect x=\"12\" y=\"11\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#606266\"/>\r\n              <path d=\"M7 3V6\" stroke=\"#606266\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\r\n              <path d=\"M13 3V6\" stroke=\"#606266\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </slot>\r\n      <input\r\n        v-if=\"showPicker\"\r\n        type=\"date\"\r\n        v-model=\"dateValue\"\r\n        :min=\"config.minDate\"\r\n        :max=\"config.maxDate\"\r\n        @change=\"handleDateChange\"\r\n        @blur=\"hideDatePicker\"\r\n        class=\"date-picker\"\r\n        ref=\"datePicker\"\r\n      />\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, watch, nextTick } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmits } from './InputProps';\r\nimport {getPathString} from '../utils'\r\nimport { VarNode, VarTree } from '@/utils/VarTree'\r\n\r\nconst props = defineProps(SimpleInputBoxProps)\r\nconst emit = defineEmits(SimpleInputBoxEmits)\r\n\r\nconst displayValue = ref<string>(props.modelValue || '')\r\nconst dateValue = ref<string>(formatToDateInput(props.modelValue))\r\nconst showPicker = ref(false)\r\n\r\nconst slotScopeData = computed(() => ({\r\n  handleInput: handleTextInput,\r\n  handleTextInput: handleTextInput,\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  showDatePicker: showDatePicker,\r\n  handleDateChange: handleDateChange,\r\n  hideDatePicker: hideDatePicker,\r\n  allProps: props,\r\n}));\r\nconst pathString = computed<string>(()=>getPathString(props.tree, props.nodePath))\r\n\r\nconst inputClass = computed(() => ({\r\n  'date-input': true,\r\n  'readonly': props.readonly\r\n}))\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  displayValue.value = newValue || ''\r\n  dateValue.value = formatToDateInput(newValue)\r\n})\r\n\r\nfunction formatToDateInput(dateStr: string) {\r\n  if (!dateStr) return ''\r\n  try {\r\n    const date = new Date(dateStr)\r\n    if (isNaN(date.getTime())) return ''\r\n    const year = date.getFullYear()\r\n    const month = String(date.getMonth() + 1).padStart(2, '0')\r\n    const day = String(date.getDate()).padStart(2, '0')\r\n    return `${year}-${month}-${day}`\r\n  } catch {\r\n    return ''\r\n  }\r\n}\r\n\r\nfunction formatDisplayDate(dateStr: string) {\r\n  if (!dateStr) return ''\r\n  try {\r\n    const date = new Date(dateStr)\r\n    if (isNaN(date.getTime())) return dateStr\r\n    return date.toLocaleDateString('zh-CN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit'\r\n    })\r\n  } catch {\r\n    return dateStr\r\n  }\r\n}\r\n\r\nfunction handleTextInput() {\r\n  emit('update:modelValue', displayValue.value)\r\n  const data = {\r\n    nodePath: props.nodePath\r\n  }\r\n  if (props.node){\r\n    emit('input-from-node', props.node, displayValue.value, data);\r\n  }\r\n}\r\n\r\nfunction handleDateChange() {\r\n  if (dateValue.value) {\r\n    displayValue.value = formatDisplayDate(dateValue.value)\r\n    emit('update:modelValue', displayValue.value)\r\n  }\r\n  hideDatePicker()\r\n}\r\n\r\nfunction handleBlur() {\r\n  emit('blur', displayValue.value)\r\n}\r\n\r\nfunction handleEnter() {\r\n  if (props.node?.config?.validators !== undefined) {\r\n    for (const validator of props.node.config.validators) {\r\n      const isValid = validator.creteria(displayValue.value);\r\n      if (!isValid) {\r\n        const message = validator.message || '输入值不符合要求'\r\n        emit('validation-error', message);\r\n        return;\r\n      }\r\n    }\r\n  } else {\r\n    emit('validation-error', '');\r\n  }\r\n\r\n  emit('enter', displayValue.value);\r\n  if (props.node){\r\n    const stringValue = displayValue.value.toString()\r\n    const data = {\r\n      nodePath: props.nodePath\r\n    }\r\n    emit('enter-from-node', props.node, stringValue, data);\r\n  }\r\n  emit('validation-error', '');\r\n}\r\n\r\nfunction showDatePicker() {\r\n  if (props.readonly) return\r\n  showPicker.value = true\r\n  nextTick(() => {\r\n    const picker = document.querySelector<HTMLInputElement>('.date-picker')\r\n    if (picker) picker.focus()\r\n  })\r\n}\r\n\r\nfunction hideDatePicker() {\r\n  setTimeout(() => {\r\n    showPicker.value = false\r\n  }, 200)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.date-input-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.date-input-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n/* .date-input {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px 0 0 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.2s;\r\n} */\r\n\r\n/* .date-input:focus {\r\n  outline: none;\r\n  border-color: #409EFF;\r\n} */\r\n\r\n/* .date-input.readonly {\r\n  background-color: #F5F7FA;\r\n  cursor: not-allowed;\r\n  border-radius: 4px;\r\n} */\r\n\r\n.date-picker-btn {\r\n  /* padding: 8px 12px; */\r\n  /* border: 1px solid #DCDFE6; */\r\n  border: none;\r\n  border-left: none;\r\n  border-radius: 0 4px 4px 0;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.date-picker-btn:hover:not(:disabled) {\r\n  background-color: #ECF5FF;\r\n}\r\n\r\n.date-picker-btn:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n\r\n.date-picker {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  margin-top: 2px;\r\n  padding: 8px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n</style>","import script from \"./DateInput.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./DateInput.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./DateInput.vue?vue&type=style&index=0&id=5402e6c8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5402e6c8\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, vModelCheckbox as _vModelCheckbox, withKeys as _withKeys, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"boolean-input-container\" }\nconst _hoisted_2 = { class: \"boolean-input-wrapper\" }\nconst _hoisted_3 = { class: \"var-checkbox\" }\nconst _hoisted_4 = [\"disabled\"]\n\nimport { ref, computed, watch } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmitsWithBool } from './InputProps';\r\nimport {getPathString} from '../utils'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'BooleanInput',\n  props: {\r\n  ...SimpleInputBoxProps,\r\n  modelValue: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n},\n  emits: SimpleInputBoxEmitsWithBool,\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props\r\nconst emit = __emit\r\n\r\nconst slotScopeData = computed(() => ({\r\n  handleInput: handleInput,\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  allProps: props,\r\n}));\r\n\r\nconst pathString = computed<string>(() => getPathString(props.tree, props.nodePath))\r\n\r\nconst inputValue = ref<boolean>(Boolean(props.modelValue))\r\n\r\nconst inputClass = computed(() => ({\r\n  'boolean-input': true,\r\n  'readonly': props.readonly\r\n}))\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  inputValue.value = Boolean(newValue)\r\n}, { immediate: true })\r\n\r\nfunction handleInput() {\r\n  emit('update:modelValue', inputValue.value);\r\n}\r\n\r\nfunction handleBlur() {\r\n  emit('blur', inputValue.value.toString());\r\n}\r\n\r\nfunction handleEnter() {\r\n  if (props.node?.config?.validators !== undefined) {\r\n    for (const validator of props.node.config.validators) {\r\n      const isValid = validator.creteria(inputValue.value);\r\n      if (!isValid) {\r\n        const message = validator.message || '输入值不符合要求'\r\n        emit('validation-error', message);\r\n        return;\r\n      }\r\n    }\r\n  } else {\r\n    emit('validation-error', '');\r\n  }\r\n\r\n  emit('enter', inputValue.value.toString());\r\n  if (props.node){\r\n    const stringValue = inputValue.value.toString()\r\n    const data = {\r\n      nodePath: props.nodePath\r\n    }\r\n    emit('enter-from-node', props.node, stringValue, data);\r\n  }\r\n  emit('validation-error', '');\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, `${pathString.value}--simple`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"label\", _hoisted_3, [\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"checkbox\",\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((inputValue).value = $event)),\n            disabled: _ctx.readonly,\n            class: _normalizeClass(inputClass.value),\n            onChange: handleInput,\n            onBlur: handleBlur,\n            onKeyup: _withKeys(handleEnter, [\"enter\"])\n          }, null, 42, _hoisted_4), [\n            [_vModelCheckbox, inputValue.value]\n          ]),\n          _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"checkmark\" }, null, -1))\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"boolean-input-container\">\r\n    <slot\r\n      :name=\"`${pathString}--simple`\"\r\n      v-bind=\"slotScopeData\"\r\n    >\r\n      <div class=\"boolean-input-wrapper\">\r\n        <label class=\"var-checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            v-model=\"inputValue\"\r\n            :disabled=\"readonly\"\r\n            :class=\"inputClass\"\r\n            @change=\"handleInput\"\r\n            @blur=\"handleBlur\"\r\n            @keyup.enter=\"handleEnter\"\r\n          />\r\n          <span class=\"checkmark\"></span>\r\n        </label>\r\n      </div>\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmitsWithBool } from './InputProps';\r\nimport {getPathString} from '../utils'\r\n\r\nconst props = defineProps({\r\n  ...SimpleInputBoxProps,\r\n  modelValue: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\nconst emit = defineEmits(SimpleInputBoxEmitsWithBool)\r\n\r\nconst slotScopeData = computed(() => ({\r\n  handleInput: handleInput,\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  allProps: props,\r\n}));\r\n\r\nconst pathString = computed<string>(() => getPathString(props.tree, props.nodePath))\r\n\r\nconst inputValue = ref<boolean>(Boolean(props.modelValue))\r\n\r\nconst inputClass = computed(() => ({\r\n  'boolean-input': true,\r\n  'readonly': props.readonly\r\n}))\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  inputValue.value = Boolean(newValue)\r\n}, { immediate: true })\r\n\r\nfunction handleInput() {\r\n  emit('update:modelValue', inputValue.value);\r\n}\r\n\r\nfunction handleBlur() {\r\n  emit('blur', inputValue.value.toString());\r\n}\r\n\r\nfunction handleEnter() {\r\n  if (props.node?.config?.validators !== undefined) {\r\n    for (const validator of props.node.config.validators) {\r\n      const isValid = validator.creteria(inputValue.value);\r\n      if (!isValid) {\r\n        const message = validator.message || '输入值不符合要求'\r\n        emit('validation-error', message);\r\n        return;\r\n      }\r\n    }\r\n  } else {\r\n    emit('validation-error', '');\r\n  }\r\n\r\n  emit('enter', inputValue.value.toString());\r\n  if (props.node){\r\n    const stringValue = inputValue.value.toString()\r\n    const data = {\r\n      nodePath: props.nodePath\r\n    }\r\n    emit('enter-from-node', props.node, stringValue, data);\r\n  }\r\n  emit('validation-error', '');\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.boolean-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.boolean-input-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.boolean-input {\r\n  width: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n}\r\n\r\n.boolean-input:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.6;\r\n}\r\n\r\n.boolean-label {\r\n  font-size: 14px;\r\n  color: #606266;\r\n  user-select: none;\r\n}\r\n\r\n.boolean-label.readonly {\r\n  color: #909399;\r\n}\r\n\r\n.boolean-input:focus {\r\n  outline-offset: 2px;\r\n}\r\n</style>","import script from \"./BooleanInput.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./BooleanInput.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./BooleanInput.vue?vue&type=style&index=0&id=1bacfce5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1bacfce5\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"param-input-container\" }\nconst _hoisted_2 = {\n  key: 1,\n  class: \"no-params\"\n}\n\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport { VarTree } from '@/utils/VarTree'\r\n\r\n// 定义props\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ParamInput',\n  props: {\n    varTree: {}\n  },\n  emits: [\"update\"],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props\r\n\r\n// 定义emits\r\nconst emit = __emit\r\n\r\n// 处理参数更新\r\nfunction handleUpdate(payload: any) {\r\n  emit('update', payload)\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.varTree)\n      ? (_openBlock(), _createBlock(VarBox, {\n          key: 0,\n          tree: _ctx.varTree,\n          onUpdate: handleUpdate\n        }, null, 8, [\"tree\"]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [\n          _createElementVNode(\"p\", null, \"此搜索方式无需输入参数\", -1)\n        ])))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"param-input-container\">\r\n    <VarBox\r\n      v-if=\"varTree\"\r\n      :tree=\"varTree\"\r\n      @update=\"handleUpdate\"\r\n    />\r\n    <div v-else class=\"no-params\">\r\n      <p>此搜索方式无需输入参数</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport { VarTree } from '@/utils/VarTree'\r\n\r\n// 定义props\r\nconst props = defineProps<{\r\n  varTree: VarTree | null\r\n}>()\r\n\r\n// 定义emits\r\nconst emit = defineEmits<{\r\n  (e: 'update', payload: any): void\r\n}>()\r\n\r\n// 处理参数更新\r\nfunction handleUpdate(payload: any) {\r\n  emit('update', payload)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.param-input-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.no-params {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: var(--color-text-primary);\r\n  font-family: var(--theme-font-family);\r\n}\r\n\r\n.no-params p {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n</style>","import script from \"./ParamInput.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ParamInput.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ParamInput.vue?vue&type=style&index=0&id=9716f4d2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9716f4d2\"]])\n\nexport default __exports__","import { SearchMethod } from '@/utils/VarTree'\r\n\r\nconst getAPIBaseUrl = () => {\r\n  return window.API_BASE_URL || 'http://localhost:3000'\r\n}\r\n\r\n// 搜索响应接口\r\nexport interface SearchResponse {\r\n  success: boolean\r\n  data: SearchResultItem[]\r\n  total: number\r\n  message?: string\r\n  error?: string\r\n}\r\n\r\n// 搜索结果项接口\r\nexport interface SearchResultItem {\r\n  id: string\r\n  result: string\r\n  description: string\r\n  [key: string]: any // 允许额外的字段\r\n}\r\n\r\n// 搜索服务类\r\nexport class SearchService {\r\n  /**\r\n   * 执行搜索请求\r\n   * @param method 搜索方法配置\r\n   * @param params 搜索参数\r\n   * @returns 搜索结果\r\n   */\r\n  static async executeSearch(method: SearchMethod, params: any): Promise<SearchResponse> {\r\n    try {\r\n      console.log('发送搜索请求:', {\r\n        url: `${getAPIBaseUrl()}${method.serviceUrl}`,\r\n        method: method.name,\r\n        params\r\n      })\r\n\r\n      const response = await fetch(`${getAPIBaseUrl()}${method.serviceUrl}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(params)\r\n      })\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP错误: ${response.status} ${response.statusText}`)\r\n      }\r\n\r\n      const result: SearchResponse = await response.json()\r\n      \r\n      console.log('搜索响应:', result)\r\n      \r\n      return result\r\n\r\n    } catch (error) {\r\n      console.error('搜索请求失败:', error)\r\n      \r\n      // 返回错误响应格式\r\n      return {\r\n        success: false,\r\n        data: [],\r\n        total: 0,\r\n        message: '搜索请求失败',\r\n        error: error instanceof Error ? error.message : '未知错误'\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 业务伙伴搜索\r\n   * @param params 搜索参数\r\n   */\r\n  static async searchBusinessPartner(params: {\r\n    bpId?: string\r\n    companyName?: string\r\n    bpType?: string\r\n  }): Promise<SearchResponse> {\r\n    const method: SearchMethod = {\r\n      name: '业务伙伴搜索',\r\n      paramTree: null,\r\n      serviceUrl: '/search/mock/business-partner'\r\n    }\r\n    \r\n    return this.executeSearch(method, params)\r\n  }\r\n\r\n  /**\r\n   * 产品搜索\r\n   * @param params 搜索参数\r\n   */\r\n  static async searchProduct(params: {\r\n    productCode?: string\r\n    productName?: string\r\n    minPrice?: number\r\n    maxPrice?: number\r\n  }): Promise<SearchResponse> {\r\n    const method: SearchMethod = {\r\n      name: '产品搜索',\r\n      paramTree: null,\r\n      serviceUrl: '/search/mock/product'\r\n    }\r\n    \r\n    return this.executeSearch(method, params)\r\n  }\r\n\r\n  /**\r\n   * 简单搜索\r\n   * @param query 搜索关键词\r\n   */\r\n  static async simpleSearch(query?: string): Promise<SearchResponse> {\r\n    const method: SearchMethod = {\r\n      name: '简单搜索',\r\n      paramTree: null,\r\n      serviceUrl: '/search/mock/simple'\r\n    }\r\n    \r\n    return this.executeSearch(method, { query })\r\n  }\r\n\r\n  /**\r\n   * 高级搜索\r\n   * @param params 高级搜索参数\r\n   */\r\n  static async advancedSearch(params: {\r\n    keyword?: string\r\n    category?: string\r\n    startDate?: string\r\n    endDate?: string\r\n    strict?: boolean\r\n  }): Promise<SearchResponse> {\r\n    const method: SearchMethod = {\r\n      name: '高级搜索',\r\n      paramTree: null,\r\n      serviceUrl: '/search/mock/advanced'\r\n    }\r\n    \r\n    return this.executeSearch(method, params)\r\n  }\r\n}\r\n\r\n// 导出默认实例\r\nexport default SearchService\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createVNode as _createVNode, unref as _unref, createBlock as _createBlock, withModifiers as _withModifiers, Teleport as _Teleport } from \"vue\"\n\nconst _hoisted_1 = { class: \"search-modal-header\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"search-modal-body\"\n}\nconst _hoisted_3 = {\n  key: 0,\n  class: \"search-method-selector\"\n}\nconst _hoisted_4 = { class: \"method-tabs\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = {\n  key: 0,\n  class: \"more-methods-dropdown\"\n}\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = { class: \"param-input-area\" }\nconst _hoisted_9 = {\n  key: 1,\n  class: \"search-modal-body\"\n}\nconst _hoisted_10 = { class: \"result-area\" }\nconst _hoisted_11 = {\n  key: 1,\n  class: \"no-results\"\n}\nconst _hoisted_12 = { class: \"search-modal-footer\" }\n\nimport { ref, computed, watch, onMounted } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport ParamInput from './ParamInput.vue'\r\nimport { VarTree, createTreeFromConfig, cns, SearchMethod } from '@/utils/VarTree'\r\nimport { SearchService, SearchResponse } from '@/api/searchService'\r\n\r\n// 定义props\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'SearchModal',\n  props: {\n    visible: { type: Boolean },\n    searchMethods: {}\n  },\n  emits: [\"close\", \"confirm\"],\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\r\nconst props = __props\r\n\r\nconst modalTo = ref('body')\r\n\r\nonMounted(() => {\r\n  // 确保底部导航栏在应用内容容器内\r\n  modalTo.value = '#application-layout'\r\n})\r\n\r\n// 定义emits\r\nconst emit = __emit\r\n\r\n// 响应式数据\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\nconst stage = ref(0) // 0: 参数输入阶段, 1: 结果展示阶段\r\nconst selectedMethodIndex = ref(0)\r\nconst resultTree: VarTree = createTreeFromConfig(\r\n      cns('dynamiclist', 'list', 'searchResults', [], false, {}, [], 'Results')\r\n    )\r\nconst showMoreMethods = ref(false)\r\nconst visibleMethodsCount = ref(3) // 最多显示3个方法标签\r\n\r\n// 计算属性\r\nconst currentMethod = computed(() => {\r\n  return props.searchMethods[selectedMethodIndex.value] || null\r\n})\r\n\r\n// 可见的搜索方法\r\nconst visibleMethods = computed(() => {\r\n  return props.searchMethods.slice(0, visibleMethodsCount.value)\r\n})\r\n\r\n// 隐藏的搜索方法\r\nconst hiddenMethods = computed(() => {\r\n  return props.searchMethods.slice(visibleMethodsCount.value)\r\n})\r\n\r\n// 是否有更多方法\r\nconst hasMoreMethods = computed(() => {\r\n  return props.searchMethods.length > visibleMethodsCount.value\r\n})\r\n\r\nconst stage0Title = computed(() => {\r\n  return props.searchMethods.length === 1 ? currentMethod.value.name : 'Search'\r\n})\r\n\r\nconst stage1Title = computed(() => {\r\n  return 'Search Result'\r\n})\r\n\r\n// 监听visible变化，重置状态\r\nwatch(() => props.visible, (newVisible) => {\r\n  if (newVisible) {\r\n    stage.value = 0\r\n    selectedMethodIndex.value = 0\r\n    \r\n    // 如果只有一个搜索方法且无需参数，直接进入stage 1并执行搜索\r\n    if (props.searchMethods.length === 1 && !props.searchMethods[0].paramTree) {\r\n      handleExecute()\r\n    }\r\n  }\r\n})\r\n\r\n// 处理参数更新\r\nfunction handleParamUpdate(payload: any) {\r\n  console.log(payload.value)\r\n}\r\n\r\n// 执行搜索\r\nasync function handleExecute() {\r\n  if (!currentMethod.value) return\r\n\r\n  try {\r\n    // 获取搜索参数\r\n    const searchParams = currentMethod.value.paramTree?.root?.currentValue || {}\r\n\r\n    console.log('执行搜索:', {\r\n      method: currentMethod.value.name,\r\n      params: searchParams,\r\n      url: currentMethod.value.serviceUrl\r\n    })\r\n\r\n    // 调用真实的后端API\r\n    const response: SearchResponse = await SearchService.executeSearch(\r\n      currentMethod.value,\r\n      searchParams\r\n    )\r\n\r\n    if (response.success && response.data) {\r\n      // 将后端返回的数据转换为VarTree格式\r\n      const resultNodes = response.data.map((item, index) => {\r\n        return cns('dict', 'dict', `result${index + 1}`, {}, false, { selected: false }, [\r\n          ...Object.entries(item)\r\n            .map(([key, value]) => cns('string', 'leaf', key, String(value), true, {}, [], currentMethod.value.resultHeaderDisplay?.[key] || key))\r\n        ])\r\n      })\r\n\r\n      const searchResultTree = createTreeFromConfig(\r\n        cns('dynamiclist', 'list', 'searchResults', [], false, {}, resultNodes,\r\n          `搜索结果 (${response.total}条) - ${response.message || ''}`)\r\n      )\r\n\r\n      resultTree.setRoot(searchResultTree.root)\r\n      console.log(response.data)\r\n      console.log(resultNodes)\r\n      console.log(searchResultTree.root)\r\n      stage.value = 1\r\n    } else {\r\n      // 处理搜索失败的情况\r\n      console.error('搜索失败:', response.message || response.error)\r\n\r\n      const errorResultTree = createTreeFromConfig(\r\n        cns('dynamiclist', 'list', 'searchResults', [], false, {}, [\r\n          cns('dict', 'dict', 'error', {}, false, {}, [\r\n            cns('string', 'leaf', 'message', response.message || '搜索失败', true, {}, [], '错误信息'),\r\n            cns('string', 'leaf', 'error', response.error || '未知错误', true, {}, [], '错误详情')\r\n          ])\r\n        ], '搜索失败')\r\n      )\r\n\r\n      resultTree.setRoot(errorResultTree.root)\r\n      stage.value = 1\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('搜索执行失败:', error)\r\n\r\n    // 创建错误结果树\r\n    const errorResultTree = createTreeFromConfig(\r\n      cns('dynamiclist', 'list', 'searchResults', [], false, {}, [\r\n        cns('dict', 'dict', 'error', {}, false, {}, [\r\n          cns('string', 'leaf', 'message', '网络请求失败', true, {}, [], '错误信息'),\r\n          cns('string', 'leaf', 'error', error instanceof Error ? error.message : '未知错误', true, {}, [], '错误详情')\r\n        ])\r\n      ], '搜索异常')\r\n    )\r\n\r\n    resultTree.setRoot(errorResultTree.root)\r\n    stage.value = 1\r\n  }\r\n}\r\n\r\n// 返回到参数输入阶段\r\nfunction handleBack() {\r\n  stage.value = 0\r\n}\r\n\r\n// 关闭弹窗\r\nfunction closeModal() {\r\n  emit('close')\r\n}\r\n\r\n// 确认操作\r\nfunction handleConfirm() {\r\n  const result = {\r\n    method: currentMethod.value,\r\n    params: currentMethod.value.paramTree?.root?.currentValue,\r\n    results: resultTree.root?.currentValue,\r\n    selectedResults: resultTree.root?.children.filter(child => child.config.selected).map(child => child.currentValue),\r\n    firstSelectedResult: resultTree.root?.children.find(child => child.config.selected)?.currentValue,\r\n  }\r\n  emit('confirm', result)\r\n  closeModal()\r\n}\r\n\r\n// 点击背景关闭弹窗\r\nfunction handleBackdropClick() {\r\n  closeModal()\r\n}\r\n\r\n// 选择隐藏的搜索方法\r\nfunction selectHiddenMethod(index: number) {\r\n  selectedMethodIndex.value = index\r\n  showMoreMethods.value = false\r\n}\r\n\r\n// 设置搜索结果（供父组件调用）\r\nfunction setSearchResults(results: VarTree) {\r\n  resultTree.setRoot(results.root)\r\n  stage.value = 1\r\n}\r\n\r\n// 暴露方法给父组件\r\n__expose({\r\n  setSearchResults\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        class: \"search-modal-backdrop\",\n        onClick: handleBackdropClick,\n        key: forceUpdateKey.value\n      }, [\n        (_openBlock(), _createBlock(_Teleport, { to: modalTo.value }, [\n          _cache[8] || (_cache[8] = _createElementVNode(\"span\", { class: \"gray-layer\" }, null, -1)),\n          _createElementVNode(\"div\", {\n            class: \"search-modal\",\n            onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n          }, [\n            _createElementVNode(\"div\", _hoisted_1, [\n              _createElementVNode(\"h3\", null, _toDisplayString(stage.value === 0 ? stage0Title.value : stage1Title.value), 1),\n              _createElementVNode(\"button\", {\n                class: \"close-button\",\n                onClick: closeModal\n              }, _cache[2] || (_cache[2] = [\n                _createElementVNode(\"span\", null, \"×\", -1)\n              ]))\n            ]),\n            (stage.value === 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                  (_ctx.searchMethods.length > 1)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n                        _createElementVNode(\"div\", _hoisted_4, [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(visibleMethods.value, (method, index) => {\n                            return (_openBlock(), _createElementBlock(\"div\", {\n                              key: index,\n                              class: _normalizeClass(['method-tab', { active: selectedMethodIndex.value === index }]),\n                              onClick: ($event: any) => (selectedMethodIndex.value = index)\n                            }, _toDisplayString(method.name), 11, _hoisted_5))\n                          }), 128)),\n                          (hasMoreMethods.value)\n                            ? (_openBlock(), _createElementBlock(\"div\", {\n                                key: 0,\n                                class: \"method-tab more-tab\",\n                                onClick: _cache[0] || (_cache[0] = ($event: any) => (showMoreMethods.value = !showMoreMethods.value))\n                              }, \" ... \"))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        (showMoreMethods.value && hasMoreMethods.value)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(hiddenMethods.value, (method, index) => {\n                                return (_openBlock(), _createElementBlock(\"div\", {\n                                  key: visibleMethodsCount.value + index,\n                                  class: _normalizeClass(['dropdown-item', { active: selectedMethodIndex.value === visibleMethodsCount.value + index }]),\n                                  onClick: ($event: any) => (selectHiddenMethod(visibleMethodsCount.value + index))\n                                }, _toDisplayString(method.name), 11, _hoisted_7))\n                              }), 128))\n                            ]))\n                          : _createCommentVNode(\"\", true)\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"div\", _hoisted_8, [\n                    _createVNode(ParamInput, {\n                      varTree: currentMethod.value?.paramTree || null,\n                      onUpdate: handleParamUpdate\n                    }, null, 8, [\"varTree\"])\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true),\n            (stage.value === 1)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                  _createElementVNode(\"div\", _hoisted_10, [\n                    (_unref(resultTree))\n                      ? (_openBlock(), _createBlock(VarBox, {\n                          key: 0,\n                          tree: _unref(resultTree),\n                          readonly: true\n                        }, null, 8, [\"tree\"]))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[3] || (_cache[3] = [\n                          _createElementVNode(\"p\", null, \"暂无搜索结果\", -1)\n                        ])))\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"div\", _hoisted_12, [\n              (stage.value === 0)\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    class: \"execute-button\",\n                    onClick: handleExecute\n                  }, _cache[4] || (_cache[4] = [\n                    _createElementVNode(\"svg\", {\n                      class: \"button-icon\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      xmlns: \"http://www.w3.org/2000/svg\"\n                    }, [\n                      _createElementVNode(\"path\", {\n                        d: \"M8 5V19L19 12L8 5Z\",\n                        fill: \"currentColor\"\n                      })\n                    ], -1)\n                  ])))\n                : _createCommentVNode(\"\", true),\n              (stage.value === 1)\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                    _createElementVNode(\"button\", {\n                      class: \"back-button\",\n                      onClick: handleBack\n                    }, _cache[5] || (_cache[5] = [\n                      _createElementVNode(\"svg\", {\n                        class: \"button-icon\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\"\n                      }, [\n                        _createElementVNode(\"path\", {\n                          d: \"M19 12H5M12 19L5 12L12 5\",\n                          stroke: \"currentColor\",\n                          \"stroke-width\": \"2\",\n                          \"stroke-linecap\": \"round\",\n                          \"stroke-linejoin\": \"round\"\n                        })\n                      ], -1)\n                    ])),\n                    _createElementVNode(\"button\", {\n                      class: \"cancel-button\",\n                      onClick: closeModal\n                    }, _cache[6] || (_cache[6] = [\n                      _createElementVNode(\"svg\", {\n                        class: \"button-icon\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\"\n                      }, [\n                        _createElementVNode(\"path\", {\n                          d: \"M18 6L6 18M6 6L18 18\",\n                          stroke: \"currentColor\",\n                          \"stroke-width\": \"2\",\n                          \"stroke-linecap\": \"round\",\n                          \"stroke-linejoin\": \"round\"\n                        })\n                      ], -1)\n                    ])),\n                    _createElementVNode(\"button\", {\n                      class: \"confirm-button\",\n                      onClick: handleConfirm\n                    }, _cache[7] || (_cache[7] = [\n                      _createElementVNode(\"svg\", {\n                        class: \"button-icon\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\"\n                      }, [\n                        _createElementVNode(\"path\", {\n                          d: \"M20 6L9 17L4 12\",\n                          stroke: \"currentColor\",\n                          \"stroke-width\": \"2\",\n                          \"stroke-linecap\": \"round\",\n                          \"stroke-linejoin\": \"round\"\n                        })\n                      ], -1)\n                    ]))\n                  ], 64))\n                : _createCommentVNode(\"\", true)\n            ])\n          ])\n        ], 8, [\"to\"]))\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n  <div v-if=\"visible\" class=\"search-modal-backdrop\" @click=\"handleBackdropClick\" :key=\"forceUpdateKey\">\r\n      <teleport :to=\"modalTo\">\r\n      <span class=\"gray-layer\"></span>\r\n      <div class=\"search-modal\" @click.stop>\r\n        <!-- 弹窗头部 -->\r\n        <div class=\"search-modal-header\">\r\n          <h3>{{ stage === 0 ? stage0Title : stage1Title }}</h3>\r\n          <button class=\"close-button\" @click=\"closeModal\">\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- Stage 0: 搜索方式选择和参数输入 -->\r\n        <div v-if=\"stage === 0\" class=\"search-modal-body\">\r\n          <!-- 搜索方式选择顶栏 -->\r\n          <div v-if=\"searchMethods.length > 1\" class=\"search-method-selector\">\r\n            <div class=\"method-tabs\">\r\n              <div\r\n                v-for=\"(method, index) in visibleMethods\"\r\n                :key=\"index\"\r\n                :class=\"['method-tab', { active: selectedMethodIndex === index }]\"\r\n                @click=\"selectedMethodIndex = index\"\r\n              >\r\n                {{ method.name }}\r\n              </div>\r\n              <!-- 更多按钮 -->\r\n              <div\r\n                v-if=\"hasMoreMethods\"\r\n                class=\"method-tab more-tab\"\r\n                @click=\"showMoreMethods = !showMoreMethods\"\r\n              >\r\n                ...\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 更多方法的下拉菜单 -->\r\n            <div v-if=\"showMoreMethods && hasMoreMethods\" class=\"more-methods-dropdown\">\r\n              <div\r\n                v-for=\"(method, index) in hiddenMethods\"\r\n                :key=\"visibleMethodsCount + index\"\r\n                :class=\"['dropdown-item', { active: selectedMethodIndex === visibleMethodsCount + index }]\"\r\n                @click=\"selectHiddenMethod(visibleMethodsCount + index)\"\r\n              >\r\n                {{ method.name }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 参数输入区域 -->\r\n          <div class=\"param-input-area\">\r\n            <ParamInput\r\n              :varTree=\"currentMethod?.paramTree || null\"\r\n              @update=\"handleParamUpdate\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Stage 1: 搜索结果展示 -->\r\n        <div v-if=\"stage === 1\" class=\"search-modal-body\">\r\n          <div class=\"result-area\">\r\n            <VarBox\r\n              v-if=\"resultTree\"\r\n              :tree=\"resultTree\"\r\n              :readonly=\"true\"\r\n            />\r\n            <div v-else class=\"no-results\">\r\n              <p>暂无搜索结果</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 弹窗底部 -->\r\n        <div class=\"search-modal-footer\">\r\n          <!-- Stage 0 底栏: Execute按钮 -->\r\n          <template v-if=\"stage === 0\">\r\n            <button class=\"execute-button\" @click=\"handleExecute\">\r\n              <svg class=\"button-icon\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M8 5V19L19 12L8 5Z\" fill=\"currentColor\"/>\r\n              </svg>\r\n              <!-- 执行搜索 -->\r\n            </button>\r\n          </template>\r\n          \r\n          <!-- Stage 1 底栏: 返回、取消、确认按钮 -->\r\n          <template v-if=\"stage === 1\">\r\n            <button class=\"back-button\" @click=\"handleBack\">\r\n              <svg class=\"button-icon\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M19 12H5M12 19L5 12L12 5\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              </svg>\r\n              <!-- 返回 -->\r\n            </button>\r\n            <button class=\"cancel-button\" @click=\"closeModal\">\r\n              <svg class=\"button-icon\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              </svg>\r\n              <!-- 取消 -->\r\n            </button>\r\n            <button class=\"confirm-button\" @click=\"handleConfirm\">\r\n              <svg class=\"button-icon\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M20 6L9 17L4 12\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              </svg>\r\n              <!-- 确认 -->\r\n            </button>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </teleport>\r\n    </div> \r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, watch, onMounted } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport ParamInput from './ParamInput.vue'\r\nimport { VarTree, createTreeFromConfig, cns, SearchMethod } from '@/utils/VarTree'\r\nimport { SearchService, SearchResponse } from '@/api/searchService'\r\n\r\n// 定义props\r\nconst props = defineProps<{\r\n  visible: boolean\r\n  searchMethods: SearchMethod[]\r\n}>()\r\n\r\nconst modalTo = ref('body')\r\n\r\nonMounted(() => {\r\n  // 确保底部导航栏在应用内容容器内\r\n  modalTo.value = '#application-layout'\r\n})\r\n\r\n// 定义emits\r\nconst emit = defineEmits<{    \r\n  (e: 'close'): void\r\n  (e: 'confirm', data: any): void\r\n}>()\r\n\r\n// 响应式数据\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\nconst stage = ref(0) // 0: 参数输入阶段, 1: 结果展示阶段\r\nconst selectedMethodIndex = ref(0)\r\nconst resultTree: VarTree = createTreeFromConfig(\r\n      cns('dynamiclist', 'list', 'searchResults', [], false, {}, [], 'Results')\r\n    )\r\nconst showMoreMethods = ref(false)\r\nconst visibleMethodsCount = ref(3) // 最多显示3个方法标签\r\n\r\n// 计算属性\r\nconst currentMethod = computed(() => {\r\n  return props.searchMethods[selectedMethodIndex.value] || null\r\n})\r\n\r\n// 可见的搜索方法\r\nconst visibleMethods = computed(() => {\r\n  return props.searchMethods.slice(0, visibleMethodsCount.value)\r\n})\r\n\r\n// 隐藏的搜索方法\r\nconst hiddenMethods = computed(() => {\r\n  return props.searchMethods.slice(visibleMethodsCount.value)\r\n})\r\n\r\n// 是否有更多方法\r\nconst hasMoreMethods = computed(() => {\r\n  return props.searchMethods.length > visibleMethodsCount.value\r\n})\r\n\r\nconst stage0Title = computed(() => {\r\n  return props.searchMethods.length === 1 ? currentMethod.value.name : 'Search'\r\n})\r\n\r\nconst stage1Title = computed(() => {\r\n  return 'Search Result'\r\n})\r\n\r\n// 监听visible变化，重置状态\r\nwatch(() => props.visible, (newVisible) => {\r\n  if (newVisible) {\r\n    stage.value = 0\r\n    selectedMethodIndex.value = 0\r\n    \r\n    // 如果只有一个搜索方法且无需参数，直接进入stage 1并执行搜索\r\n    if (props.searchMethods.length === 1 && !props.searchMethods[0].paramTree) {\r\n      handleExecute()\r\n    }\r\n  }\r\n})\r\n\r\n// 处理参数更新\r\nfunction handleParamUpdate(payload: any) {\r\n  console.log(payload.value)\r\n}\r\n\r\n// 执行搜索\r\nasync function handleExecute() {\r\n  if (!currentMethod.value) return\r\n\r\n  try {\r\n    // 获取搜索参数\r\n    const searchParams = currentMethod.value.paramTree?.root?.currentValue || {}\r\n\r\n    console.log('执行搜索:', {\r\n      method: currentMethod.value.name,\r\n      params: searchParams,\r\n      url: currentMethod.value.serviceUrl\r\n    })\r\n\r\n    // 调用真实的后端API\r\n    const response: SearchResponse = await SearchService.executeSearch(\r\n      currentMethod.value,\r\n      searchParams\r\n    )\r\n\r\n    if (response.success && response.data) {\r\n      // 将后端返回的数据转换为VarTree格式\r\n      const resultNodes = response.data.map((item, index) => {\r\n        return cns('dict', 'dict', `result${index + 1}`, {}, false, { selected: false }, [\r\n          ...Object.entries(item)\r\n            .map(([key, value]) => cns('string', 'leaf', key, String(value), true, {}, [], currentMethod.value.resultHeaderDisplay?.[key] || key))\r\n        ])\r\n      })\r\n\r\n      const searchResultTree = createTreeFromConfig(\r\n        cns('dynamiclist', 'list', 'searchResults', [], false, {}, resultNodes,\r\n          `搜索结果 (${response.total}条) - ${response.message || ''}`)\r\n      )\r\n\r\n      resultTree.setRoot(searchResultTree.root)\r\n      console.log(response.data)\r\n      console.log(resultNodes)\r\n      console.log(searchResultTree.root)\r\n      stage.value = 1\r\n    } else {\r\n      // 处理搜索失败的情况\r\n      console.error('搜索失败:', response.message || response.error)\r\n\r\n      const errorResultTree = createTreeFromConfig(\r\n        cns('dynamiclist', 'list', 'searchResults', [], false, {}, [\r\n          cns('dict', 'dict', 'error', {}, false, {}, [\r\n            cns('string', 'leaf', 'message', response.message || '搜索失败', true, {}, [], '错误信息'),\r\n            cns('string', 'leaf', 'error', response.error || '未知错误', true, {}, [], '错误详情')\r\n          ])\r\n        ], '搜索失败')\r\n      )\r\n\r\n      resultTree.setRoot(errorResultTree.root)\r\n      stage.value = 1\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('搜索执行失败:', error)\r\n\r\n    // 创建错误结果树\r\n    const errorResultTree = createTreeFromConfig(\r\n      cns('dynamiclist', 'list', 'searchResults', [], false, {}, [\r\n        cns('dict', 'dict', 'error', {}, false, {}, [\r\n          cns('string', 'leaf', 'message', '网络请求失败', true, {}, [], '错误信息'),\r\n          cns('string', 'leaf', 'error', error instanceof Error ? error.message : '未知错误', true, {}, [], '错误详情')\r\n        ])\r\n      ], '搜索异常')\r\n    )\r\n\r\n    resultTree.setRoot(errorResultTree.root)\r\n    stage.value = 1\r\n  }\r\n}\r\n\r\n// 返回到参数输入阶段\r\nfunction handleBack() {\r\n  stage.value = 0\r\n}\r\n\r\n// 关闭弹窗\r\nfunction closeModal() {\r\n  emit('close')\r\n}\r\n\r\n// 确认操作\r\nfunction handleConfirm() {\r\n  const result = {\r\n    method: currentMethod.value,\r\n    params: currentMethod.value.paramTree?.root?.currentValue,\r\n    results: resultTree.root?.currentValue,\r\n    selectedResults: resultTree.root?.children.filter(child => child.config.selected).map(child => child.currentValue),\r\n    firstSelectedResult: resultTree.root?.children.find(child => child.config.selected)?.currentValue,\r\n  }\r\n  emit('confirm', result)\r\n  closeModal()\r\n}\r\n\r\n// 点击背景关闭弹窗\r\nfunction handleBackdropClick() {\r\n  closeModal()\r\n}\r\n\r\n// 选择隐藏的搜索方法\r\nfunction selectHiddenMethod(index: number) {\r\n  selectedMethodIndex.value = index\r\n  showMoreMethods.value = false\r\n}\r\n\r\n// 设置搜索结果（供父组件调用）\r\nfunction setSearchResults(results: VarTree) {\r\n  resultTree.setRoot(results.root)\r\n  stage.value = 1\r\n}\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n  setSearchResults\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.gray-layer {\r\n  position: fixed;\r\n  left:0;\r\n  top:0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n.search-modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.search-modal {\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  width: 33vw;\r\n  height: 42vh;\r\n  background-color: var(--theme-color-page);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  min-width: 400px;\r\n  min-height: 300px;\r\n  border: 2px solid var(--theme-color-dark);\r\n}\r\n\r\n.search-modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 7px 20px;\r\n  border-bottom: 1px solid var(--theme-color-light);\r\n  background-color: var(--theme-color-dark);\r\n}\r\n\r\n.search-modal-header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: var(--theme-color-contrast);\r\n  font-family: var(--theme-font-family);\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: var(--theme-color-contrast);\r\n  padding: 0;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.close-button:hover {\r\n  background-color: var(--theme-color-lighter);\r\n  color: var(--theme-color-dark);\r\n}\r\n\r\n.search-modal-body {\r\n  flex: 1;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n  background-color: var(--theme-color-page);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.search-method-selector {\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n}\r\n\r\n.method-tabs {\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid var(--theme-color-light);\r\n  gap: 0;\r\n}\r\n\r\n.method-tab {\r\n  padding: 12px 20px;\r\n  cursor: pointer;\r\n  font-family: var(--theme-font-family);\r\n  font-size: 14px;\r\n  color: var(--color-text-primary);\r\n  border-bottom: 2px solid transparent;\r\n  transition: all 0.2s ease;\r\n  white-space: nowrap;\r\n  position: relative;\r\n}\r\n\r\n.method-tab:hover {\r\n  color: var(--theme-color-dark);\r\n  background-color: var(--theme-color-lighter);\r\n}\r\n\r\n.method-tab.active {\r\n  color: var(--theme-color-dark);\r\n  border-bottom-color: var(--theme-color-dark);\r\n  border-bottom-width: 3px;\r\n  font-weight: 600;\r\n}\r\n\r\n.more-tab {\r\n  font-weight: bold;\r\n  color: var(--theme-color-light);\r\n}\r\n\r\n.more-tab:hover {\r\n  color: var(--theme-color-dark);\r\n}\r\n\r\n.more-methods-dropdown {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  background-color: var(--theme-color-page);\r\n  border: 1px solid var(--theme-color-light);\r\n  border-radius: 4px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  z-index: 1000;\r\n  min-width: 150px;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 10px 16px;\r\n  cursor: pointer;\r\n  font-family: var(--theme-font-family);\r\n  font-size: 14px;\r\n  color: var(--color-text-primary);\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: var(--theme-color-lighter);\r\n}\r\n\r\n.dropdown-item.active {\r\n  background-color: var(--theme-color-light);\r\n  color: var(--theme-color-contrast);\r\n  font-weight: 600;\r\n}\r\n\r\n.param-input-area {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.result-area {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.no-results {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n}\r\n\r\n.no-results p {\r\n  margin: 0;\r\n  color: #666;\r\n  font-size: 16px;\r\n  font-family: var(--theme-font-family);\r\n}\r\n\r\n.search-modal-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 8px;\r\n  padding: 8px 8px;\r\n  border-top: 1px solid var(--theme-color-light);\r\n  background-color: var(--theme-color-lighter);\r\n}\r\n\r\n.execute-button,\r\n.back-button,\r\n.cancel-button,\r\n.confirm-button {\r\n  padding: 8px 12px;\r\n  border: 1px solid var(--theme-color-dark);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-family: var(--theme-font-family);\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n}\r\n\r\n.button-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.execute-button {\r\n  background-color: var(--theme-color-execute-button);\r\n  color: var(--theme-color-contrast);\r\n  border-color: var(--theme-color-execute-button);\r\n}\r\n\r\n.execute-button:hover {\r\n  background-color: var(--theme-color-execute-button-hover);\r\n  border-color: var(--theme-color-execute-button-hover);\r\n}\r\n\r\n.execute-button:active {\r\n  background-color: var(--theme-color-execute-button-active);\r\n  border-color: var(--theme-color-execute-button-active);\r\n}\r\n\r\n.back-button {\r\n  background-color: var(--btn-default-bg);\r\n  color: var(--btn-default-text);\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: var(--btn-hover-bg);\r\n  color: var(--btn-hover-text);\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.cancel-button {\r\n  background-color: var(--btn-default-bg);\r\n  color: var(--btn-default-text);\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: var(--btn-hover-bg);\r\n  color: var(--btn-hover-text);\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.cancel-button:active {\r\n  background-color: var(--btn-active-bg);\r\n  color: var(--btn-active-text);\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.confirm-button {\r\n  background-color: var(--theme-color-dark);\r\n  color: var(--theme-color-contrast);\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.confirm-button:hover {\r\n  background-color: var(--theme-color-light);\r\n  border-color: var(--theme-color-darker);\r\n}\r\n\r\n.confirm-button:active {\r\n  background-color: var(--theme-color-lighter);\r\n  border-color: var(--theme-color-darker);\r\n}\r\n</style>","import script from \"./SearchModal.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./SearchModal.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./SearchModal.vue?vue&type=style&index=0&id=a95204ae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a95204ae\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, mergeProps as _mergeProps, createElementVNode as _createElementVNode, Fragment as _Fragment, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\"\nimport _imports_0 from '../../assets/search-plus-light.png'\nimport _imports_1 from '../../assets/search-plus-dark.png'\n\n\nconst _hoisted_1 = {\n  key: 0,\n  src: _imports_0,\n  width: \"20px\"\n}\nconst _hoisted_2 = {\n  key: 1,\n  src: _imports_1,\n  width: \"20px\"\n}\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"disabled\"]\nconst _hoisted_5 = [\"checked\"]\nconst _hoisted_6 = [\"checked\", \"onChange\"]\nconst _hoisted_7 = [\"onClick\"]\n\nimport { ref, computed, watch } from 'vue'\r\nimport { VarTree, VarNode, VarNodeConfig, createNodeFromConfig, NodeStructure, cns, createTreeFromConfig, SearchMethod, SearchResultHandler } from '@/utils/VarTree'\r\nimport StringInput from './inputs/StringInput.vue'\r\nimport NumberInput from './inputs/NumberInput.vue'\r\nimport DateInput from './inputs/DateInput.vue'\r\nimport SelectionInput from './inputs/StringInput.vue'\r\nimport BooleanInput from './inputs/BooleanInput.vue'\r\nimport SearchModal from '@/components/searchModel/SearchModal.vue'\r\n\r\nimport {getPathString} from './utils'\r\n\r\ntype SlotProps = Record<string, any>\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'VarInput',\n  props: {\n    varTree: {},\n    nodePath: {},\n    readonly: { type: Boolean },\n    config: {},\n    indentLevel: {},\n    showLabel: { type: Boolean },\n    wrapperStyle: {},\n    componentConfig: {}\n  },\n  emits: [\"update\"],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props\r\n\r\nconst emit = __emit\r\n\r\n\r\n\r\nconst validationError = ref<string>('')\r\nconst nodeValue = ref<any>(null)\r\n\r\n// 列表选择状态管理\r\nconst selectedRows = ref<Set<number>>(new Set())\r\nconst isAllSelected = ref<boolean>(false)\r\n\r\nconst slotScopeData = computed(() => ({\r\n  allProps: props,\r\n  validationError: validationError,\r\n  nodeValue: nodeValue,\r\n  currentNode: currentNode.value,\r\n  pathString: pathString.value,\r\n  isLeafNode: isLeafNode.value,\r\n  isDictNode: isDictNode.value,\r\n  isListNode: isListNode.value,\r\n  isDynamicList: isDynamicList.value,\r\n  effectiveReadonly: effectiveReadonly.value,\r\n  shouldRenderAsTable: shouldRenderAsTable.value,\r\n  reachedMaxLength: reachedMaxLength.value,\r\n  containerStyle: containerStyle.value,\r\n  inputStyle: inputStyle.value,\r\n  nameDisplay: nameDisplay.value,\r\n  initNodeValue:initNodeValue,\r\n  getLeafComponent:getLeafComponent,\r\n  getPlaceholder:getPlaceholder,\r\n  getInputClass:getInputClass,\r\n  getTableHeaders:getTableHeaders,\r\n  getChildConfig:getChildConfig,\r\n  handleValueChange:handleValueChange,\r\n  handleChildUpdate:handleChildUpdate,\r\n  handleValidation:handleValidation,\r\n  handleValidationError:handleValidationError,\r\n  addListItem:addListItem,\r\n  removeListItem:removeListItem,\r\n  createNewListItem:createNewListItem,\r\n  forceUpdate:forceUpdate,\r\n  forceUpdateKey:forceUpdateKey.value,\r\n  setNodeValue:setNodeValue,\r\n  getNodeValue:getNodeValue,\r\n  // 选择相关\r\n  selectedRows: selectedRows.value,\r\n  isAllSelected: isAllSelected.value,\r\n  toggleRowSelection: toggleRowSelection,\r\n  toggleAllSelection: toggleAllSelection,\r\n  removeSelectedItems: removeSelectedItems,\r\n\r\n  // 输入框、搜索按钮相关\r\n  handleFocus: handleFocus,\r\n  handleBlur: handleBlur,\r\n  focusCounter: focusCounter.value,\r\n  searchButtonCounter: searchButtonCounter.value,\r\n  handleSearchButtonClick: handleSearchButtonClick,\r\n  displaySearchButton: displaySearchButton.value,\r\n\r\n\r\n}));\r\n\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\nconst displaySearchButton = ref(false)\r\nconst displaySearchIcon = ref(false)\r\nconst searchButtonCounter = ref(0)\r\nconst focusCounter = ref(0)\r\nconst showSearchModal = ref(false)\r\n\r\n\r\n\r\nconst currentNode = computed<VarNode | null>(() => {return props.varTree.findNodeByPath(props.nodePath)})\r\n\r\n// 从config获取搜索方法配置\r\nconst searchMethods = computed<SearchMethod[]>(() => {\r\n  return currentNode.value?.config?.searchMethods || []\r\n})\r\n\r\n// 是否应该显示搜索按钮（基于配置和当前状态）\r\nconst shouldShowSearchButton = computed(() => {\r\n  return displaySearchButton.value && searchMethods.value && searchMethods.value.length > 0\r\n})\r\nconst pathString = computed<string>(()=>getPathString(props.varTree,props.nodePath))\r\nconst setNodeValue = (val: any, refresh:boolean=true, update:boolean=true) => {\r\n  if (currentNode.value) {\r\n    currentNode.value.currentValue = val\r\n  }\r\n  if (refresh) {\r\n    forceUpdate()\r\n  }\r\n  if (update) {\r\n    emit('update', {\r\n      path: props.nodePath,\r\n      value: val,\r\n      node: currentNode.value || undefined\r\n    })\r\n  }\r\n}\r\nconst getNodeValue = () => {\r\n  return currentNode.value?.currentValue\r\n}\r\n\r\nconst isLeafNode = computed(() => currentNode.value && currentNode.value.isLeaf())\r\nconst isDictNode = computed(() => currentNode.value && currentNode.value.nodeType === 'dict')\r\nconst isListNode = computed(() => currentNode.value && currentNode.value.nodeType === 'list')\r\nconst isDynamicList = computed(() => isListNode.value && currentNode.value?.varType === 'dynamiclist')\r\nconst effectiveReadonly = computed(() => props.readonly || (currentNode.value && currentNode.value.readonly))\r\nconst isShowLabel = computed(()=> {\r\n  if (props.config?.hideLabel == true) {\r\n    return false\r\n  }\r\n  if (props.showLabel == undefined) {\r\n    return true\r\n  }\r\n  if (props.showLabel == false) {\r\n    return false\r\n  }\r\n  return true\r\n})\r\nconst shouldRenderAsTable = computed(() => {\r\n  if (!isListNode.value) return false\r\n  return ['fixlist', 'dynamiclist'].includes((currentNode.value?.varType ?? '') as string)\r\n})\r\nconst reachedMaxLength = computed(() => {\r\n  if (!isDynamicList.value) return false\r\n  const maxLength = props.config?.maxLength\r\n  return !!maxLength && !!currentNode.value?.children && currentNode.value.children.length >= maxLength\r\n})\r\nconst containerStyle = computed(() => ({\r\n  ...(props.wrapperStyle || {}),\r\n  // marginBottom: '8px'\r\n}))\r\nconst inputStyle = computed(() => ({\r\n  // width: '100%'\r\n}))\r\nconst nameDisplay = computed(() => {\r\n  return  props.componentConfig?.nameDisplay || currentNode.value?.getNameDisplay() || '未命名'\r\n})\r\n\r\nconst baseClassPrefix = computed(() => {\r\n  // 如果config中有自定义前缀，使用自定义前缀，否则使用pathString，如果pathString为空则使用默认前缀\r\n  if (props.config?.classPrefix) {\r\n    return props.config.classPrefix\r\n  }\r\n  return pathString.value || pathString.value || 'var-input'\r\n})\r\n\r\nconst wrapperClass = computed(() => {\r\n  const t = currentNode.value?.nodeType\r\n  return `wrapper ${baseClassPrefix.value}--wrapper ${t}-node-varinput ${baseClassPrefix.value}--${t}-node-varinput`\r\n})\r\n\r\nconst mainContentClass = computed(() => {\r\n  return `main ${baseClassPrefix.value}--main`\r\n})\r\n\r\nconst extraComponentsClass = computed(() => {\r\n  return `extra ${baseClassPrefix.value}--extra`\r\n})\r\n\r\nconst extraTableButtonsClass = computed(() => {\r\n  return `extra-table-buttons ${baseClassPrefix.value}--extra-table-buttons`\r\n})\r\n\r\nconst searchButtonClass = computed(() => {\r\n  return `search-button ${baseClassPrefix.value}--search-button`\r\n})\r\n\r\n// 分离叶子节点和复杂节点\r\nconst leafChildren = computed(() => {\r\n  if (!currentNode.value?.children) return []\r\n  return currentNode.value.children.filter(child => isChildDisplay(child) && child.nodeType === 'leaf')\r\n})\r\n\r\nconst complexChildren = computed(() => {\r\n  if (!currentNode.value?.children) return []\r\n  return currentNode.value.children.filter(child => isChildDisplay(child) && (child.nodeType === 'dict' || child.nodeType === 'list'))\r\n})\r\n\r\nconst listItems = computed(()=>{\r\n  if(currentNode.value?.varType !== 'dynamiclist'){\r\n    return []\r\n  }\r\n  if(!currentNode.value?.config?.childTemplate) {\r\n    return currentNode.value.children\r\n  }\r\n  const length = currentNode.value.children.length\r\n  const rowProvided = currentNode.value.config?.rowProvided ?? 3\r\n  if (length < rowProvided) {\r\n    for (let i = length; i < rowProvided; i++) {\r\n      currentNode.value.addChild(createNewListItem()!)\r\n    }\r\n  }\r\n  return currentNode.value.children\r\n})\r\n\r\nwatch(currentNode, () => {\r\n  initNodeValue()\r\n}, { immediate: true, deep: true })\r\n\r\n// 监听列表内容变化，重置选择状态\r\nwatch(() => currentNode.value?.children?.length, () => {\r\n  selectedRows.value.clear()\r\n  isAllSelected.value = false\r\n}, { immediate: true })\r\n\r\nfunction handleFocus() {\r\n  displaySearchButton.value = true && !effectiveReadonly.value\r\n  searchButtonCounter.value++\r\n  // console.log(`Focus on node: ${pathString.value}`)\r\n}\r\n\r\nfunction handleSearchButtonClick() {\r\n  // 处理搜索按钮点击事件\r\n  // console.log('Search clicked')\r\n  searchButtonCounter.value++\r\n  displaySearchButton.value = false\r\n  displaySearchIcon.value = false\r\n  showSearchModal.value = true && !effectiveReadonly.value\r\n}\r\n\r\nfunction handleSearchButtonEnter(){\r\n  displaySearchIcon.value = true\r\n}\r\n\r\nfunction handleSearchButtonLeave(){\r\n  displaySearchIcon.value = false\r\n}\r\n\r\nfunction handleSearchModalClose() {\r\n  showSearchModal.value = false\r\n}\r\n\r\nfunction handleSearchModalConfirm(data: any) {\r\n  // 处理搜索确认逻辑，接收SearchModal传来的完整结果\r\n  console.log('搜索确认', data)\r\n\r\n  if (!currentNode.value || !data) {\r\n    showSearchModal.value = false\r\n    return\r\n  }\r\n\r\n  // 检查是否有自定义搜索结果处理函数\r\n  const customHandler = currentNode.value.config?.customSearchResultHandler\r\n\r\n  if (customHandler && typeof customHandler === 'function') {\r\n    // 执行自定义处理逻辑\r\n    try {\r\n      customHandler(data, currentNode.value)\r\n    } catch (error) {\r\n      console.error('自定义搜索结果处理函数执行失败:', error)\r\n    }\r\n  } else {\r\n    // 默认处理逻辑：将 firstSelectedResult 的 result 字段赋值给 currentNode\r\n    if (data.firstSelectedResult && data.firstSelectedResult.result !== undefined) {\r\n      setNodeValue(data.firstSelectedResult.result)\r\n    } else if (data.selectedResults && data.selectedResults.length > 0) {\r\n      // 如果没有 firstSelectedResult，使用第一个选中结果\r\n      const firstResult = data.selectedResults[0]\r\n      if (firstResult && firstResult.result !== undefined) {\r\n        setNodeValue(firstResult.result)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 触发update事件通知父组件\r\n  emit('update', {\r\n    path: props.nodePath,\r\n    value: currentNode.value.currentValue,\r\n    node: currentNode.value,\r\n    action: 'search_result'\r\n  })\r\n\r\n  showSearchModal.value = false\r\n}\r\n\r\n\r\n\r\nfunction initNodeValue() {\r\n  if (isLeafNode.value && currentNode.value) {\r\n    nodeValue.value = currentNode.value.defaultValue\r\n  }\r\n}\r\n\r\nfunction getLeafComponent() {\r\n  if (!currentNode.value) return StringInput\r\n  const typeMap: Record<string, any> = {\r\n    'string': StringInput,\r\n    // 'number': NumberInput,\r\n    'number': StringInput,\r\n    'date': DateInput,\r\n    'selection': SelectionInput,\r\n    'boolean': BooleanInput,\r\n  }\r\n  return typeMap[currentNode.value.varType] || StringInput\r\n}\r\n\r\nfunction getPlaceholder() {\r\n  const typeMap: Record<string, string> = {\r\n    'string': '请输入文本',\r\n    'number': '请输入数字',\r\n    'date': '请选择日期',\r\n    'selection': '请选择',\r\n    'boolean': '请选择是否',\r\n  }\r\n  // return typeMap[(currentNode.value?.varType ?? 'string')] || '请输入'\r\n  return \"\"\r\n}\r\n\r\nfunction getInputClass() {\r\n  const pathReadonly = `${baseClassPrefix.value}--readonly`\r\n  const pathError = `${baseClassPrefix.value}--error`\r\n  return {\r\n    'readonly': effectiveReadonly.value,\r\n    'error': !!validationError.value,\r\n    [pathReadonly]: effectiveReadonly.value,\r\n    [pathError]: !!validationError.value,\r\n  }\r\n}\r\n\r\nfunction isChildDisplay(child: VarNode|NodeStructure) {\r\n  if (currentNode.value?.config?.showWhiteList) {\r\n    return child.name && currentNode.value.config.showWhiteList.includes(child.name)\r\n  }\r\n  return (!child.name || !(currentNode.value!.config?.hideList || []).includes(child.name)) && !child.config?.hideSelf\r\n}\r\n\r\nfunction getChildNameDisplayTranslation(child: VarNode|NodeStructure) {\r\n  if (!child.name) {\r\n    return null\r\n  }\r\n  if (currentNode.value?.config?.childNameDisplayTranslation) {\r\n    return currentNode.value.config.childNameDisplayTranslation[child.name] || null\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getChildComponentConfig(child: VarNode|NodeStructure) {\r\n  return {\r\n    nameDisplay: getChildNameDisplayTranslation(child)\r\n  }\r\n}\r\n\r\nfunction getTableHeaders(): string[] {\r\n  const defaultValue = \"值\"\r\n  if (props.config?.childTemplate?.children !== undefined && props.config.childTemplate.children.length > 0) {\r\n    const childrenNotHide = props.config.childTemplate.children.filter((child: NodeStructure) => isChildDisplay(child))\r\n    return childrenNotHide.map((child: NodeStructure) => child.nameDisplay || child.name || defaultValue)\r\n  }\r\n\r\n  const firstChild = currentNode.value?.children[0]\r\n  if (!firstChild) return [defaultValue]\r\n  if (firstChild.nodeType === 'dict') {\r\n    const childrenNotHide = firstChild.children.filter((child: NodeStructure) => isChildDisplay(child))\r\n    return childrenNotHide.map((child: NodeStructure) => child.nameDisplay || child.name || defaultValue)\r\n  }\r\n  return firstChild.nameDisplay ? [firstChild.nameDisplay] : [defaultValue]\r\n}\r\n\r\nfunction getChildConfig(child: VarNode) {\r\n  return child.config || {}\r\n}\r\n\r\nfunction handleValueChange(newValue: any) {\r\n  if (currentNode.value) {\r\n    currentNode.value.currentValue = newValue\r\n  }\r\n  emit('update', {\r\n    path: props.nodePath,\r\n    value: newValue,\r\n    node: currentNode.value || undefined\r\n  })\r\n}\r\n\r\nfunction handleChildUpdate(updateInfo: any) {\r\n  emit('update', updateInfo)\r\n}\r\n\r\nfunction handleBlur() {\r\n  handleValidation()\r\n  //延迟\r\n  const currentSearchButtonCounter = searchButtonCounter.value\r\n  const currentFocusCount = focusCounter.value\r\n  setTimeout(() => {\r\n    if (searchButtonCounter.value !== currentSearchButtonCounter) return\r\n    if (focusCounter.value !== currentFocusCount) return\r\n      displaySearchButton.value = false\r\n  }, 333)\r\n}\r\nfunction handleValidation() {\r\n  // validationError.value = ''\r\n  return\r\n}\r\n\r\nfunction handleValidationError(message: string | null = '') {\r\n  validationError.value = message || ''\r\n  return\r\n}\r\n\r\nfunction addListItem() {\r\n  if (!isDynamicList.value || effectiveReadonly.value) return\r\n  const newItem = createNewListItem()\r\n  if (newItem && currentNode.value) {\r\n    currentNode.value.addChild(newItem)\r\n    forceUpdate() // 强制刷新界面\r\n    emit('update', {\r\n      path: props.nodePath,\r\n      action: 'addItem',\r\n      node: currentNode.value\r\n    })\r\n  }\r\n}\r\n\r\nfunction removeListItem(index: number) {\r\n  if (!isDynamicList.value || effectiveReadonly.value) return\r\n  if (currentNode.value) {\r\n    currentNode.value.removeChild(index)\r\n    // 更新选择状态\r\n    selectedRows.value.delete(index)\r\n    // 重新映射选择状态（因为删除后索引会变化）\r\n    const newSelectedRows = new Set<number>()\r\n    selectedRows.value.forEach(selectedIndex => {\r\n      if (selectedIndex > index) {\r\n        newSelectedRows.add(selectedIndex - 1)\r\n      } else if (selectedIndex < index) {\r\n        newSelectedRows.add(selectedIndex)\r\n      }\r\n    })\r\n    selectedRows.value = newSelectedRows\r\n    updateAllSelectedState()\r\n    forceUpdate() // 强制刷新界面\r\n    emit('update', {\r\n      path: props.nodePath,\r\n      action: 'removeItem',\r\n      index: index,\r\n      node: currentNode.value\r\n    })\r\n  }\r\n}\r\n\r\n// 选择相关函数\r\nfunction toggleRowSelection(index: number) {\r\n  if (selectedRows.value.has(index)) {\r\n    selectedRows.value.delete(index)\r\n  } else {\r\n    selectedRows.value.add(index)\r\n  }\r\n  updateAllSelectedState()\r\n}\r\n\r\nfunction toggleAllSelection() {\r\n  if (isAllSelected.value) {\r\n    selectedRows.value.clear()\r\n  } else {\r\n    selectedRows.value.clear()\r\n    const childrenCount = currentNode.value?.children?.length || 0\r\n    for (let i = 0; i < childrenCount; i++) {\r\n      selectedRows.value.add(i)\r\n    }\r\n  }\r\n  updateAllSelectedState()\r\n}\r\n\r\nfunction updateAllSelectedState() {\r\n  const childrenCount = currentNode.value?.children?.length || 0\r\n  isAllSelected.value = childrenCount > 0 && selectedRows.value.size === childrenCount\r\n  // config.selected update\r\n  if (currentNode.value) {\r\n    currentNode.value.children.forEach((child, index) => {\r\n      currentNode.value?.selectChild(index, selectedRows.value.has(index))\r\n    })\r\n  } \r\n}\r\n\r\nfunction removeSelectedItems() {\r\n  if (!isDynamicList.value || effectiveReadonly.value || selectedRows.value.size === 0) return\r\n\r\n  // 从大到小删除，避免索引变化问题\r\n  const sortedIndices = Array.from(selectedRows.value).sort((a, b) => b - a)\r\n\r\n  for (const index of sortedIndices) {\r\n    if (currentNode.value) {\r\n      currentNode.value.removeChild(index)\r\n    }\r\n  }\r\n\r\n  selectedRows.value.clear()\r\n  isAllSelected.value = false\r\n  forceUpdate()\r\n\r\n  emit('update', {\r\n    path: props.nodePath,\r\n    action: 'removeSelectedItems',\r\n    node: currentNode.value || undefined\r\n  })\r\n}\r\n\r\nfunction createNewListItem(): VarNode | null {\r\n  if (props.config?.childTemplate) {\r\n    return createNodeFromConfig(props.config.childTemplate)\r\n  }\r\n  const lastChild = currentNode.value?.children[currentNode.value.children.length - 1]\r\n  if (lastChild) {\r\n    return lastChild.template()\r\n  }\r\n  return createNodeFromConfig({\r\n    name: '新项',\r\n    varType: 'string',\r\n    nodeType: 'leaf',\r\n    defaultValue: ''\r\n  })\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_VarInput = _resolveComponent(\"VarInput\", true)!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(wrapperClass.value),\n    key: forceUpdateKey.value\n  }, [\n    _renderSlot(_ctx.$slots, `${pathString.value}--wrapper`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(mainContentClass.value)\n      }, [\n        _renderSlot(_ctx.$slots, `${pathString.value}--main`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n          (_ctx.config?.customComponent !== undefined)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 0,\n                class: _normalizeClass(`custom-component ${baseClassPrefix.value}--custom-component`)\n              }, [\n                (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.config.customComponent), {\n                  modelValue: currentNode.value?.currentValue,\n                  readonly: effectiveReadonly.value,\n                  placeholder: getPlaceholder(),\n                  config: _ctx.config,\n                  style: _normalizeStyle(inputStyle.value),\n                  tree: _ctx.varTree,\n                  node: currentNode.value,\n                  nodePath: _ctx.nodePath,\n                  varTree: _ctx.varTree,\n                  class: _normalizeClass(getInputClass()),\n                  onUpdate: handleChildUpdate,\n                  \"onUpdate:modelValue\": handleValueChange,\n                  onBlur: handleBlur,\n                  onValidationError: handleValidationError\n                }, _createSlots({ _: 2 }, [\n                  _renderList(_ctx.$slots, (_, slotName) => {\n                    return {\n                      name: slotName,\n                      fn: _withCtx((slotProps) => [\n                        _renderSlot(_ctx.$slots, slotName, _normalizeProps(_guardReactiveProps(slotProps)))\n                      ])\n                    }\n                  })\n                ]), 1064, [\"modelValue\", \"readonly\", \"placeholder\", \"config\", \"style\", \"tree\", \"node\", \"nodePath\", \"varTree\", \"class\"]))\n              ], 2))\n            : (_openBlock(), _createElementBlock(\"div\", {\n                key: 1,\n                class: _normalizeClass(`var-input-container ${baseClassPrefix.value}--var-input-container`),\n                style: _normalizeStyle(containerStyle.value)\n              }, [\n                (isLeafNode.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", {\n                      key: 0,\n                      class: _normalizeClass(`leaf-node ${baseClassPrefix.value}--leaf-node`)\n                    }, [\n                      _renderSlot(_ctx.$slots, `${pathString.value}--var-label`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n                        (isShowLabel.value)\n                          ? (_openBlock(), _createElementBlock(\"label\", {\n                              key: 0,\n                              class: _normalizeClass(`var-label ${baseClassPrefix.value}--var-label`)\n                            }, _toDisplayString(nameDisplay.value), 3))\n                          : _createCommentVNode(\"\", true)\n                      ]),\n                      _createElementVNode(\"div\", {\n                        class: _normalizeClass(`leaf-input-container ${baseClassPrefix.value}--leaf-input-container`)\n                      }, [\n                        (_openBlock(), _createBlock(_resolveDynamicComponent(getLeafComponent()), _mergeProps({\n                          modelValue: currentNode.value?.currentValue,\n                          readonly: effectiveReadonly.value,\n                          placeholder: getPlaceholder(),\n                          config: _ctx.config,\n                          class: getInputClass(),\n                          style: inputStyle.value,\n                          tree: _ctx.varTree,\n                          node: currentNode.value,\n                          nodePath: _ctx.nodePath\n                        }, _ctx.$attrs, {\n                          \"onUpdate:modelValue\": handleValueChange,\n                          onBlur: handleBlur,\n                          onValidationError: handleValidationError,\n                          onFocus: handleFocus\n                        }), _createSlots({ _: 2 }, [\n                          _renderList(_ctx.$slots, (_, slotName) => {\n                            return {\n                              name: slotName,\n                              fn: _withCtx((slotProps) => [\n                                _renderSlot(_ctx.$slots, slotName, _normalizeProps(_guardReactiveProps(slotProps)))\n                              ])\n                            }\n                          })\n                        ]), 1040, [\"modelValue\", \"readonly\", \"placeholder\", \"config\", \"class\", \"style\", \"tree\", \"node\", \"nodePath\"])),\n                        (_ctx.$slots[`${pathString.value}--extra`])\n                          ? (_openBlock(), _createElementBlock(\"div\", {\n                              key: 0,\n                              class: _normalizeClass(extraComponentsClass.value)\n                            }, [\n                              _renderSlot(_ctx.$slots, `${pathString.value}--extra`, _normalizeProps(_guardReactiveProps(slotScopeData.value)))\n                            ], 2))\n                          : _createCommentVNode(\"\", true),\n                        (shouldShowSearchButton.value)\n                          ? (_openBlock(), _createElementBlock(\"div\", {\n                              key: 1,\n                              class: _normalizeClass(`search-button-container ${baseClassPrefix.value}--search-button-container`)\n                            }, [\n                              _renderSlot(_ctx.$slots, `${pathString.value}--search-button`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n                                _createElementVNode(\"button\", {\n                                  class: _normalizeClass(searchButtonClass.value),\n                                  onClick: handleSearchButtonClick,\n                                  onMouseenter: handleSearchButtonEnter,\n                                  onMouseleave: handleSearchButtonLeave\n                                }, [\n                                  (displaySearchIcon.value)\n                                    ? (_openBlock(), _createElementBlock(\"img\", _hoisted_1))\n                                    : (_openBlock(), _createElementBlock(\"img\", _hoisted_2))\n                                ], 34)\n                              ])\n                            ], 2))\n                          : _createCommentVNode(\"\", true)\n                      ], 2),\n                      (validationError.value)\n                        ? (_openBlock(), _createElementBlock(\"div\", {\n                            key: 0,\n                            class: _normalizeClass(`error-message ${baseClassPrefix.value}--error-message`)\n                          }, _toDisplayString(validationError.value), 3))\n                        : _createCommentVNode(\"\", true)\n                    ], 2))\n                  : (isDictNode.value)\n                    ? (_openBlock(), _createElementBlock(\"div\", {\n                        key: 1,\n                        class: _normalizeClass(`dict-node ${baseClassPrefix.value}--dict-node`)\n                      }, [\n                        (isShowLabel.value)\n                          ? (_openBlock(), _createElementBlock(\"div\", {\n                              key: 0,\n                              class: _normalizeClass(`dict-header ${baseClassPrefix.value}--dict-header`)\n                            }, [\n                              _renderSlot(_ctx.$slots, `${pathString.value}--var-label`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n                                (isShowLabel.value)\n                                  ? (_openBlock(), _createElementBlock(\"label\", {\n                                      key: 0,\n                                      class: _normalizeClass(`var-label ${baseClassPrefix.value}--var-label`)\n                                    }, _toDisplayString(nameDisplay.value), 3))\n                                  : _createCommentVNode(\"\", true)\n                              ])\n                            ], 2))\n                          : _createCommentVNode(\"\", true),\n                        (_ctx.$slots[`${pathString.value}--extra`])\n                          ? (_openBlock(), _createElementBlock(\"div\", {\n                              key: 1,\n                              class: _normalizeClass(extraComponentsClass.value)\n                            }, [\n                              _renderSlot(_ctx.$slots, `${pathString.value}--extra`, _normalizeProps(_guardReactiveProps(slotScopeData.value)))\n                            ], 2))\n                          : _createCommentVNode(\"\", true),\n                        _createElementVNode(\"div\", {\n                          class: _normalizeClass(`dict-content ${baseClassPrefix.value}--dict-content`),\n                          style: _normalizeStyle({ paddingLeft: _ctx.indentLevel + 'px' })\n                        }, [\n                          (leafChildren.value.length > 0)\n                            ? (_openBlock(), _createElementBlock(\"div\", {\n                                key: 0,\n                                class: _normalizeClass(`dict-leaf-section ${baseClassPrefix.value}--dict-leaf-section`)\n                              }, [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(leafChildren.value, (child, index) => {\n                                  return (_openBlock(), _createBlock(_component_VarInput, _mergeProps({\n                                    key: child.name + '_leaf_' + index,\n                                    varTree: _ctx.varTree,\n                                    nodePath: [..._ctx.nodePath, child.name],\n                                    readonly: effectiveReadonly.value ?? false,\n                                    config: getChildConfig(child),\n                                    indentLevel: 0,\n                                    showLabel: true,\n                                    componentConfig: getChildComponentConfig(child),\n                                    class: `dict-item dict-item--${child.nodeType} ${baseClassPrefix.value}--dict-item ${baseClassPrefix.value}--dict-item--${child.nodeType}`,\n                                    onUpdate: handleChildUpdate,\n                                    onFocus: handleFocus\n                                  }, { ref_for: true }, _ctx.$attrs), _createSlots({ _: 2 }, [\n                                    _renderList(_ctx.$slots, (_, slotName) => {\n                                      return {\n                                        name: slotName,\n                                        fn: _withCtx((slotProps) => [\n                                          _renderSlot(_ctx.$slots, slotName, _mergeProps({ ref_for: true }, slotProps))\n                                        ])\n                                      }\n                                    })\n                                  ]), 1040, [\"varTree\", \"nodePath\", \"readonly\", \"config\", \"componentConfig\", \"class\"]))\n                                }), 128)),\n                                (_ctx.$slots[`${pathString.value}--leaf`])\n                                  ? _renderSlot(_ctx.$slots, `${pathString.value}--leaf`, _normalizeProps(_mergeProps({ key: 0 }, slotScopeData.value)))\n                                  : _createCommentVNode(\"\", true)\n                              ], 2))\n                            : _createCommentVNode(\"\", true),\n                          (complexChildren.value.length > 0)\n                            ? (_openBlock(), _createElementBlock(\"div\", {\n                                key: 1,\n                                class: _normalizeClass(`dict-complex-section ${baseClassPrefix.value}--dict-complex-section`)\n                              }, [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(complexChildren.value, (child, index) => {\n                                  return (_openBlock(), _createBlock(_component_VarInput, _mergeProps({\n                                    key: child.name + '_complex_' + index,\n                                    varTree: _ctx.varTree,\n                                    nodePath: [..._ctx.nodePath, child.name],\n                                    readonly: effectiveReadonly.value ?? false,\n                                    config: getChildConfig(child),\n                                    indentLevel: (_ctx.indentLevel ?? 0) + 20,\n                                    showLabel: true,\n                                    componentConfig: getChildComponentConfig(child),\n                                    class: `dict-item dict-item--${child.nodeType} ${baseClassPrefix.value}--dict-item ${baseClassPrefix.value}--dict-item--${child.nodeType}`,\n                                    onUpdate: handleChildUpdate\n                                  }, { ref_for: true }, _ctx.$attrs), _createSlots({ _: 2 }, [\n                                    _renderList(_ctx.$slots, (_, slotName) => {\n                                      return {\n                                        name: slotName,\n                                        fn: _withCtx((slotProps) => [\n                                          _renderSlot(_ctx.$slots, slotName, _mergeProps({ ref_for: true }, slotProps))\n                                        ])\n                                      }\n                                    })\n                                  ]), 1040, [\"varTree\", \"nodePath\", \"readonly\", \"config\", \"indentLevel\", \"componentConfig\", \"class\"]))\n                                }), 128)),\n                                (_ctx.$slots[`${pathString.value}--complex-leaf`])\n                                  ? _renderSlot(_ctx.$slots, `${pathString.value}--complex-leaf`, _normalizeProps(_mergeProps({ key: 0 }, slotScopeData.value)))\n                                  : _createCommentVNode(\"\", true)\n                              ], 2))\n                            : _createCommentVNode(\"\", true)\n                        ], 6)\n                      ], 2))\n                    : (isListNode.value)\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 2,\n                          class: _normalizeClass(`list-node ${baseClassPrefix.value}--list-node`)\n                        }, [\n                          (isShowLabel.value)\n                            ? (_openBlock(), _createElementBlock(\"div\", {\n                                key: 0,\n                                class: _normalizeClass(`list-header ${baseClassPrefix.value}--list-header`)\n                              }, [\n                                _renderSlot(_ctx.$slots, `${pathString.value}--var-label`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n                                  (isShowLabel.value)\n                                    ? (_openBlock(), _createElementBlock(\"label\", {\n                                        key: 0,\n                                        class: _normalizeClass(`var-label ${baseClassPrefix.value}--var-label`)\n                                      }, _toDisplayString(nameDisplay.value), 3))\n                                    : _createCommentVNode(\"\", true)\n                                ])\n                              ], 2))\n                            : _createCommentVNode(\"\", true),\n                          _createElementVNode(\"div\", {\n                            class: _normalizeClass(`list-header-actions ${baseClassPrefix.value}--list-header-actions`)\n                          }, [\n                            (isDynamicList.value)\n                              ? (_openBlock(), _createElementBlock(\"div\", {\n                                  key: 0,\n                                  class: _normalizeClass(`list-controls ${baseClassPrefix.value}--list-controls`)\n                                }, [\n                                  (!effectiveReadonly.value)\n                                    ? (_openBlock(), _createElementBlock(\"button\", {\n                                        key: 0,\n                                        onClick: addListItem,\n                                        disabled: !!reachedMaxLength.value,\n                                        class: _normalizeClass(`btn-add ${baseClassPrefix.value}--btn-add`)\n                                      }, \" + \", 10, _hoisted_3))\n                                    : _createCommentVNode(\"\", true),\n                                  (!effectiveReadonly.value)\n                                    ? (_openBlock(), _createElementBlock(\"button\", {\n                                        key: 1,\n                                        onClick: removeSelectedItems,\n                                        disabled: selectedRows.value.size === 0,\n                                        class: _normalizeClass(`btn-remove-selected ${baseClassPrefix.value}--btn-remove-selected`)\n                                      }, \" - \", 10, _hoisted_4))\n                                    : _createCommentVNode(\"\", true),\n                                  (_ctx.$slots[`${pathString.value}--extra-buttons`])\n                                    ? (_openBlock(), _createElementBlock(\"div\", {\n                                        key: 2,\n                                        class: _normalizeClass(extraTableButtonsClass.value)\n                                      }, [\n                                        _renderSlot(_ctx.$slots, `${pathString.value}--extra-buttons`, _normalizeProps(_guardReactiveProps(slotScopeData.value)))\n                                      ], 2))\n                                    : _createCommentVNode(\"\", true)\n                                ], 2))\n                              : _createCommentVNode(\"\", true),\n                            (_ctx.$slots[`${pathString.value}--extra`])\n                              ? (_openBlock(), _createElementBlock(\"div\", {\n                                  key: 1,\n                                  class: _normalizeClass(extraComponentsClass.value)\n                                }, [\n                                  _renderSlot(_ctx.$slots, `${pathString.value}--extra`, _normalizeProps(_guardReactiveProps(slotScopeData.value)))\n                                ], 2))\n                              : _createCommentVNode(\"\", true)\n                          ], 2),\n                          _createElementVNode(\"div\", {\n                            class: _normalizeClass(`list-content ${baseClassPrefix.value}--list-content`)\n                          }, [\n                            (shouldRenderAsTable.value)\n                              ? (_openBlock(), _createElementBlock(\"div\", {\n                                  key: 0,\n                                  class: _normalizeClass(`table-container ${baseClassPrefix.value}--table-container`)\n                                }, [\n                                  _createElementVNode(\"table\", {\n                                    class: _normalizeClass(`list-table ${baseClassPrefix.value}--list-table`)\n                                  }, [\n                                    _createElementVNode(\"thead\", null, [\n                                      _createElementVNode(\"tr\", null, [\n                                        _createElementVNode(\"th\", {\n                                          class: _normalizeClass(`select-column ${baseClassPrefix.value}--select-column`)\n                                        }, [\n                                          _createElementVNode(\"label\", {\n                                            class: _normalizeClass(`var-checkbox ${baseClassPrefix.value}--var-checkbox`)\n                                          }, [\n                                            _createElementVNode(\"input\", {\n                                              type: \"checkbox\",\n                                              checked: isAllSelected.value,\n                                              onChange: toggleAllSelection,\n                                              class: _normalizeClass(`var-checkbox select-all-checkbox ${baseClassPrefix.value}--select-all-checkbox`)\n                                            }, null, 42, _hoisted_5),\n                                            _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"checkmark\" }, null, -1))\n                                          ], 2)\n                                        ], 2),\n                                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(getTableHeaders(), (header, index) => {\n                                          return (_openBlock(), _createElementBlock(\"th\", { key: index }, _toDisplayString(header), 1))\n                                        }), 128))\n                                      ])\n                                    ]),\n                                    _createElementVNode(\"tbody\", null, [\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(listItems.value, (child, index) => {\n                                        return (_openBlock(), _createElementBlock(\"tr\", {\n                                          key: `${child.name}_${child.index}_${index}`,\n                                          class: _normalizeClass(`list-row ${baseClassPrefix.value}--list-row`)\n                                        }, [\n                                          _createElementVNode(\"td\", {\n                                            class: _normalizeClass(`select-cell ${baseClassPrefix.value}--select-cell`)\n                                          }, [\n                                            _createElementVNode(\"label\", {\n                                              class: _normalizeClass(`var-checkbox ${baseClassPrefix.value}--var-checkbox`)\n                                            }, [\n                                              _createElementVNode(\"input\", {\n                                                type: \"checkbox\",\n                                                checked: selectedRows.value.has(index),\n                                                onChange: ($event: any) => (toggleRowSelection(index)),\n                                                class: _normalizeClass(`row-select-checkbox ${baseClassPrefix.value}--row-select-checkbox`)\n                                              }, null, 42, _hoisted_6),\n                                              _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"checkmark\" }, null, -1))\n                                            ], 2)\n                                          ], 2),\n                                          (child.nodeType === 'dict')\n                                            ? (_openBlock(true), _createElementBlock(_Fragment, { key: 0 }, _renderList(child.children.filter(child => isChildDisplay(child)), (dictChild, dictIndex) => {\n                                                return (_openBlock(), _createElementBlock(\"td\", {\n                                                  key: dictIndex,\n                                                  class: _normalizeClass(`list-cell ${baseClassPrefix.value}--list-cell`)\n                                                }, [\n                                                  _createVNode(_component_VarInput, _mergeProps({\n                                                    varTree: _ctx.varTree,\n                                                    nodePath: [..._ctx.nodePath, index.toString(), dictChild.name],\n                                                    readonly: effectiveReadonly.value ?? false,\n                                                    config: getChildConfig(dictChild),\n                                                    showLabel: false,\n                                                    componentConfig: getChildComponentConfig(child),\n                                                    onUpdate: handleChildUpdate\n                                                  }, { ref_for: true }, _ctx.$attrs), _createSlots({ _: 2 }, [\n                                                    _renderList(_ctx.$slots, (_, slotName) => {\n                                                      return {\n                                                        name: slotName,\n                                                        fn: _withCtx((slotProps) => [\n                                                          _renderSlot(_ctx.$slots, slotName, _mergeProps({ ref_for: true }, slotProps))\n                                                        ])\n                                                      }\n                                                    })\n                                                  ]), 1040, [\"varTree\", \"nodePath\", \"readonly\", \"config\", \"componentConfig\"])\n                                                ], 2))\n                                              }), 128))\n                                            : (_openBlock(), _createElementBlock(\"td\", {\n                                                key: 1,\n                                                class: _normalizeClass(`list-cell ${baseClassPrefix.value}--list-cell`)\n                                              }, [\n                                                _createVNode(_component_VarInput, _mergeProps({\n                                                  varTree: _ctx.varTree,\n                                                  nodePath: [..._ctx.nodePath, index.toString()],\n                                                  readonly: effectiveReadonly.value ?? false,\n                                                  config: getChildConfig(child),\n                                                  showLabel: true,\n                                                  componentConfig: getChildComponentConfig(child),\n                                                  onUpdate: handleChildUpdate\n                                                }, { ref_for: true }, _ctx.$attrs), _createSlots({ _: 2 }, [\n                                                  _renderList(_ctx.$slots, (_, slotName) => {\n                                                    return {\n                                                      name: slotName,\n                                                      fn: _withCtx((slotProps) => [\n                                                        _renderSlot(_ctx.$slots, slotName, _mergeProps({ ref_for: true }, slotProps))\n                                                      ])\n                                                    }\n                                                  })\n                                                ]), 1040, [\"varTree\", \"nodePath\", \"readonly\", \"config\", \"componentConfig\"])\n                                              ], 2))\n                                        ], 2))\n                                      }), 128))\n                                    ])\n                                  ], 2)\n                                ], 2))\n                              : (_openBlock(), _createElementBlock(\"div\", {\n                                  key: 1,\n                                  class: _normalizeClass(`list-items ${baseClassPrefix.value}--list-items`)\n                                }, [\n                                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(currentNode.value?.children, (child, index) => {\n                                    return (_openBlock(), _createElementBlock(\"div\", {\n                                      key: `${child.name}_${child.index}_${index}`,\n                                      class: _normalizeClass(`list-item ${baseClassPrefix.value}--list-item`),\n                                      style: _normalizeStyle({ paddingLeft: _ctx.indentLevel + 'px' })\n                                    }, [\n                                      _createElementVNode(\"div\", {\n                                        class: _normalizeClass(`list-item-header ${baseClassPrefix.value}--list-item-header`)\n                                      }, [\n                                        _createElementVNode(\"span\", {\n                                          class: _normalizeClass(`item-index ${baseClassPrefix.value}--item-index`)\n                                        }, \"[\" + _toDisplayString(index) + \"]\", 3),\n                                        (isDynamicList.value && !effectiveReadonly.value)\n                                          ? (_openBlock(), _createElementBlock(\"button\", {\n                                              key: 0,\n                                              onClick: ($event: any) => (removeListItem(index)),\n                                              class: _normalizeClass(`btn-remove-inline ${baseClassPrefix.value}--btn-remove-inline`)\n                                            }, \" 删除 \", 10, _hoisted_7))\n                                          : _createCommentVNode(\"\", true)\n                                      ], 2),\n                                      _createVNode(_component_VarInput, _mergeProps({\n                                        varTree: _ctx.varTree,\n                                        nodePath: [..._ctx.nodePath, index.toString()],\n                                        readonly: effectiveReadonly.value ?? false,\n                                        config: getChildConfig(child),\n                                        showLabel: true,\n                                        componentConfig: getChildComponentConfig(child),\n                                        indentLevel: (_ctx.indentLevel ?? 0) + 20,\n                                        onUpdate: handleChildUpdate\n                                      }, { ref_for: true }, _ctx.$attrs), _createSlots({ _: 2 }, [\n                                        _renderList(_ctx.$slots, (_, slotName) => {\n                                          return {\n                                            name: slotName,\n                                            fn: _withCtx((slotProps) => [\n                                              _renderSlot(_ctx.$slots, slotName, _mergeProps({ ref_for: true }, slotProps))\n                                            ])\n                                          }\n                                        })\n                                      ]), 1040, [\"varTree\", \"nodePath\", \"readonly\", \"config\", \"componentConfig\", \"indentLevel\"])\n                                    ], 6))\n                                  }), 128))\n                                ], 2))\n                          ], 2)\n                        ], 2))\n                      : _createCommentVNode(\"\", true)\n              ], 6))\n        ])\n      ], 2)\n    ]),\n    _createVNode(SearchModal, {\n      visible: showSearchModal.value,\n      searchMethods: searchMethods.value,\n      onClose: handleSearchModalClose,\n      onConfirm: handleSearchModalConfirm\n    }, null, 8, [\"visible\", \"searchMethods\"])\n  ], 2))\n}\n}\n\n})","<template>\r\n  <div :class=\"wrapperClass\" :key=\"forceUpdateKey\">\r\n    <slot\r\n      :name=\"`${pathString}--wrapper`\"\r\n      v-bind=\"slotScopeData\"\r\n    >\r\n      <!-- 主要内容区域 -->\r\n      <div :class=\"mainContentClass\">\r\n        <slot\r\n          :name=\"`${pathString}--main`\"\r\n          v-bind=\"slotScopeData\"\r\n        >\r\n          <!-- 外部组件钩子 config.customComponent -->\r\n          <div v-if=\"config?.customComponent !== undefined\" :class=\"`custom-component ${baseClassPrefix}--custom-component`\">\r\n            <component\r\n              :is=\"config.customComponent\"\r\n              :modelValue=\"currentNode?.currentValue\"\r\n              :readonly=\"effectiveReadonly\"\r\n              :placeholder=\"getPlaceholder()\"\r\n              :config=\"config\"\r\n              :style=\"inputStyle\"\r\n              :tree=\"varTree\"\r\n              :node=\"currentNode\"\r\n              :nodePath=\"nodePath\"\r\n              :varTree=\"varTree\"\r\n              :class=\"getInputClass()\"\r\n              @update=\"handleChildUpdate\"\r\n              @update:modelValue=\"handleValueChange\"\r\n              @blur=\"handleBlur\"\r\n              @validation-error=\"handleValidationError\"\r\n            >\r\n              <!-- 透传插槽 -->\r\n              <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps\">\r\n                <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n              </template>\r\n            </component>\r\n          </div>\r\n          <div v-else :class=\"`var-input-container ${baseClassPrefix}--var-input-container`\" :style=\"containerStyle\">\r\n            <!-- 叶子节点渲染 -->\r\n            <div v-if=\"isLeafNode\" :class=\"`leaf-node ${baseClassPrefix}--leaf-node`\">\r\n              <!-- 标签插槽 -->\r\n              <slot\r\n                :name=\"`${pathString}--var-label`\"\r\n                v-bind=\"slotScopeData\"\r\n              >\r\n                <label v-if=\"isShowLabel\" :class=\"`var-label ${baseClassPrefix}--var-label`\">{{ nameDisplay }}</label>\r\n              </slot>\r\n              <!-- 输入框和额外组件的容器 -->\r\n              <div :class=\"`leaf-input-container ${baseClassPrefix}--leaf-input-container`\">\r\n                <!-- 基础类型输入框 -->\r\n                <component\r\n                  :is=\"getLeafComponent()\"\r\n                  :modelValue=\"currentNode?.currentValue\"\r\n                  :readonly=\"effectiveReadonly\"\r\n                  :placeholder=\"getPlaceholder()\"\r\n                  :config=\"config\"\r\n                  :class=\"getInputClass()\"\r\n                  :style=\"inputStyle\"\r\n                  :tree=\"varTree\"\r\n                  :node=\"currentNode\"\r\n                  :nodePath=\"nodePath\"\r\n                  v-bind=\"$attrs\"\r\n\r\n                  @update:modelValue=\"handleValueChange\"\r\n                  @blur=\"handleBlur\"\r\n                  @validation-error=\"handleValidationError\"\r\n                  @focus=\"handleFocus\"\r\n                >\r\n                  <!-- 透传插槽 -->\r\n                  <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps\">\r\n                    <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n                  </template>\r\n                </component>\r\n\r\n                <!-- 额外组件插槽 - 在叶子节点内部 -->\r\n                <div v-if=\"$slots[`${pathString}--extra`]\" :class=\"extraComponentsClass\">\r\n                  <slot\r\n                    :name=\"`${pathString}--extra`\"\r\n                    v-bind=\"slotScopeData\"\r\n                  >\r\n                  </slot>\r\n                </div>\r\n                <!-- 搜索按钮插槽 -->\r\n                <div v-if=\"shouldShowSearchButton\" :class=\"`search-button-container ${baseClassPrefix}--search-button-container`\">\r\n                  <slot\r\n                    :name=\"`${pathString}--search-button`\"\r\n                    v-bind=\"slotScopeData\"\r\n                  >\r\n                    <button\r\n                      :class=\"searchButtonClass\"\r\n                      @click=\"handleSearchButtonClick\"\r\n                      @mouseenter=\"handleSearchButtonEnter\"\r\n                      @mouseleave=\"handleSearchButtonLeave\"\r\n                    >\r\n                    <img v-if=\"displaySearchIcon\" src=\"../../assets/search-plus-light.png\" width=\"20px\"/>\r\n                    <img v-else src=\"../../assets/search-plus-dark.png\" width=\"20px\"/>\r\n                    </button>\r\n                  </slot>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"validationError\" :class=\"`error-message ${baseClassPrefix}--error-message`\">{{ validationError }}</div>\r\n            </div>\r\n\r\n            <!-- 字典节点渲染 -->\r\n            <div v-else-if=\"isDictNode\" :class=\"`dict-node ${baseClassPrefix}--dict-node`\">\r\n              <div v-if=\"isShowLabel\" :class=\"`dict-header ${baseClassPrefix}--dict-header`\">\r\n                <!-- 标签插槽 -->\r\n                <slot\r\n                  :name=\"`${pathString}--var-label`\"\r\n                  v-bind=\"slotScopeData\"\r\n                >\r\n                  <label v-if=\"isShowLabel\" :class=\"`var-label ${baseClassPrefix}--var-label`\">{{ nameDisplay }}</label>\r\n                </slot>\r\n              </div>\r\n              <!-- 字典节点的额外组件插槽 -->\r\n              <div v-if=\"$slots[`${pathString}--extra`]\" :class=\"extraComponentsClass\">\r\n                <slot\r\n                  :name=\"`${pathString}--extra`\"\r\n                  v-bind=\"slotScopeData\"\r\n                >\r\n                </slot>\r\n              </div>\r\n              <div :class=\"`dict-content ${baseClassPrefix}--dict-content`\" :style=\"{ paddingLeft: indentLevel + 'px' }\">\r\n                <!-- 先渲染所有叶子节点 -->\r\n                <div v-if=\"leafChildren.length > 0\" :class=\"`dict-leaf-section ${baseClassPrefix}--dict-leaf-section`\">\r\n                  <VarInput\r\n                    v-for=\"(child, index) in leafChildren\"\r\n                    :key=\"child.name + '_leaf_' + index\"\r\n                    :varTree=\"varTree\"\r\n                    :nodePath=\"[...nodePath, child.name]\"\r\n                    :readonly=\"effectiveReadonly ?? false\"\r\n                    :config=\"getChildConfig(child)\"\r\n                    :indentLevel=\"0\"\r\n                    :showLabel=\"true\"\r\n                    :componentConfig=\"getChildComponentConfig(child)\"\r\n                    :class=\"`dict-item dict-item--${child.nodeType} ${baseClassPrefix}--dict-item ${baseClassPrefix}--dict-item--${child.nodeType}`\"\r\n                    @update=\"handleChildUpdate\"\r\n                    @focus=\"handleFocus\"\r\n                    v-bind=\"$attrs\"\r\n                  >\r\n                    <!-- 透传插槽 -->\r\n                    <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps\">\r\n                      <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n                    </template>\r\n                  </VarInput>\r\n                  <!-- 叶子插槽，参与grid布局 -->\r\n                  <template v-if=\"$slots[`${pathString}--leaf`]\" :class=\"`dict-leaf-slot ${baseClassPrefix}--dict-leaf-slot`\">\r\n                    <slot\r\n                      :name=\"`${pathString}--leaf`\"\r\n                      v-bind=\"slotScopeData\"\r\n                    >\r\n                    </slot>\r\n                  </template>\r\n                </div>\r\n\r\n                <!-- 再渲染所有复杂节点（dict和list） -->\r\n                <div v-if=\"complexChildren.length > 0\" :class=\"`dict-complex-section ${baseClassPrefix}--dict-complex-section`\">\r\n                  <VarInput\r\n                    v-for=\"(child, index) in complexChildren\"\r\n                    :key=\"child.name + '_complex_' + index\"\r\n                    :varTree=\"varTree\"\r\n                    :nodePath=\"[...nodePath, child.name]\"\r\n                    :readonly=\"effectiveReadonly ?? false\"\r\n                    :config=\"getChildConfig(child)\"\r\n                    :indentLevel=\"(indentLevel ?? 0) + 20\"\r\n                    :showLabel=\"true\"\r\n                    :componentConfig=\"getChildComponentConfig(child)\"\r\n                    :class=\"`dict-item dict-item--${child.nodeType} ${baseClassPrefix}--dict-item ${baseClassPrefix}--dict-item--${child.nodeType}`\"\r\n                    @update=\"handleChildUpdate\"\r\n                    v-bind=\"$attrs\"\r\n                  >\r\n                    <!-- 透传插槽 -->\r\n                    <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps\">\r\n                      <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n                    </template>\r\n                  </VarInput>\r\n                  <!-- 复杂叶子插槽，参与布局 -->\r\n                  <template v-if=\"$slots[`${pathString}--complex-leaf`]\">\r\n                    <slot\r\n                      :name=\"`${pathString}--complex-leaf`\"\r\n                      v-bind=\"slotScopeData\"\r\n                    >\r\n                    </slot>\r\n                  </template>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 列表节点渲染 -->\r\n            <div v-else-if=\"isListNode\" :class=\"`list-node ${baseClassPrefix}--list-node`\">\r\n              <div v-if=\"isShowLabel\" :class=\"`list-header ${baseClassPrefix}--list-header`\">\r\n                <!-- 标签插槽 -->\r\n                <slot\r\n                  :name=\"`${pathString}--var-label`\"\r\n                  v-bind=\"slotScopeData\"\r\n                >\r\n                  <label v-if=\"isShowLabel\" :class=\"`var-label ${baseClassPrefix}--var-label`\">{{ nameDisplay }}</label>\r\n                </slot>\r\n              </div>\r\n              <div :class=\"`list-header-actions ${baseClassPrefix}--list-header-actions`\">\r\n                <!-- 动态列表的添加/删除按钮 -->\r\n                <div v-if=\"isDynamicList\" :class=\"`list-controls ${baseClassPrefix}--list-controls`\">\r\n                  <button\r\n                    v-if=\"!effectiveReadonly\"\r\n                    @click=\"addListItem\"\r\n                    :disabled=\"!!reachedMaxLength\"\r\n                    :class=\"`btn-add ${baseClassPrefix}--btn-add`\"\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <button\r\n                    v-if=\"!effectiveReadonly\"\r\n                    @click=\"removeSelectedItems\"\r\n                    :disabled=\"selectedRows.size === 0\"\r\n                    :class=\"`btn-remove-selected ${baseClassPrefix}--btn-remove-selected`\"\r\n                  >\r\n                    -\r\n                    <!-- ({{ selectedRows.size }}) -->\r\n                  </button>\r\n                  <!-- 列表节点的额外按钮插槽 -->\r\n                  <div v-if=\"$slots[`${pathString}--extra-buttons`]\" :class=\"extraTableButtonsClass\">\r\n                    <slot\r\n                      :name=\"`${pathString}--extra-buttons`\"\r\n                      v-bind=\"slotScopeData\"\r\n                    >\r\n                    </slot>\r\n                  </div>\r\n                </div>\r\n                <!-- 列表节点的额外组件插槽 -->\r\n                <div v-if=\"$slots[`${pathString}--extra`]\" :class=\"extraComponentsClass\">\r\n                  <slot\r\n                    :name=\"`${pathString}--extra`\"\r\n                    v-bind=\"slotScopeData\"\r\n                  >\r\n                  </slot>\r\n                </div>\r\n              </div>\r\n              <!-- 表格形式渲染列表 -->\r\n              <div :class=\"`list-content ${baseClassPrefix}--list-content`\">\r\n                <div v-if=\"shouldRenderAsTable\" :class=\"`table-container ${baseClassPrefix}--table-container`\">\r\n                  <table :class=\"`list-table ${baseClassPrefix}--list-table`\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th :class=\"`select-column ${baseClassPrefix}--select-column`\">\r\n                        <label :class=\"`var-checkbox ${baseClassPrefix}--var-checkbox`\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            :checked=\"isAllSelected\"\r\n                            @change=\"toggleAllSelection\"\r\n                            :class=\"`var-checkbox select-all-checkbox ${baseClassPrefix}--select-all-checkbox`\"\r\n                          />\r\n                          <span class=\"checkmark\"></span>\r\n                        </label>\r\n                      </th>\r\n                      <th v-for=\"(header, index) in getTableHeaders()\" :key=\"index\">\r\n                        {{ header }}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"(child, index) in listItems\" :key=\"`${child.name}_${child.index}_${index}`\" :class=\"`list-row ${baseClassPrefix}--list-row`\">\r\n                      <td :class=\"`select-cell ${baseClassPrefix}--select-cell`\">\r\n                        <label :class=\"`var-checkbox ${baseClassPrefix}--var-checkbox`\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            :checked=\"selectedRows.has(index)\"\r\n                            @change=\"toggleRowSelection(index)\"\r\n                            :class=\"`row-select-checkbox ${baseClassPrefix}--row-select-checkbox`\"\r\n                          />\r\n                          <span class=\"checkmark\"></span>\r\n                        </label>\r\n                      </td>\r\n                      <!-- 如果子项是dict，则每个字段占一列 -->\r\n                      <template v-if=\"child.nodeType === 'dict'\">\r\n                        <td v-for=\"(dictChild, dictIndex) in child.children.filter(child => isChildDisplay(child))\" :key=\"dictIndex\" :class=\"`list-cell ${baseClassPrefix}--list-cell`\">\r\n                          <VarInput\r\n                            :varTree=\"varTree\"\r\n                            :nodePath=\"[...nodePath, index.toString(), dictChild.name]\"\r\n                            :readonly=\"effectiveReadonly ?? false\"\r\n                            :config=\"getChildConfig(dictChild)\"\r\n                            :showLabel=\"false\"\r\n                            :componentConfig=\"getChildComponentConfig(child)\"\r\n                            @update=\"handleChildUpdate\"\r\n                            v-bind=\"$attrs\"\r\n                          >\r\n                            <!-- 透传插槽 -->\r\n                            <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps\">\r\n                              <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n                            </template>\r\n                          </VarInput>\r\n                        </td>\r\n                      </template>\r\n                      <!-- 如果子项不是dict，则整个子项占一列 -->\r\n                      <td v-else :class=\"`list-cell ${baseClassPrefix}--list-cell`\">\r\n                        <VarInput\r\n                          :varTree=\"varTree\"\r\n                          :nodePath=\"[...nodePath, index.toString()]\"\r\n                          :readonly=\"effectiveReadonly ?? false\"\r\n                          :config=\"getChildConfig(child)\"\r\n                          :showLabel=\"true\"\r\n                          :componentConfig=\"getChildComponentConfig(child)\"\r\n                          @update=\"handleChildUpdate\"\r\n                          v-bind=\"$attrs\"\r\n                        >\r\n                            <!-- 透传插槽 -->\r\n                            <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps\">\r\n                              <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n                            </template>\r\n                        </VarInput>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                  </table>\r\n                </div>\r\n                <!-- 非表格形式渲染列表 -->\r\n                <div v-else :class=\"`list-items ${baseClassPrefix}--list-items`\">\r\n                  <div\r\n                    v-for=\"(child, index) in currentNode?.children\"\r\n                    :key=\"`${child.name}_${child.index}_${index}`\"\r\n                    :class=\"`list-item ${baseClassPrefix}--list-item`\"\r\n                    :style=\"{ paddingLeft: indentLevel + 'px' }\"\r\n                  >\r\n                    <div :class=\"`list-item-header ${baseClassPrefix}--list-item-header`\">\r\n                      <span :class=\"`item-index ${baseClassPrefix}--item-index`\">[{{ index }}]</span>\r\n                      <button\r\n                        v-if=\"isDynamicList && !effectiveReadonly\"\r\n                        @click=\"removeListItem(index)\"\r\n                        :class=\"`btn-remove-inline ${baseClassPrefix}--btn-remove-inline`\"\r\n                      >\r\n                        删除\r\n                      </button>\r\n                    </div>\r\n                    <VarInput\r\n                      :varTree=\"varTree\"\r\n                      :nodePath=\"[...nodePath, index.toString()]\"\r\n                      :readonly=\"effectiveReadonly ?? false\"\r\n                      :config=\"getChildConfig(child)\"\r\n                      :showLabel=\"true\"\r\n                      :componentConfig=\"getChildComponentConfig(child)\"\r\n                      :indentLevel=\"(indentLevel ?? 0) + 20\"\r\n                      @update=\"handleChildUpdate\"\r\n                      v-bind=\"$attrs\"\r\n                    >\r\n                      <!-- 透传插槽 -->\r\n                      <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps\">\r\n                        <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n                      </template>\r\n                    </VarInput>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </slot>\r\n      </div>\r\n    </slot>\r\n\r\n    <!-- 搜索弹窗 -->\r\n    <SearchModal\r\n      :visible=\"showSearchModal\"\r\n      :searchMethods=\"searchMethods\"\r\n      @close=\"handleSearchModalClose\"\r\n      @confirm=\"handleSearchModalConfirm\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { VarTree, VarNode, VarNodeConfig, createNodeFromConfig, NodeStructure, cns, createTreeFromConfig, SearchMethod, SearchResultHandler } from '@/utils/VarTree'\r\nimport StringInput from './inputs/StringInput.vue'\r\nimport NumberInput from './inputs/NumberInput.vue'\r\nimport DateInput from './inputs/DateInput.vue'\r\nimport SelectionInput from './inputs/StringInput.vue'\r\nimport BooleanInput from './inputs/BooleanInput.vue'\r\nimport SearchModal from '@/components/searchModel/SearchModal.vue'\r\n\r\nimport {getPathString} from './utils'\r\n\r\ntype SlotProps = Record<string, any>\r\n\r\nconst props = defineProps<{\r\n  varTree: VarTree\r\n  nodePath: string[]\r\n  readonly?: boolean\r\n  config?: VarNodeConfig\r\n  indentLevel?: number\r\n  showLabel?: boolean\r\n  wrapperStyle?: Record<string, any>\r\n  componentConfig?: any\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update', payload: { path: string[]; value?: any; node?: VarNode; action?: string; index?: number }): void\r\n}>()\r\n\r\ndefineSlots<{\r\n  [key: string]: (props: SlotProps) => any\r\n}>()\r\n\r\nconst validationError = ref<string>('')\r\nconst nodeValue = ref<any>(null)\r\n\r\n// 列表选择状态管理\r\nconst selectedRows = ref<Set<number>>(new Set())\r\nconst isAllSelected = ref<boolean>(false)\r\n\r\nconst slotScopeData = computed(() => ({\r\n  allProps: props,\r\n  validationError: validationError,\r\n  nodeValue: nodeValue,\r\n  currentNode: currentNode.value,\r\n  pathString: pathString.value,\r\n  isLeafNode: isLeafNode.value,\r\n  isDictNode: isDictNode.value,\r\n  isListNode: isListNode.value,\r\n  isDynamicList: isDynamicList.value,\r\n  effectiveReadonly: effectiveReadonly.value,\r\n  shouldRenderAsTable: shouldRenderAsTable.value,\r\n  reachedMaxLength: reachedMaxLength.value,\r\n  containerStyle: containerStyle.value,\r\n  inputStyle: inputStyle.value,\r\n  nameDisplay: nameDisplay.value,\r\n  initNodeValue:initNodeValue,\r\n  getLeafComponent:getLeafComponent,\r\n  getPlaceholder:getPlaceholder,\r\n  getInputClass:getInputClass,\r\n  getTableHeaders:getTableHeaders,\r\n  getChildConfig:getChildConfig,\r\n  handleValueChange:handleValueChange,\r\n  handleChildUpdate:handleChildUpdate,\r\n  handleValidation:handleValidation,\r\n  handleValidationError:handleValidationError,\r\n  addListItem:addListItem,\r\n  removeListItem:removeListItem,\r\n  createNewListItem:createNewListItem,\r\n  forceUpdate:forceUpdate,\r\n  forceUpdateKey:forceUpdateKey.value,\r\n  setNodeValue:setNodeValue,\r\n  getNodeValue:getNodeValue,\r\n  // 选择相关\r\n  selectedRows: selectedRows.value,\r\n  isAllSelected: isAllSelected.value,\r\n  toggleRowSelection: toggleRowSelection,\r\n  toggleAllSelection: toggleAllSelection,\r\n  removeSelectedItems: removeSelectedItems,\r\n\r\n  // 输入框、搜索按钮相关\r\n  handleFocus: handleFocus,\r\n  handleBlur: handleBlur,\r\n  focusCounter: focusCounter.value,\r\n  searchButtonCounter: searchButtonCounter.value,\r\n  handleSearchButtonClick: handleSearchButtonClick,\r\n  displaySearchButton: displaySearchButton.value,\r\n\r\n\r\n}));\r\n\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\nconst displaySearchButton = ref(false)\r\nconst displaySearchIcon = ref(false)\r\nconst searchButtonCounter = ref(0)\r\nconst focusCounter = ref(0)\r\nconst showSearchModal = ref(false)\r\n\r\n\r\n\r\nconst currentNode = computed<VarNode | null>(() => {return props.varTree.findNodeByPath(props.nodePath)})\r\n\r\n// 从config获取搜索方法配置\r\nconst searchMethods = computed<SearchMethod[]>(() => {\r\n  return currentNode.value?.config?.searchMethods || []\r\n})\r\n\r\n// 是否应该显示搜索按钮（基于配置和当前状态）\r\nconst shouldShowSearchButton = computed(() => {\r\n  return displaySearchButton.value && searchMethods.value && searchMethods.value.length > 0\r\n})\r\nconst pathString = computed<string>(()=>getPathString(props.varTree,props.nodePath))\r\nconst setNodeValue = (val: any, refresh:boolean=true, update:boolean=true) => {\r\n  if (currentNode.value) {\r\n    currentNode.value.currentValue = val\r\n  }\r\n  if (refresh) {\r\n    forceUpdate()\r\n  }\r\n  if (update) {\r\n    emit('update', {\r\n      path: props.nodePath,\r\n      value: val,\r\n      node: currentNode.value || undefined\r\n    })\r\n  }\r\n}\r\nconst getNodeValue = () => {\r\n  return currentNode.value?.currentValue\r\n}\r\n\r\nconst isLeafNode = computed(() => currentNode.value && currentNode.value.isLeaf())\r\nconst isDictNode = computed(() => currentNode.value && currentNode.value.nodeType === 'dict')\r\nconst isListNode = computed(() => currentNode.value && currentNode.value.nodeType === 'list')\r\nconst isDynamicList = computed(() => isListNode.value && currentNode.value?.varType === 'dynamiclist')\r\nconst effectiveReadonly = computed(() => props.readonly || (currentNode.value && currentNode.value.readonly))\r\nconst isShowLabel = computed(()=> {\r\n  if (props.config?.hideLabel == true) {\r\n    return false\r\n  }\r\n  if (props.showLabel == undefined) {\r\n    return true\r\n  }\r\n  if (props.showLabel == false) {\r\n    return false\r\n  }\r\n  return true\r\n})\r\nconst shouldRenderAsTable = computed(() => {\r\n  if (!isListNode.value) return false\r\n  return ['fixlist', 'dynamiclist'].includes((currentNode.value?.varType ?? '') as string)\r\n})\r\nconst reachedMaxLength = computed(() => {\r\n  if (!isDynamicList.value) return false\r\n  const maxLength = props.config?.maxLength\r\n  return !!maxLength && !!currentNode.value?.children && currentNode.value.children.length >= maxLength\r\n})\r\nconst containerStyle = computed(() => ({\r\n  ...(props.wrapperStyle || {}),\r\n  // marginBottom: '8px'\r\n}))\r\nconst inputStyle = computed(() => ({\r\n  // width: '100%'\r\n}))\r\nconst nameDisplay = computed(() => {\r\n  return  props.componentConfig?.nameDisplay || currentNode.value?.getNameDisplay() || '未命名'\r\n})\r\n\r\nconst baseClassPrefix = computed(() => {\r\n  // 如果config中有自定义前缀，使用自定义前缀，否则使用pathString，如果pathString为空则使用默认前缀\r\n  if (props.config?.classPrefix) {\r\n    return props.config.classPrefix\r\n  }\r\n  return pathString.value || pathString.value || 'var-input'\r\n})\r\n\r\nconst wrapperClass = computed(() => {\r\n  const t = currentNode.value?.nodeType\r\n  return `wrapper ${baseClassPrefix.value}--wrapper ${t}-node-varinput ${baseClassPrefix.value}--${t}-node-varinput`\r\n})\r\n\r\nconst mainContentClass = computed(() => {\r\n  return `main ${baseClassPrefix.value}--main`\r\n})\r\n\r\nconst extraComponentsClass = computed(() => {\r\n  return `extra ${baseClassPrefix.value}--extra`\r\n})\r\n\r\nconst extraTableButtonsClass = computed(() => {\r\n  return `extra-table-buttons ${baseClassPrefix.value}--extra-table-buttons`\r\n})\r\n\r\nconst searchButtonClass = computed(() => {\r\n  return `search-button ${baseClassPrefix.value}--search-button`\r\n})\r\n\r\n// 分离叶子节点和复杂节点\r\nconst leafChildren = computed(() => {\r\n  if (!currentNode.value?.children) return []\r\n  return currentNode.value.children.filter(child => isChildDisplay(child) && child.nodeType === 'leaf')\r\n})\r\n\r\nconst complexChildren = computed(() => {\r\n  if (!currentNode.value?.children) return []\r\n  return currentNode.value.children.filter(child => isChildDisplay(child) && (child.nodeType === 'dict' || child.nodeType === 'list'))\r\n})\r\n\r\nconst listItems = computed(()=>{\r\n  if(currentNode.value?.varType !== 'dynamiclist'){\r\n    return []\r\n  }\r\n  if(!currentNode.value?.config?.childTemplate) {\r\n    return currentNode.value.children\r\n  }\r\n  const length = currentNode.value.children.length\r\n  const rowProvided = currentNode.value.config?.rowProvided ?? 3\r\n  if (length < rowProvided) {\r\n    for (let i = length; i < rowProvided; i++) {\r\n      currentNode.value.addChild(createNewListItem()!)\r\n    }\r\n  }\r\n  return currentNode.value.children\r\n})\r\n\r\nwatch(currentNode, () => {\r\n  initNodeValue()\r\n}, { immediate: true, deep: true })\r\n\r\n// 监听列表内容变化，重置选择状态\r\nwatch(() => currentNode.value?.children?.length, () => {\r\n  selectedRows.value.clear()\r\n  isAllSelected.value = false\r\n}, { immediate: true })\r\n\r\nfunction handleFocus() {\r\n  displaySearchButton.value = true && !effectiveReadonly.value\r\n  searchButtonCounter.value++\r\n  // console.log(`Focus on node: ${pathString.value}`)\r\n}\r\n\r\nfunction handleSearchButtonClick() {\r\n  // 处理搜索按钮点击事件\r\n  // console.log('Search clicked')\r\n  searchButtonCounter.value++\r\n  displaySearchButton.value = false\r\n  displaySearchIcon.value = false\r\n  showSearchModal.value = true && !effectiveReadonly.value\r\n}\r\n\r\nfunction handleSearchButtonEnter(){\r\n  displaySearchIcon.value = true\r\n}\r\n\r\nfunction handleSearchButtonLeave(){\r\n  displaySearchIcon.value = false\r\n}\r\n\r\nfunction handleSearchModalClose() {\r\n  showSearchModal.value = false\r\n}\r\n\r\nfunction handleSearchModalConfirm(data: any) {\r\n  // 处理搜索确认逻辑，接收SearchModal传来的完整结果\r\n  console.log('搜索确认', data)\r\n\r\n  if (!currentNode.value || !data) {\r\n    showSearchModal.value = false\r\n    return\r\n  }\r\n\r\n  // 检查是否有自定义搜索结果处理函数\r\n  const customHandler = currentNode.value.config?.customSearchResultHandler\r\n\r\n  if (customHandler && typeof customHandler === 'function') {\r\n    // 执行自定义处理逻辑\r\n    try {\r\n      customHandler(data, currentNode.value)\r\n    } catch (error) {\r\n      console.error('自定义搜索结果处理函数执行失败:', error)\r\n    }\r\n  } else {\r\n    // 默认处理逻辑：将 firstSelectedResult 的 result 字段赋值给 currentNode\r\n    if (data.firstSelectedResult && data.firstSelectedResult.result !== undefined) {\r\n      setNodeValue(data.firstSelectedResult.result)\r\n    } else if (data.selectedResults && data.selectedResults.length > 0) {\r\n      // 如果没有 firstSelectedResult，使用第一个选中结果\r\n      const firstResult = data.selectedResults[0]\r\n      if (firstResult && firstResult.result !== undefined) {\r\n        setNodeValue(firstResult.result)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 触发update事件通知父组件\r\n  emit('update', {\r\n    path: props.nodePath,\r\n    value: currentNode.value.currentValue,\r\n    node: currentNode.value,\r\n    action: 'search_result'\r\n  })\r\n\r\n  showSearchModal.value = false\r\n}\r\n\r\n\r\n\r\nfunction initNodeValue() {\r\n  if (isLeafNode.value && currentNode.value) {\r\n    nodeValue.value = currentNode.value.defaultValue\r\n  }\r\n}\r\n\r\nfunction getLeafComponent() {\r\n  if (!currentNode.value) return StringInput\r\n  const typeMap: Record<string, any> = {\r\n    'string': StringInput,\r\n    // 'number': NumberInput,\r\n    'number': StringInput,\r\n    'date': DateInput,\r\n    'selection': SelectionInput,\r\n    'boolean': BooleanInput,\r\n  }\r\n  return typeMap[currentNode.value.varType] || StringInput\r\n}\r\n\r\nfunction getPlaceholder() {\r\n  const typeMap: Record<string, string> = {\r\n    'string': '请输入文本',\r\n    'number': '请输入数字',\r\n    'date': '请选择日期',\r\n    'selection': '请选择',\r\n    'boolean': '请选择是否',\r\n  }\r\n  // return typeMap[(currentNode.value?.varType ?? 'string')] || '请输入'\r\n  return \"\"\r\n}\r\n\r\nfunction getInputClass() {\r\n  const pathReadonly = `${baseClassPrefix.value}--readonly`\r\n  const pathError = `${baseClassPrefix.value}--error`\r\n  return {\r\n    'readonly': effectiveReadonly.value,\r\n    'error': !!validationError.value,\r\n    [pathReadonly]: effectiveReadonly.value,\r\n    [pathError]: !!validationError.value,\r\n  }\r\n}\r\n\r\nfunction isChildDisplay(child: VarNode|NodeStructure) {\r\n  if (currentNode.value?.config?.showWhiteList) {\r\n    return child.name && currentNode.value.config.showWhiteList.includes(child.name)\r\n  }\r\n  return (!child.name || !(currentNode.value!.config?.hideList || []).includes(child.name)) && !child.config?.hideSelf\r\n}\r\n\r\nfunction getChildNameDisplayTranslation(child: VarNode|NodeStructure) {\r\n  if (!child.name) {\r\n    return null\r\n  }\r\n  if (currentNode.value?.config?.childNameDisplayTranslation) {\r\n    return currentNode.value.config.childNameDisplayTranslation[child.name] || null\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getChildComponentConfig(child: VarNode|NodeStructure) {\r\n  return {\r\n    nameDisplay: getChildNameDisplayTranslation(child)\r\n  }\r\n}\r\n\r\nfunction getTableHeaders(): string[] {\r\n  const defaultValue = \"值\"\r\n  if (props.config?.childTemplate?.children !== undefined && props.config.childTemplate.children.length > 0) {\r\n    const childrenNotHide = props.config.childTemplate.children.filter((child: NodeStructure) => isChildDisplay(child))\r\n    return childrenNotHide.map((child: NodeStructure) => child.nameDisplay || child.name || defaultValue)\r\n  }\r\n\r\n  const firstChild = currentNode.value?.children[0]\r\n  if (!firstChild) return [defaultValue]\r\n  if (firstChild.nodeType === 'dict') {\r\n    const childrenNotHide = firstChild.children.filter((child: NodeStructure) => isChildDisplay(child))\r\n    return childrenNotHide.map((child: NodeStructure) => child.nameDisplay || child.name || defaultValue)\r\n  }\r\n  return firstChild.nameDisplay ? [firstChild.nameDisplay] : [defaultValue]\r\n}\r\n\r\nfunction getChildConfig(child: VarNode) {\r\n  return child.config || {}\r\n}\r\n\r\nfunction handleValueChange(newValue: any) {\r\n  if (currentNode.value) {\r\n    currentNode.value.currentValue = newValue\r\n  }\r\n  emit('update', {\r\n    path: props.nodePath,\r\n    value: newValue,\r\n    node: currentNode.value || undefined\r\n  })\r\n}\r\n\r\nfunction handleChildUpdate(updateInfo: any) {\r\n  emit('update', updateInfo)\r\n}\r\n\r\nfunction handleBlur() {\r\n  handleValidation()\r\n  //延迟\r\n  const currentSearchButtonCounter = searchButtonCounter.value\r\n  const currentFocusCount = focusCounter.value\r\n  setTimeout(() => {\r\n    if (searchButtonCounter.value !== currentSearchButtonCounter) return\r\n    if (focusCounter.value !== currentFocusCount) return\r\n      displaySearchButton.value = false\r\n  }, 333)\r\n}\r\nfunction handleValidation() {\r\n  // validationError.value = ''\r\n  return\r\n}\r\n\r\nfunction handleValidationError(message: string | null = '') {\r\n  validationError.value = message || ''\r\n  return\r\n}\r\n\r\nfunction addListItem() {\r\n  if (!isDynamicList.value || effectiveReadonly.value) return\r\n  const newItem = createNewListItem()\r\n  if (newItem && currentNode.value) {\r\n    currentNode.value.addChild(newItem)\r\n    forceUpdate() // 强制刷新界面\r\n    emit('update', {\r\n      path: props.nodePath,\r\n      action: 'addItem',\r\n      node: currentNode.value\r\n    })\r\n  }\r\n}\r\n\r\nfunction removeListItem(index: number) {\r\n  if (!isDynamicList.value || effectiveReadonly.value) return\r\n  if (currentNode.value) {\r\n    currentNode.value.removeChild(index)\r\n    // 更新选择状态\r\n    selectedRows.value.delete(index)\r\n    // 重新映射选择状态（因为删除后索引会变化）\r\n    const newSelectedRows = new Set<number>()\r\n    selectedRows.value.forEach(selectedIndex => {\r\n      if (selectedIndex > index) {\r\n        newSelectedRows.add(selectedIndex - 1)\r\n      } else if (selectedIndex < index) {\r\n        newSelectedRows.add(selectedIndex)\r\n      }\r\n    })\r\n    selectedRows.value = newSelectedRows\r\n    updateAllSelectedState()\r\n    forceUpdate() // 强制刷新界面\r\n    emit('update', {\r\n      path: props.nodePath,\r\n      action: 'removeItem',\r\n      index: index,\r\n      node: currentNode.value\r\n    })\r\n  }\r\n}\r\n\r\n// 选择相关函数\r\nfunction toggleRowSelection(index: number) {\r\n  if (selectedRows.value.has(index)) {\r\n    selectedRows.value.delete(index)\r\n  } else {\r\n    selectedRows.value.add(index)\r\n  }\r\n  updateAllSelectedState()\r\n}\r\n\r\nfunction toggleAllSelection() {\r\n  if (isAllSelected.value) {\r\n    selectedRows.value.clear()\r\n  } else {\r\n    selectedRows.value.clear()\r\n    const childrenCount = currentNode.value?.children?.length || 0\r\n    for (let i = 0; i < childrenCount; i++) {\r\n      selectedRows.value.add(i)\r\n    }\r\n  }\r\n  updateAllSelectedState()\r\n}\r\n\r\nfunction updateAllSelectedState() {\r\n  const childrenCount = currentNode.value?.children?.length || 0\r\n  isAllSelected.value = childrenCount > 0 && selectedRows.value.size === childrenCount\r\n  // config.selected update\r\n  if (currentNode.value) {\r\n    currentNode.value.children.forEach((child, index) => {\r\n      currentNode.value?.selectChild(index, selectedRows.value.has(index))\r\n    })\r\n  } \r\n}\r\n\r\nfunction removeSelectedItems() {\r\n  if (!isDynamicList.value || effectiveReadonly.value || selectedRows.value.size === 0) return\r\n\r\n  // 从大到小删除，避免索引变化问题\r\n  const sortedIndices = Array.from(selectedRows.value).sort((a, b) => b - a)\r\n\r\n  for (const index of sortedIndices) {\r\n    if (currentNode.value) {\r\n      currentNode.value.removeChild(index)\r\n    }\r\n  }\r\n\r\n  selectedRows.value.clear()\r\n  isAllSelected.value = false\r\n  forceUpdate()\r\n\r\n  emit('update', {\r\n    path: props.nodePath,\r\n    action: 'removeSelectedItems',\r\n    node: currentNode.value || undefined\r\n  })\r\n}\r\n\r\nfunction createNewListItem(): VarNode | null {\r\n  if (props.config?.childTemplate) {\r\n    return createNodeFromConfig(props.config.childTemplate)\r\n  }\r\n  const lastChild = currentNode.value?.children[currentNode.value.children.length - 1]\r\n  if (lastChild) {\r\n    return lastChild.template()\r\n  }\r\n  return createNodeFromConfig({\r\n    name: '新项',\r\n    varType: 'string',\r\n    nodeType: 'leaf',\r\n    defaultValue: ''\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper,\r\n.main,\r\n.var-input-container,\r\n.dict-node, .leaf-node, .list-node,\r\n.leaf-input-container, .dict-content, .dict-leaf-section, .dict-complex-section, .list-header-actions, .list-content {\r\n  max-width: 100%;\r\n  min-width: 100%;\r\n  width: 100%;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n/* 默认容器样式 */\r\n.var-input-container {\r\n  font-family: Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* SAP风格叶子节点布局 */\r\n.leaf-node {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 16px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 0;\r\n  /* border-bottom: 1px solid #f0f0f0; */\r\n}\r\n\r\n.search-button-container .search-button {\r\n  background: transparent;\r\n  border-bottom: 1px solid var(--theme-color-dark);\r\n  border-right: 1px solid var(--theme-color-dark);\r\n  border-top: 1px solid var(--theme-color-dark);\r\n  width: 25px;\r\n  height: 24px;\r\n  font-size: 14px;\r\n  padding: 0;\r\n  z-index: 1; /* 确保按钮在输入框上方 */\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.search-button-container .search-button:hover {\r\n  background: var(--theme-color-dark);\r\n  color: white;\r\n  \r\n}\r\n\r\n.var-label {\r\n  display: block;\r\n  margin-bottom: 0; /* 移除垂直间距 */\r\n  font-weight: 500;\r\n  color: #606266;\r\n  text-align: right; /* 右对齐，SAP风格 */\r\n  padding-right: 8px;\r\n}\r\n\r\n/* 叶子节点输入容器 */\r\n.leaf-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  /* gap: 8px; */\r\n  /* width: 100%; */\r\n}\r\n\r\n.leaf-input-container > :first-child {\r\n  flex: 1; /* 输入框占主要空间 */\r\n}\r\n\r\n/* 叶子节点内的额外组件 */\r\n.leaf-input-container .var-input--extra {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  flex-shrink: 0; /* 不压缩额外组件 */\r\n}\r\n\r\n/* 输入框容器样式 */\r\n.leaf-node :deep(.string-input-container),\r\n.leaf-node :deep(.number-input-container),\r\n.leaf-node :deep(.date-input-container),\r\n.leaf-node :deep(.selection-input-container) {\r\n  display: flex;\r\n  grid-template-columns: 1fr;\r\n}\r\n\r\n/* 统一输入框样式 - 方形设计 */\r\n.leaf-node :deep(input),\r\n.leaf-node :deep(select) {\r\n  width: 100%;\r\n  /*min-width: 120px; /* 最小宽度 */\r\n  padding: 0;\r\n  border: 1px solid var(--theme-color-dark);\r\n  border-radius: 0px; /* 方形直角 */\r\n  font-size: 14px;\r\n  height: 24px;\r\n  line-height: 1.5;\r\n  background: transparent;\r\n  transition: border-color 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\n.leaf-node :deep(input[type=\"checkbox\"]) {\r\n  width: 12px;\r\n  min-width: 12px;\r\n  height: 12px;\r\n}\r\n\r\n.leaf-node :deep(input:focus),\r\n.leaf-node :deep(select:focus) {\r\n  outline: none;\r\n  border-color: var(--theme-color-dark);\r\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\r\n}\r\n\r\n.leaf-node :deep(input.readonly),\r\n.leaf-node :deep(select:disabled) {\r\n  background: var(--theme-color-input-readonly);\r\n  /* cursor: not-allowed; */\r\n}\r\n\r\n/* SAP风格字典节点布局 */\r\n.dict-node {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.dict-header {\r\n  /* margin-bottom: 12px;\r\n  padding-bottom: 8px; */\r\n  border-bottom: 1px solid #4E635E;\r\n}\r\n\r\n.dict-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.dict-header .var-label {\r\n  text-align: left;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n  margin-bottom: 0;\r\n  padding-right: 0;\r\n  flex: 1;\r\n}\r\n\r\n.dict-header .var-input--extra {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.list-header .var-label{\r\n  text-align: left;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n  margin-bottom: 0;\r\n  padding-right: 0;\r\n}\r\n\r\n.dict-content {\r\n  padding-top: 16px;\r\n  padding-left: 8px;\r\n  /* background: #fafafa;\r\n  border: 1px solid #e5e7eb; */\r\n  background: transparent;\r\n  border: none;\r\n  border-radius: 0px;\r\n  /* width: 100%; */\r\n}\r\n\r\n/* 叶子节点区域 - 网格布局 */\r\n.dict-leaf-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  gap: 0px 24px; /* rowgap, colgap*/\r\n  align-items: center;\r\n  justify-items: start;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.dict-leaf-section > .dict-item--leaf {\r\n  display: contents; /* 让叶子节点直接参与网格布局 */\r\n}\r\n\r\n/* 复杂节点区域 - 垂直布局 */\r\n.dict-complex-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0px;\r\n}\r\n\r\n.dict-complex-section > .dict-item--dict,\r\n.dict-complex-section > .dict-item--list {\r\n  width: 100%; /* 复杂节点独占一行 */\r\n}\r\n\r\n/* 表格容器样式 */\r\n.table-container {\r\n  overflow-x: auto; /* 水平滚动 */\r\n  overflow-y: auto; /* 垂直滚动 */\r\n  max-height: 100%; /* 默认最大高度 */\r\n  border: 1px solid var(--theme-color-light);\r\n  border-radius: 4px;\r\n  margin-top: 10px;\r\n  margin-bottom: 16px;\r\n}\r\n.table-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.table-container::-webkit-scrollbar-thumb {\r\n  background: var(--theme-color-light);\r\n  border-radius: 4px;\r\n}\r\n\r\n.table-container::-webkit-scrollbar-thumb:hover {\r\n  background: var(--theme-color-lighter);\r\n}\r\n\r\n/* SAP风格列表表格 */\r\n.list-table {\r\n  width: 100%;\r\n  min-width: 100%; /* 确保表格至少占满容器宽度 */\r\n  border-collapse: collapse;\r\n  margin: 0; /* 移除margin，由容器控制 */\r\n  border-radius: 0px;\r\n  position: relative;\r\n}\r\n\r\n.list-table th {\r\n  background: var(--theme-color-table-header-bg);\r\n  text-align: left;\r\n  font-weight: 450;\r\n  color: var(--theme-color-table-header-text);\r\n  /* height: 40px; */\r\n  white-space: nowrap; /* 防止文字换行 */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; /* 超出部分显示省略号 */\r\n}\r\n\r\n.list-table td {\r\n  padding: 0;\r\n  border-radius: 0px;\r\n  /* border-bottom: 1px solid #f3f4f6; */\r\n  /* height: 36px; */\r\n  white-space: nowrap; /* 防止内容换行 */\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; /* 超出部分显示省略号 */\r\n  vertical-align: middle; /* 垂直居中对齐 */\r\n}\r\n\r\n.list-table th,\r\n.list-table td {\r\n  padding: 0;\r\n  border-radius: 0px;\r\n  white-space: nowrap; /* 防止内容换行 */\r\n  border: 1px solid #d1d5db;\r\n  width: auto;\r\n  height: 24px;\r\n}\r\n\r\n.list-table tr:hover {\r\n  background: var(--theme-color-lighter-a);\r\n}\r\n.list-table td :deep(.leaf-node) {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n/* 表格内的输入框样式调整 */\r\n.list-table td :deep(*:not(input):not(select):not(button)) {\r\n  /* display: none; */\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n.list-table td :deep(input:not([type='checkbox'])),\r\n.list-table td :deep(select) {\r\n  width: 100%;\r\n  height: 24px; /* 固定输入框高度 */\r\n  padding: 0; /* 减少内边距 */\r\n  /* border: 1px solid #d1d5db; */\r\n  border: none;\r\n  border-radius: 0px;\r\n  font-size: 13px; /* 稍小的字体 */\r\n  line-height: 1.2;\r\n  background: transparent;\r\n}\r\n\r\n.list-table td :deep(input:not([type='checkbox']):focus),\r\n.list-table td :deep(select:focus) {\r\n  outline: none;\r\n  border-color: #2563eb;\r\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);\r\n}\r\n\r\n/* 选择列宽度控制和固定位置 */\r\n.list-table .select-column {\r\n  width: 40px; /* 固定选择列宽度 */\r\n  min-width: 40px; /* 最小宽度 */\r\n  max-width: 40px; /* 最大宽度 */\r\n  text-align: center;\r\n  position: sticky;\r\n  left: 0;\r\n  z-index: 11; /* 表头层级更高 */\r\n  background-color: var(--theme-color-table-header-bg);\r\n  border-right: 2px solid var(--theme-color-dark); /* 增强分隔线 */\r\n}\r\n\r\n.list-table .select-cell {\r\n  width: 40px;\r\n  min-width: 40px;\r\n  max-width: 40px;\r\n  text-align: center;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  height: 24px;\r\n  position: sticky;\r\n  left: 0;\r\n  z-index: 10;\r\n  background-color: var(--theme-color-page);\r\n  border-right: 2px solid var(--theme-color-dark); /* 增强分隔线 */\r\n}\r\n\r\n/* 鼠标悬停时保持固定列背景 */\r\n.list-table tr:hover .select-cell {\r\n  background-color: var(--theme-color-lighter-a);\r\n}\r\n\r\n/* 确保其他列有合适的宽度 */\r\n.list-table th:not(.select-column),\r\n.list-table td:not(.select-cell) {\r\n  min-width: 100px; /* 设置最小列宽 */\r\n  max-width: 250px; /* 设置最大列宽 */\r\n}\r\n\r\n.select-column .checkmark {\r\n  border: 1px solid rgb(122, 122, 122);\r\n  border-radius: 0;\r\n}\r\n.select-cell .checkmark {\r\n  border: 1px solid var(--theme-color-dark);\r\n  border-radius: 0;\r\n}\r\n\r\n.select-column .var-checkbox > input,\r\n.select-cell .var-checkbox > input,\r\n.select-column .var-checkbox > span,\r\n.select-cell .var-checkbox > span {\r\n  width: 16px;\r\n  height: 16px;\r\n  top: 4px;\r\n}\r\n.select-column .var-checkbox > input:checked + .checkmark::after {\r\n  border-color: white;\r\n}\r\n\r\n/* 列表头部布局 */\r\n.list-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 2px solid #e5e7eb;\r\n}\r\n\r\n.list-header .var-label {\r\n  text-align: left;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #374151;\r\n  margin-bottom: 0;\r\n  padding-right: 0;\r\n  flex: 1;\r\n}\r\n\r\n.list-header-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.list-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  /* gap: 1px; */\r\n}\r\n\r\n.list-controls > button,\r\n.list-controls > .extra-buttons button {\r\n  margin: 0 2px;\r\n  padding: 1px;\r\n  width: 24px;\r\n  height: 24px;\r\n}\r\n\r\n.list-header .var-input--extra {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n/* 列表操作按钮 */\r\n.btn-add, .btn-remove, .btn-remove-inline {\r\n  padding: 4px 8px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 4px;\r\n  background: white;\r\n  color: #374151;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.btn-add:hover {\r\n  background: #2563eb;\r\n  color: white;\r\n  border-color: #2563eb;\r\n}\r\n\r\n.btn-remove:hover, .btn-remove-inline:hover {\r\n  background: #dc2626;\r\n  color: white;\r\n  border-color: #dc2626;\r\n}\r\n\r\n.btn-remove-selected {\r\n  padding: 4px 8px;\r\n  border: 1px solid #dc2626;\r\n  border-radius: 4px;\r\n  background: #dc2626;\r\n  color: white;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  margin-left: 8px;\r\n}\r\n\r\n.btn-remove-selected:hover {\r\n  background: #b91c1c;\r\n  border-color: #b91c1c;\r\n}\r\n\r\n.btn-remove-selected:disabled {\r\n  background: #c0c4cc;\r\n  border-color: #c0c4cc;\r\n  cursor: not-allowed;\r\n  opacity: 0.6;\r\n}\r\n\r\n/* 错误信息样式 */\r\n.error-message {\r\n  margin-top: 4px;\r\n  font-size: 12px;\r\n  color: #dc2626;\r\n  line-height: 1.4;\r\n}\r\n\r\n/* 叶子节点默认居中显示 */\r\n.dict-leaf-section .wrapper {\r\n  display: grid;\r\n  width: 100%;\r\n  justify-content: center;\r\n}\r\n\r\n.list-node-varinput.wrapper {\r\n  display: flex;\r\n  justify-content: start;\r\n  width: 100%;\r\n}\r\n\r\n/* 响应式布局 */\r\n@media (max-width: 768px) {\r\n  .leaf-node {\r\n    grid-template-columns: 1fr;\r\n    gap: 8px;\r\n  }\r\n\r\n  .var-label {\r\n    text-align: left;\r\n    padding-right: 0;\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  .dict-children {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>","import script from \"./VarInput.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./VarInput.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./VarInput.vue?vue&type=style&index=0&id=dbd4c8f2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-dbd4c8f2\"]])\n\nexport default __exports__","import { defineProps, PropType } from 'vue';\r\nimport { VarNode, VarTree } from '@/utils/VarTree';\r\n\r\nexport const SimpleInputBoxProps = {\r\n  modelValue: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  readonly: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  placeholder: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  config: {\r\n    type: Object,\r\n    default: () => ({})\r\n  },\r\n  node: {\r\n    type: Object as PropType<VarNode | null>,\r\n    default: null\r\n  },\r\n  tree: {\r\n    type: Object as PropType<VarTree>,\r\n    default: null\r\n  },\r\n  nodePath: {\r\n    type: Array as PropType<string[]>,\r\n    default: () => []\r\n  }\r\n};\r\n\r\nconst popEvents = {\r\n  'enter-from-node': (node: VarNode, value: string, data: any) => {\r\n    return node instanceof VarNode && typeof value === 'string';\r\n  },\r\n  'input-from-node': (node: VarNode, value: string, data: any) => {\r\n    return node instanceof VarNode && typeof value === 'string';\r\n  },\r\n}\r\n\r\nexport const SimpleInputBoxEmits = {\r\n  'update:modelValue': (value: string) => {\r\n    return typeof value === 'string';\r\n  },\r\n  'blur': (value: string) => {\r\n    return typeof value === 'string';\r\n  },\r\n  'enter': (value: string) => {\r\n    return typeof value === 'string';\r\n  },\r\n  'validation-error': (message: string) => {\r\n    return typeof message === 'string' && message.length > 0;\r\n  },\r\n  'focus': () => {\r\n    return true;\r\n  },\r\n  ...popEvents,\r\n};\r\n\r\nexport const SimpleInputBoxEmitsWithNum = {\r\n  'update:modelValue': (value: number | string): boolean => {\r\n    return typeof value === 'number' || typeof value === 'string';\r\n  },\r\n  'blur': (value: number | string): boolean => {\r\n    return typeof value === 'number' || typeof value === 'string';\r\n  },\r\n  'enter': (value: number | string): boolean => {\r\n    return typeof value === 'number' || typeof value === 'string';\r\n  },\r\n  'validation-error': (message: string): boolean => {\r\n    return typeof message === 'string' && message.length > 0;\r\n  },\r\n  ...popEvents,\r\n};\r\nexport const SimpleInputBoxEmitsWithBool = {\r\n  'update:modelValue': (value: boolean): boolean => {\r\n    return typeof value === 'boolean';\r\n  },\r\n  'blur': (value: string): boolean => {\r\n    return typeof value === 'string';\r\n  },\r\n  'enter': (value: string): boolean => {\r\n    return typeof value === 'string';\r\n  },\r\n  'validation-error': (message: string): boolean => {\r\n    return typeof message === 'string' && message.length > 0;\r\n  },\r\n  ...popEvents,\r\n};\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\nimport _imports_0 from '../assets/user.png'\nimport _imports_1 from '../assets/back.png'\nimport _imports_2 from '../assets/home.png'\nimport _imports_3 from '../assets/search.png'\n\n\nconst _hoisted_1 = { class: \"nav-title\" }\nconst _hoisted_2 = { class: \"nav-right\" }\nconst _hoisted_3 = { class: \"search-container\" }\n\nimport { ref, nextTick } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\n\r\n// 定义 props\r\ninterface Props {\r\n  pageTitle?: string;\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'NavigationBar',\n  props: {\n    pageTitle: { default: '页面标题' }\n  },\n  emits: [\"profile-click\", \"search\"],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\n// 定义事件\r\nconst emit = __emit;\r\n\r\n// 响应式数据\r\nconst showSearchInput = ref<boolean>(false);\r\nconst searchQuery = ref<string>('');\r\n\r\n// 路由\r\nconst router = useRouter();\r\nconst route = useRoute();\r\n\r\n// 右键点击#navigation-bar时去路由/application\r\nconst handleRightClick = (event: MouseEvent) => {\r\n  event.preventDefault();\r\n  router.push('/application');\r\n};\r\n\r\n// 方法\r\nconst goToUserProfile = (): void => {\r\n  // TODO: 跳转到用户主页的逻辑\r\n  console.log('点击用户图标：跳转到用户主页');\r\n  emit('profile-click');\r\n};\r\n\r\nconst goBack = (): void => {\r\n  // TODO: 返回上一个页面的逻辑\r\n  console.log('点击返回箭头：返回上一个页面');\r\n  window.history.back(); // 简单回退浏览器历史记录\r\n};\r\n\r\nconst goToHomePage = (): void => {\r\n  // 检查当前是否在application路由下\r\n  if (route.path.startsWith('/application')) {\r\n    const homePageUrl = '/application/home'; // 跳转到application下的home页面\r\n    console.log(`点击主页图标：回到应用程序主页 (${homePageUrl})`);\r\n    router.push(homePageUrl);\r\n  } else {\r\n    const homePageUrl = '/home'; // 原有路径\r\n    console.log(`点击主页图标：回到系统主页 (${homePageUrl})`);\r\n    router.push(homePageUrl);\r\n  }\r\n};\r\n\r\nconst toggleSearchInput = (): void => {\r\n  showSearchInput.value = !showSearchInput.value;\r\n  if (showSearchInput.value) {\r\n    nextTick(() => {\r\n      const searchInput = document.querySelector('.search-input') as HTMLInputElement;\r\n      if (searchInput) {\r\n        searchInput.focus();\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst performSearch = (): void => {\r\n  // TODO: 执行搜索的逻辑\r\n  console.log('执行搜索，搜索内容:', searchQuery.value);\r\n  alert(`执行搜索：${searchQuery.value} (功能待实现)`);\r\n  emit('search', searchQuery.value);\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"navigation-bar\",\n    id: \"navigation-bar\",\n    onContextmenu: handleRightClick\n  }, [\n    _createElementVNode(\"div\", { class: \"nav-left\" }, [\n      _createElementVNode(\"div\", {\n        class: \"icon-wrapper\",\n        onClick: goToUserProfile\n      }, _cache[2] || (_cache[2] = [\n        _createElementVNode(\"img\", {\n          src: _imports_0,\n          alt: \"User\",\n          class: \"nav-icon\"\n        }, null, -1)\n      ])),\n      _createElementVNode(\"div\", {\n        class: \"icon-wrapper\",\n        onClick: goBack\n      }, _cache[3] || (_cache[3] = [\n        _createElementVNode(\"img\", {\n          src: _imports_1,\n          alt: \"Back\",\n          class: \"nav-icon\"\n        }, null, -1)\n      ])),\n      _createElementVNode(\"div\", {\n        class: \"icon-wrapper\",\n        onClick: goToHomePage\n      }, _cache[4] || (_cache[4] = [\n        _createElementVNode(\"img\", {\n          src: _imports_2,\n          alt: \"Home\",\n          class: \"nav-icon\"\n        }, null, -1)\n      ]))\n    ]),\n    _createElementVNode(\"div\", _hoisted_1, _toDisplayString(_ctx.pageTitle), 1),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        (showSearchInput.value)\n          ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n              key: 0,\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchQuery).value = $event)),\n              placeholder: \"Search Apps...\",\n              class: \"search-input\",\n              onKeyup: _withKeys(performSearch, [\"enter\"]),\n              onBlur: _cache[1] || (_cache[1] = ($event: any) => (showSearchInput.value = false))\n            }, null, 544)), [\n              [_vModelText, searchQuery.value]\n            ])\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          class: \"icon-wrapper search-icon\",\n          onClick: toggleSearchInput\n        }, _cache[5] || (_cache[5] = [\n          _createElementVNode(\"img\", {\n            src: _imports_3,\n            alt: \"Search\",\n            class: \"nav-icon\"\n          }, null, -1)\n        ]))\n      ])\n    ])\n  ], 32))\n}\n}\n\n})","<template>\r\n  <div class=\"navigation-bar\" id=\"navigation-bar\" @contextmenu=\"handleRightClick\">\r\n    <div class=\"nav-left\">\r\n      <div class=\"icon-wrapper\" @click=\"goToUserProfile\">\r\n        <img src=\"../assets/user.png\" alt=\"User\" class=\"nav-icon\" />\r\n      </div>\r\n      <div class=\"icon-wrapper\" @click=\"goBack\">\r\n        <img src=\"../assets/back.png\" alt=\"Back\" class=\"nav-icon\" />\r\n      </div>\r\n      <div class=\"icon-wrapper\" @click=\"goToHomePage\">\r\n        <img src=\"../assets/home.png\" alt=\"Home\" class=\"nav-icon\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"nav-title\">\r\n      {{ pageTitle }}\r\n    </div>\r\n\r\n    <div class=\"nav-right\">\r\n      <div class=\"search-container\">\r\n        <input\r\n          v-if=\"showSearchInput\"\r\n          type=\"text\"\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"Search Apps...\"\r\n          class=\"search-input\"\r\n          @keyup.enter=\"performSearch\"\r\n          @blur=\"showSearchInput = false\"\r\n        />\r\n        <div class=\"icon-wrapper search-icon\" @click=\"toggleSearchInput\">\r\n          <img src=\"../assets/search.png\" alt=\"Search\" class=\"nav-icon\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, nextTick } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\n\r\n// 定义 props\r\ninterface Props {\r\n  pageTitle?: string;\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  pageTitle: '页面标题'\r\n});\r\n\r\n// 定义事件\r\nconst emit = defineEmits<{\r\n  'profile-click': []\r\n  search: [query: string]\r\n}>();\r\n\r\n// 响应式数据\r\nconst showSearchInput = ref<boolean>(false);\r\nconst searchQuery = ref<string>('');\r\n\r\n// 路由\r\nconst router = useRouter();\r\nconst route = useRoute();\r\n\r\n// 右键点击#navigation-bar时去路由/application\r\nconst handleRightClick = (event: MouseEvent) => {\r\n  event.preventDefault();\r\n  router.push('/application');\r\n};\r\n\r\n// 方法\r\nconst goToUserProfile = (): void => {\r\n  // TODO: 跳转到用户主页的逻辑\r\n  console.log('点击用户图标：跳转到用户主页');\r\n  emit('profile-click');\r\n};\r\n\r\nconst goBack = (): void => {\r\n  // TODO: 返回上一个页面的逻辑\r\n  console.log('点击返回箭头：返回上一个页面');\r\n  window.history.back(); // 简单回退浏览器历史记录\r\n};\r\n\r\nconst goToHomePage = (): void => {\r\n  // 检查当前是否在application路由下\r\n  if (route.path.startsWith('/application')) {\r\n    const homePageUrl = '/application/home'; // 跳转到application下的home页面\r\n    console.log(`点击主页图标：回到应用程序主页 (${homePageUrl})`);\r\n    router.push(homePageUrl);\r\n  } else {\r\n    const homePageUrl = '/home'; // 原有路径\r\n    console.log(`点击主页图标：回到系统主页 (${homePageUrl})`);\r\n    router.push(homePageUrl);\r\n  }\r\n};\r\n\r\nconst toggleSearchInput = (): void => {\r\n  showSearchInput.value = !showSearchInput.value;\r\n  if (showSearchInput.value) {\r\n    nextTick(() => {\r\n      const searchInput = document.querySelector('.search-input') as HTMLInputElement;\r\n      if (searchInput) {\r\n        searchInput.focus();\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst performSearch = (): void => {\r\n  // TODO: 执行搜索的逻辑\r\n  console.log('执行搜索，搜索内容:', searchQuery.value);\r\n  alert(`执行搜索：${searchQuery.value} (功能待实现)`);\r\n  emit('search', searchQuery.value);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.navigation-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #25484C;\r\n  color: #EEEED4;\r\n  padding: 0 16px;\r\n  height: 60px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.nav-left, .nav-right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.icon-wrapper {\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  transition: background-color 0.3s ease;\r\n  display: flex; /* 让图片在wrapper中居中 */\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.icon-wrapper:hover {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.nav-icon {\r\n  width: 24px; /* 图标宽度 */\r\n  height: 24px; /* 图标高度 */\r\n  object-fit: contain; /* 保持图片比例 */\r\n \r\n}\r\n\r\n.nav-title {\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  position: absolute;\r\n  left: 50%; \r\n  transform: translateX(-50%); \r\n  font-size: 1.4em;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-input {\r\n  background-color: rgba(255, 255, 255, 0.35);\r\n  border: none;\r\n  width: 150px; \r\n  border-radius: 5px;\r\n  padding: 8px 12px;\r\n  color: #eeeed4; \r\n  font-size: 1em;\r\n  transition: width 0.3s ease, opacity 0.3s ease;\r\n  margin-right: 10px;\r\n  outline: none;\r\n}\r\n\r\n.search-input::placeholder {\r\n  color:var(--placeholder); /* 占位符颜色 */\r\n}\r\n\r\n/* 当搜索输入框显示时 */\r\n.search-input.v-enter-active, .search-input.v-enter-to,\r\n.search-input.v-leave-active, .search-input.v-leave-to {\r\n  width: 200px;\r\n  opacity: 1;\r\n}\r\n\r\n.search-icon {\r\n  margin-left: auto;\r\n}\r\n</style>","import script from \"./NavigationBar.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./NavigationBar.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./NavigationBar.vue?vue&type=style&index=0&id=459f89e1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-459f89e1\"]])\n\nexport default __exports__","/**\r\n * 应用程序信息接口\r\n */\r\nexport interface ApplicationInfo {\r\n  applicationName: string;\r\n  routePath: string;\r\n  lore?: string;\r\n  tags?: string[];\r\n}\r\n\r\n/**\r\n * 访问记录接口\r\n */\r\nexport interface VisitRecord extends ApplicationInfo {\r\n  visitTime: string;\r\n  visitCount: number;\r\n}\r\n\r\n/**\r\n * 应用程序访问历史记录管理器\r\n * 提供统一的接口来管理用户的应用程序访问历史\r\n * 支持本地存储和未来的数据库同步\r\n */\r\nclass ApplicationHistoryManager {\r\n  private storageKey: string;\r\n  private maxHistorySize: number;\r\n\r\n  constructor() {\r\n    this.storageKey = 'application_visit_history';\r\n    this.maxHistorySize = 10; // 最多保存10条历史记录\r\n  }\r\n\r\n  /**\r\n   * 获取历史记录\r\n   * @returns 历史记录数组，按访问时间倒序排列\r\n   */\r\n  getHistory(): VisitRecord[] {\r\n    try {\r\n      const historyData = localStorage.getItem(this.storageKey);\r\n      if (!historyData) {\r\n        return [];\r\n      }\r\n      const history = JSON.parse(historyData);\r\n      // 确保返回的是数组格式\r\n      return Array.isArray(history) ? history : [];\r\n    } catch (error) {\r\n      console.error('获取应用程序历史记录失败:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加访问记录\r\n   * @param applicationInfo 应用程序信息\r\n   */\r\n  addVisitRecord(applicationInfo: ApplicationInfo): void {\r\n    try {\r\n      const history = this.getHistory();\r\n      \r\n      // 创建访问记录\r\n      const visitRecord: VisitRecord = {\r\n        applicationName: applicationInfo.applicationName,\r\n        routePath: applicationInfo.routePath,\r\n        lore: applicationInfo.lore || '',\r\n        tags: applicationInfo.tags || [],\r\n        visitTime: new Date().toISOString(),\r\n        visitCount: 1\r\n      };\r\n\r\n      // 检查是否已存在相同的应用程序记录\r\n      const existingIndex = history.findIndex(\r\n        record => record.routePath === applicationInfo.routePath\r\n      );\r\n\r\n      if (existingIndex !== -1) {\r\n        // 如果已存在，更新访问时间和次数，并移到最前面\r\n        const existingRecord = history[existingIndex];\r\n        existingRecord.visitTime = visitRecord.visitTime;\r\n        existingRecord.visitCount = (existingRecord.visitCount || 1) + 1;\r\n        \r\n        // 移除原记录并添加到最前面\r\n        history.splice(existingIndex, 1);\r\n        history.unshift(existingRecord);\r\n      } else {\r\n        // 如果不存在，添加新记录到最前面\r\n        history.unshift(visitRecord);\r\n      }\r\n\r\n      // 限制历史记录数量\r\n      if (history.length > this.maxHistorySize) {\r\n        history.splice(this.maxHistorySize);\r\n      }\r\n\r\n      // 保存到本地存储\r\n      localStorage.setItem(this.storageKey, JSON.stringify(history));\r\n      \r\n      console.log('应用程序访问记录已添加:', visitRecord);\r\n    } catch (error) {\r\n      console.error('添加应用程序访问记录失败:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清除历史记录\r\n   */\r\n  clearHistory(): void {\r\n    try {\r\n      localStorage.removeItem(this.storageKey);\r\n      console.log('应用程序历史记录已清除');\r\n    } catch (error) {\r\n      console.error('清除应用程序历史记录失败:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 删除特定的历史记录\r\n   * @param routePath 要删除的应用程序路由路径\r\n   */\r\n  removeHistoryRecord(routePath: string): void {\r\n    try {\r\n      const history = this.getHistory();\r\n      const filteredHistory = history.filter(record => record.routePath !== routePath);\r\n      localStorage.setItem(this.storageKey, JSON.stringify(filteredHistory));\r\n      console.log('已删除应用程序历史记录:', routePath);\r\n    } catch (error) {\r\n      console.error('删除应用程序历史记录失败:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取最近访问的应用程序（限制数量）\r\n   * @param limit 返回的记录数量限制，默认为5\r\n   * @returns 最近访问的应用程序列表\r\n   */\r\n  getRecentApplications(limit: number = 5): VisitRecord[] {\r\n    const history = this.getHistory();\r\n    return history.slice(0, limit);\r\n  }\r\n\r\n  /**\r\n   * 未来扩展：同步到服务器\r\n   * @param userId 用户ID\r\n   */\r\n  async syncToServer(userId: string): Promise<void> {\r\n    // TODO: 实现与服务器的同步逻辑\r\n    console.log('同步历史记录到服务器 (功能待实现)', userId);\r\n  }\r\n\r\n  /**\r\n   * 未来扩展：从服务器获取历史记录\r\n   * @param userId 用户ID\r\n   */\r\n  async fetchFromServer(userId: string): Promise<void> {\r\n    // TODO: 实现从服务器获取历史记录的逻辑\r\n    console.log('从服务器获取历史记录 (功能待实现)', userId);\r\n  }\r\n}\r\n\r\n// 创建单例实例\r\nconst applicationHistoryManager = new ApplicationHistoryManager();\r\n\r\nexport default applicationHistoryManager;\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"recent-applications\" }\nconst _hoisted_2 = { class: \"recent-header\" }\nconst _hoisted_3 = { class: \"header-buttons\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"recent-list\"\n}\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"app-info\" }\nconst _hoisted_8 = { class: \"app-name\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"app-lore\"\n}\nconst _hoisted_10 = { class: \"app-meta\" }\nconst _hoisted_11 = { class: \"visit-time\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"visit-count\"\n}\nconst _hoisted_13 = { class: \"app-actions\" }\nconst _hoisted_14 = [\"onClick\"]\n\nimport { ref, onMounted, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport applicationHistoryManager, { type VisitRecord } from '@/utils/ApplicationHistoryManager';\r\n\r\n// 定义事件\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'RecentApplications',\n  emits: [\"navigate\"],\n  setup(__props, { emit: __emit }) {\n\r\nconst emit = __emit;\r\n\r\n// 响应式数据\r\nconst recentApps = ref<VisitRecord[]>([]);\r\n\r\n// 路由\r\nconst router = useRouter();\r\n\r\n// 方法\r\nconst loadRecentApplications = (): void => {\r\n  recentApps.value = applicationHistoryManager.getRecentApplications(8);\r\n};\r\n\r\nconst navigateToApplication = (app: VisitRecord): void => {\r\n  const fullPath = `/application${app.routePath}`;\r\n  console.log(`从历史记录导航到应用: ${app.applicationName} -> ${fullPath}`);\r\n\r\n  // 更新访问记录\r\n  applicationHistoryManager.addVisitRecord(app);\r\n\r\n  // 导航到应用\r\n  router.push(fullPath);\r\n\r\n  // 发出事件通知父组件关闭侧栏\r\n  emit('navigate');\r\n};\r\n\r\nconst removeFromHistory = (routePath: string): void => {\r\n  applicationHistoryManager.removeHistoryRecord(routePath);\r\n  loadRecentApplications(); // 重新加载列表\r\n};\r\n\r\nconst clearHistory = (): void => {\r\n  if (confirm('确定要清除所有历史记录吗？')) {\r\n    applicationHistoryManager.clearHistory();\r\n    loadRecentApplications(); // 重新加载列表\r\n  }\r\n};\r\n\r\nconst handleLogout = (): void => {\r\n  if (confirm('确定要登出吗？')) {\r\n    // 清除本地存储的token\r\n    localStorage.removeItem('token');\r\n\r\n    // 可选：清除历史记录\r\n    // applicationHistoryManager.clearHistory();\r\n\r\n    // 跳转到登录页面\r\n    router.push('/login');\r\n\r\n    // 发出事件通知父组件关闭侧栏\r\n    emit('navigate');\r\n  }\r\n};\r\n\r\nconst formatVisitTime = (visitTime: string): string => {\r\n  const now = new Date();\r\n  const visit = new Date(visitTime);\r\n  const diffMs = now.getTime() - visit.getTime();\r\n  const diffMins = Math.floor(diffMs / (1000 * 60));\r\n  const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\r\n  const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n  if (diffMins < 1) {\r\n    return '刚刚';\r\n  } else if (diffMins < 60) {\r\n    return `${diffMins}分钟前`;\r\n  } else if (diffHours < 24) {\r\n    return `${diffHours}小时前`;\r\n  } else if (diffDays < 7) {\r\n    return `${diffDays}天前`;\r\n  } else {\r\n    return visit.toLocaleDateString('zh-CN', {\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  loadRecentApplications();\r\n\r\n  // 监听路由变化，当路由变化时重新加载历史记录\r\n  watch(router.currentRoute, () => {\r\n    loadRecentApplications();\r\n  });\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"最近访问\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (recentApps.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              onClick: clearHistory,\n              class: \"clear-btn\",\n              title: \"清除历史记录\"\n            }, \" 清除 \"))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"button\", {\n          onClick: handleLogout,\n          class: \"logout-btn\",\n          title: \"登出\"\n        }, \" 登出 \")\n      ])\n    ]),\n    (recentApps.value.length === 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[1] || (_cache[1] = [\n          _createElementVNode(\"p\", null, \"暂无访问记录\", -1)\n        ])))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(recentApps.value, (app) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: app.routePath,\n              class: \"recent-item\",\n              onClick: ($event: any) => (navigateToApplication(app))\n            }, [\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createElementVNode(\"div\", _hoisted_8, _toDisplayString(app.applicationName), 1),\n                (app.lore)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString(app.lore), 1))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _createElementVNode(\"span\", _hoisted_11, _toDisplayString(formatVisitTime(app.visitTime)), 1),\n                  (app.visitCount > 1)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \" 访问 \" + _toDisplayString(app.visitCount) + \" 次 \", 1))\n                    : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_13, [\n                _createElementVNode(\"button\", {\n                  onClick: _withModifiers(($event: any) => (removeFromHistory(app.routePath)), [\"stop\"]),\n                  class: \"remove-btn\",\n                  title: \"从历史记录中移除\"\n                }, \" × \", 8, _hoisted_14)\n              ])\n            ], 8, _hoisted_6))\n          }), 128))\n        ]))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"recent-applications\">\r\n    <div class=\"recent-header\">\r\n      <h3>最近访问</h3>\r\n      <div class=\"header-buttons\">\r\n        <button\r\n          v-if=\"recentApps.length > 0\"\r\n          @click=\"clearHistory\"\r\n          class=\"clear-btn\"\r\n          title=\"清除历史记录\"\r\n        >\r\n          清除\r\n        </button>\r\n        <button\r\n          @click=\"handleLogout\"\r\n          class=\"logout-btn\"\r\n          title=\"登出\"\r\n        >\r\n          登出\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"recentApps.length === 0\" class=\"empty-state\">\r\n      <p>暂无访问记录</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"recent-list\">\r\n      <div \r\n        v-for=\"app in recentApps\" \r\n        :key=\"app.routePath\"\r\n        class=\"recent-item\"\r\n        @click=\"navigateToApplication(app)\"\r\n      >\r\n        <div class=\"app-info\">\r\n          <div class=\"app-name\">{{ app.applicationName }}</div>\r\n          <div class=\"app-lore\" v-if=\"app.lore\">{{ app.lore }}</div>\r\n          <div class=\"app-meta\">\r\n            <span class=\"visit-time\">{{ formatVisitTime(app.visitTime) }}</span>\r\n            <span class=\"visit-count\" v-if=\"app.visitCount > 1\">\r\n              访问 {{ app.visitCount }} 次\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"app-actions\">\r\n          <button \r\n            @click.stop=\"removeFromHistory(app.routePath)\"\r\n            class=\"remove-btn\"\r\n            title=\"从历史记录中移除\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport applicationHistoryManager, { type VisitRecord } from '@/utils/ApplicationHistoryManager';\r\n\r\n// 定义事件\r\nconst emit = defineEmits<{\r\n  navigate: []\r\n}>();\r\n\r\n// 响应式数据\r\nconst recentApps = ref<VisitRecord[]>([]);\r\n\r\n// 路由\r\nconst router = useRouter();\r\n\r\n// 方法\r\nconst loadRecentApplications = (): void => {\r\n  recentApps.value = applicationHistoryManager.getRecentApplications(8);\r\n};\r\n\r\nconst navigateToApplication = (app: VisitRecord): void => {\r\n  const fullPath = `/application${app.routePath}`;\r\n  console.log(`从历史记录导航到应用: ${app.applicationName} -> ${fullPath}`);\r\n\r\n  // 更新访问记录\r\n  applicationHistoryManager.addVisitRecord(app);\r\n\r\n  // 导航到应用\r\n  router.push(fullPath);\r\n\r\n  // 发出事件通知父组件关闭侧栏\r\n  emit('navigate');\r\n};\r\n\r\nconst removeFromHistory = (routePath: string): void => {\r\n  applicationHistoryManager.removeHistoryRecord(routePath);\r\n  loadRecentApplications(); // 重新加载列表\r\n};\r\n\r\nconst clearHistory = (): void => {\r\n  if (confirm('确定要清除所有历史记录吗？')) {\r\n    applicationHistoryManager.clearHistory();\r\n    loadRecentApplications(); // 重新加载列表\r\n  }\r\n};\r\n\r\nconst handleLogout = (): void => {\r\n  if (confirm('确定要登出吗？')) {\r\n    // 清除本地存储的token\r\n    localStorage.removeItem('token');\r\n\r\n    // 可选：清除历史记录\r\n    // applicationHistoryManager.clearHistory();\r\n\r\n    // 跳转到登录页面\r\n    router.push('/login');\r\n\r\n    // 发出事件通知父组件关闭侧栏\r\n    emit('navigate');\r\n  }\r\n};\r\n\r\nconst formatVisitTime = (visitTime: string): string => {\r\n  const now = new Date();\r\n  const visit = new Date(visitTime);\r\n  const diffMs = now.getTime() - visit.getTime();\r\n  const diffMins = Math.floor(diffMs / (1000 * 60));\r\n  const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\r\n  const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n  if (diffMins < 1) {\r\n    return '刚刚';\r\n  } else if (diffMins < 60) {\r\n    return `${diffMins}分钟前`;\r\n  } else if (diffHours < 24) {\r\n    return `${diffHours}小时前`;\r\n  } else if (diffDays < 7) {\r\n    return `${diffDays}天前`;\r\n  } else {\r\n    return visit.toLocaleDateString('zh-CN', {\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  loadRecentApplications();\r\n\r\n  // 监听路由变化，当路由变化时重新加载历史记录\r\n  watch(router.currentRoute, () => {\r\n    loadRecentApplications();\r\n  });\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.recent-applications {\r\n  padding: 1rem;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.recent-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 1px solid var(--theme-color-lighter-a);\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  align-items: center;\r\n}\r\n\r\n.recent-header h3 {\r\n  margin: 0;\r\n  color: var(--theme-color-page);\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n}\r\n\r\n.clear-btn {\r\n  background: none;\r\n  border: 1px solid var(--theme-color-page);\r\n  color: var(--theme-color-page);\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  transition: all 0.2s ease;\r\n  white-space: nowrap;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background-color: var(--theme-color-lighter-a);\r\n  color: var(--theme-color-page);\r\n}\r\n\r\n.logout-btn {\r\n  background: none;\r\n  border: 1px solid #ff6b6b;\r\n  color: #ff6b6b;\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  transition: all 0.2s ease;\r\n  white-space: nowrap;\r\n}\r\n\r\n.logout-btn:hover {\r\n  background-color: #ff6b6b;\r\n  color: white;\r\n}\r\n\r\n.empty-state {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--theme-color);\r\n  font-style: italic;\r\n  white-space: nowrap;\r\n}\r\n\r\n.recent-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n}\r\n\r\n.recent-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: 0.75rem;\r\n  margin-bottom: 0.5rem;\r\n  background-color: var(--theme-color-lighter-a);\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.recent-item:hover {\r\n  background-color: var(--theme-color-lighter);\r\n  border-color: var(--theme-color);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.recent-item:hover .remove-btn,\r\n.recent-item:hover .app-name,\r\n.recent-item:hover .app-lore,\r\n.recent-item:hover .visit-time,\r\n.recent-item:hover .visit-count {\r\n  color: var(--theme-color-darker)\r\n}\r\n\r\n.recent-item:hover .app-name,\r\n.recent-item:hover .app-lore  {\r\n  opacity: 1;\r\n}\r\n\r\n.app-info {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.app-name {\r\n  font-weight: 600;\r\n  color: var(--theme-color-page);\r\n  margin-bottom: 0.25rem;\r\n  font-size: 0.9rem;\r\n  line-height: 1.2;\r\n  white-space: nowrap;\r\n  opacity: 0.8;\r\n}\r\n\r\n.app-lore {\r\n  color: var(--theme-color);\r\n  font-size: 0.8rem;\r\n  margin-bottom: 0.25rem;\r\n  line-height: 1.3;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  white-space: nowrap;\r\n  opacity: 0.8;\r\n}\r\n\r\n.app-meta {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  font-size: 0.7rem;\r\n  color: var(--theme-color);\r\n  white-space: nowrap;\r\n}\r\n\r\n.visit-time {\r\n  opacity: 0.8;\r\n  white-space: nowrap;\r\n  color: var(--theme-color-page);\r\n}\r\n\r\n.visit-count {\r\n  opacity: 0.6;\r\n  white-space: nowrap;\r\n  color: var(--theme-color-page);\r\n}\r\n\r\n.app-actions {\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.remove-btn {\r\n  background: none;\r\n  border: none;\r\n  color: var(--theme-color-page);\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.2s ease;\r\n  opacity: 0.6;\r\n}\r\n\r\n.remove-btn:hover {\r\n  background-color: rgba(255, 0, 0, 0.1);\r\n  color: #ff4444;\r\n  opacity: 1;\r\n}\r\n\r\n/* 滚动条样式 */\r\n.recent-list::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n\r\n.recent-list::-webkit-scrollbar-track {\r\n  background: var(--theme-color-lighter-a);\r\n  border-radius: 2px;\r\n}\r\n\r\n.recent-list::-webkit-scrollbar-thumb {\r\n  background: var(--theme-color);\r\n  border-radius: 2px;\r\n}\r\n\r\n.recent-list::-webkit-scrollbar-thumb:hover {\r\n  background: var(--theme-color-darker);\r\n}\r\n</style>\r\n","import script from \"./RecentApplications.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./RecentApplications.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./RecentApplications.vue?vue&type=style&index=0&id=1498ae1a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1498ae1a\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, withModifiers as _withModifiers, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"application-layout\",\n  id: \"application-layout\"\n}\n\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport NavigationBar from '@/components/NavigationBar.vue';\r\nimport RecentApplications from '@/components/RecentApplications.vue';\r\n\r\n// 响应式数据\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Application',\n  setup(__props) {\n\r\nconst currentPageTitle = ref<string>('Application');\r\nconst showProfileSideZone = ref<boolean>(false);\r\nconst sideZoneKey = ref<number>(0);\r\n\r\n// 路由\r\nconst route = useRoute();\r\n\r\n// 方法\r\nconst handleGlobalSearch = (query: string): void => {\r\n  console.log('全局搜索:', query);\r\n  // 处理全局搜索逻辑\r\n  // 可以通过事件总线或状态管理传递给子组件\r\n};\r\n\r\nconst updatePageTitle = (title: string): void => {\r\n  currentPageTitle.value = title;\r\n};\r\n\r\nconst updateTitleFromRoute = (): void => {\r\n  // 根据路由meta信息或路由名称设置标题\r\n  const routeMeta = route.meta;\r\n  if (routeMeta && routeMeta.title) {\r\n    currentPageTitle.value = routeMeta.title as string;\r\n  } else {\r\n    // 根据路由名称设置默认标题\r\n    switch (route.name) {\r\n      case 'MaintainBusinessPartner':\r\n        currentPageTitle.value = 'Maintain Business Partner';\r\n        break;\r\n      case 'TestPageErp':\r\n        currentPageTitle.value = 'Test Page';\r\n        break;\r\n      default:\r\n        currentPageTitle.value = 'Application';\r\n    }\r\n  }\r\n};\r\n\r\nconst handleProfileButtonClick = (): void => {\r\n  showProfileSideZone.value = !showProfileSideZone.value;\r\n\r\n  // 如果打开侧栏，刷新历史记录组件\r\n  if (showProfileSideZone.value) {\r\n    sideZoneKey.value += 1;\r\n  }\r\n};\r\n\r\nconst handleSideZoneNavigate = (): void => {\r\n  // 当从侧栏导航到应用时，关闭侧栏\r\n  showProfileSideZone.value = false;\r\n};\r\n\r\nconst handleSideZoneClose = (): void => {\r\n  // 关闭侧栏\r\n  showProfileSideZone.value = false;\r\n};\r\n\r\n// ESC键监听\r\nconst handleKeyDown = (event: KeyboardEvent): void => {\r\n  if (event.key === 'Escape' && showProfileSideZone.value) {\r\n    showProfileSideZone.value = false;\r\n  }\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  // 根据当前路由设置初始标题\r\n  updateTitleFromRoute();\r\n\r\n  // 添加键盘事件监听器\r\n  document.addEventListener('keydown', handleKeyDown);\r\n});\r\n\r\nonUnmounted(() => {\r\n  // 移除键盘事件监听器\r\n  document.removeEventListener('keydown', handleKeyDown);\r\n});\r\n\r\n// 监听路由变化\r\nwatch(route, () => {\r\n  // 路由变化时更新标题\r\n  updateTitleFromRoute();\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(NavigationBar, {\n      pageTitle: currentPageTitle.value,\n      onSearch: handleGlobalSearch,\n      onProfileClick: handleProfileButtonClick\n    }, null, 8, [\"pageTitle\"]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(`application-content-container ${showProfileSideZone.value?'showingSideZone':''}`),\n      id: \"application-content-container\"\n    }, [\n      _createVNode(_component_router_view, {\n        onUpdateTitle: updatePageTitle,\n        class: \"application-content\",\n        id: \"application-content\"\n      })\n    ], 2),\n    _createElementVNode(\"span\", {\n      class: _normalizeClass(`side-zone-bg ${showProfileSideZone.value?'showing':''}` ),\n      onClick: handleSideZoneClose\n    }, null, 2),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(`side-zone-container ${showProfileSideZone.value?'showing':''}`),\n      onClick: handleSideZoneClose\n    }, [\n      _createElementVNode(\"div\", {\n        class: \"side-zone-content-container\",\n        onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n      }, [\n        (_openBlock(), _createBlock(RecentApplications, {\n          onNavigate: handleSideZoneNavigate,\n          key: sideZoneKey.value\n        }))\n      ])\n    ], 2)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"application-layout\" id=\"application-layout\">\r\n    <!-- 固定的导航栏 -->\r\n    <NavigationBar\r\n      :pageTitle=\"currentPageTitle\"\r\n      @search=\"handleGlobalSearch\"\r\n      @profile-click=\"handleProfileButtonClick\"\r\n    />\r\n    \r\n    <!-- 主要内容区域 - 这里会根据子路由显示不同的内容 -->\r\n    <div\r\n      :class=\"`application-content-container ${showProfileSideZone?'showingSideZone':''}`\"\r\n      id=\"application-content-container\"\r\n    >\r\n      <router-view\r\n        @update-title=\"updatePageTitle\"\r\n        class = \"application-content\"\r\n        id = \"application-content\"\r\n      />\r\n    </div>\r\n    \r\n    <!-- 侧栏 -->\r\n    <span\r\n      :class = \"`side-zone-bg ${showProfileSideZone?'showing':''}` \"\r\n      @click=\"handleSideZoneClose\"\r\n    ></span>\r\n    <div\r\n      :class=\"`side-zone-container ${showProfileSideZone?'showing':''}`\"\r\n      @click=\"handleSideZoneClose\"\r\n    >\r\n      <div\r\n        class=\"side-zone-content-container\"\r\n        @click.stop\r\n      >\r\n        <RecentApplications\r\n          @navigate=\"handleSideZoneNavigate\"\r\n          :key=\"sideZoneKey\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport NavigationBar from '@/components/NavigationBar.vue';\r\nimport RecentApplications from '@/components/RecentApplications.vue';\r\n\r\n// 响应式数据\r\nconst currentPageTitle = ref<string>('Application');\r\nconst showProfileSideZone = ref<boolean>(false);\r\nconst sideZoneKey = ref<number>(0);\r\n\r\n// 路由\r\nconst route = useRoute();\r\n\r\n// 方法\r\nconst handleGlobalSearch = (query: string): void => {\r\n  console.log('全局搜索:', query);\r\n  // 处理全局搜索逻辑\r\n  // 可以通过事件总线或状态管理传递给子组件\r\n};\r\n\r\nconst updatePageTitle = (title: string): void => {\r\n  currentPageTitle.value = title;\r\n};\r\n\r\nconst updateTitleFromRoute = (): void => {\r\n  // 根据路由meta信息或路由名称设置标题\r\n  const routeMeta = route.meta;\r\n  if (routeMeta && routeMeta.title) {\r\n    currentPageTitle.value = routeMeta.title as string;\r\n  } else {\r\n    // 根据路由名称设置默认标题\r\n    switch (route.name) {\r\n      case 'MaintainBusinessPartner':\r\n        currentPageTitle.value = 'Maintain Business Partner';\r\n        break;\r\n      case 'TestPageErp':\r\n        currentPageTitle.value = 'Test Page';\r\n        break;\r\n      default:\r\n        currentPageTitle.value = 'Application';\r\n    }\r\n  }\r\n};\r\n\r\nconst handleProfileButtonClick = (): void => {\r\n  showProfileSideZone.value = !showProfileSideZone.value;\r\n\r\n  // 如果打开侧栏，刷新历史记录组件\r\n  if (showProfileSideZone.value) {\r\n    sideZoneKey.value += 1;\r\n  }\r\n};\r\n\r\nconst handleSideZoneNavigate = (): void => {\r\n  // 当从侧栏导航到应用时，关闭侧栏\r\n  showProfileSideZone.value = false;\r\n};\r\n\r\nconst handleSideZoneClose = (): void => {\r\n  // 关闭侧栏\r\n  showProfileSideZone.value = false;\r\n};\r\n\r\n// ESC键监听\r\nconst handleKeyDown = (event: KeyboardEvent): void => {\r\n  if (event.key === 'Escape' && showProfileSideZone.value) {\r\n    showProfileSideZone.value = false;\r\n  }\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  // 根据当前路由设置初始标题\r\n  updateTitleFromRoute();\r\n\r\n  // 添加键盘事件监听器\r\n  document.addEventListener('keydown', handleKeyDown);\r\n});\r\n\r\nonUnmounted(() => {\r\n  // 移除键盘事件监听器\r\n  document.removeEventListener('keydown', handleKeyDown);\r\n});\r\n\r\n// 监听路由变化\r\nwatch(route, () => {\r\n  // 路由变化时更新标题\r\n  updateTitleFromRoute();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.application-layout {\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n  background-color: var(--theme-color-dark); /* 应用的背景色 */\r\n  --nav-height: 4vh;\r\n  --side-width: 28%;\r\n  --side-zone-hard-bg-width-dark-ratio: 90;\r\n  --side-zone-hard-bg-width-light-ratio: 130;\r\n}\r\n\r\n.navigation-bar {\r\n  min-height: var(--nav-height);\r\n  max-height: var(--nav-height);\r\n  height: var(--nav-height);\r\n}\r\n\r\n.application-content-container {\r\n  flex-grow: 1;\r\n  /* 子组件会在这个区域内显示 */\r\n  max-height: calc(100vh - var(--nav-height));\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.application-content {\r\n  flex-basis: 100%;\r\n}\r\n\r\n.side-zone-bg {\r\n  position: fixed;\r\n  left: 0;\r\n  top: var(--nav-height);\r\n  width: 0%;\r\n  height: calc(100vh - var(--nav-height));\r\n  transition: all 0.3s ease;\r\n  z-index: 100;\r\n  background: \r\n    linear-gradient(to right, \r\n      var(--theme-color-dark) 0%, \r\n      var(--theme-color-dark) calc(var(--side-width) * var(--side-zone-hard-bg-width-dark-ratio) / 100), \r\n      var(--theme-color-light) calc(var(--side-width) * var(--side-zone-hard-bg-width-light-ratio) / 100), \r\n      var(--theme-color-light-a) 80%,\r\n      rgba(0,0,0,0) 100%\r\n    );\r\n  mix-blend-mode: darken;\r\n}\r\n\r\n.side-zone-container {\r\n  position: fixed;\r\n  left: 0;\r\n  top: var(--nav-height);\r\n  width: 0%;\r\n  height: calc(100vh - var(--nav-height));\r\n  transition: all 0.3s ease;\r\n  z-index: 120;\r\n  background: \r\n    linear-gradient(to right, \r\n      var(--theme-color-dark) 0%, \r\n      var(--theme-color-dark) calc(var(--side-width) * var(--side-zone-hard-bg-width-ratio) / 100),\r\n      rgba(0,0,0,0)\r\n    );\r\n  overflow: hidden;\r\n}\r\n\r\n.side-zone-bg.showing {\r\n  width: 100%;\r\n  transform: translateX(0);\r\n}\r\n.side-zone-container.showing {\r\n  width: 100%;\r\n  transform: translateX(0);\r\n}\r\n\r\n\r\n:deep(.application-content-container.showingSideZone .show-side--away) {\r\n  opacity: 0;\r\n}\r\n:deep(.show-side--away) {\r\n  opacity: 1;\r\n}\r\n\r\n:deep(.application-content-container.showingSideZone .show-side--away),\r\n:deep(.application-content-container.showingSideZone .page-content > *) {\r\n  transform: translateX( calc(var(--side-width) / 2) ) scale(0.73);  \r\n}\r\n\r\n:deep(.show-side--away),\r\n:deep(.page-content > *) {\r\n  transform: translateX(0);  \r\n  transform-origin: 68% 43%; \r\n  transition: all 0.3s ease;\r\n}\r\n\r\n:deep(.application-content-container.showingSideZone ~ .bottom-bar) {\r\n  transform: translate(100vw, 30vh) scale(0.73);  \r\n}\r\n:deep(.bottom-bar) {\r\n  transform: translate(0 ,0);  \r\n  transform-origin: 68% 43%; \r\n  transition: all 0.1s ease;\r\n  z-index: 50;\r\n}\r\n\r\n.side-zone-content-container {\r\n  width: calc(var(--side-width));\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n:deep(.page-content) {\r\n /* flex-grow: 1; */\r\n background-color: var(--theme-color-page);\r\n margin: 20px;\r\n padding: 0 20px;\r\n padding-top: 50px;\r\n border-radius: 4px;\r\n display: flex;\r\n flex-direction: column;\r\n overflow-y: auto;\r\n min-height: calc(100vh - var(--nav-height) - 40px);\r\n max-height: calc(100vh - var(--nav-height) - 40px);\r\n}\r\n\r\n:deep(.page-content::-webkit-scrollbar) {\r\n  display: none;\r\n}\r\n\r\n:deep(.execute-button) {\r\n  background-color: var(--theme-color-execute-button);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  height: 100%;\r\n}\r\n:deep(.execute-button:hover) {\r\n  background-color: var(--theme-color-execute-button-hover);\r\n  color: white;\r\n}\r\n:deep(.execute-button:active) {\r\n  background-color: var(--theme-color-execute-button-active);\r\n  color: black;\r\n}\r\n\r\n/* 只显示一个灰色层，其他透明但是要接受鼠标事件 */\r\n:deep(#application-layout > .gray-layer ~ .gray-layer) {\r\n  opacity: 0;\r\n  background-color: transparent;\r\n}\r\n\r\n:deep(.gray-layer) {\r\n  z-index: 80;\r\n}\r\n:deep(.search-modal) {\r\n  z-index: 90;\r\n}\r\n</style>","import script from \"./Application.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Application.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Application.vue?vue&type=style&index=0&id=70f1cdfa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-70f1cdfa\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"page-content\" }\nconst _hoisted_2 = { class: \"tag-filter-section\" }\nconst _hoisted_3 = { class: \"tag-filter-container\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { class: \"applications-grid\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"application-header\" }\nconst _hoisted_8 = { class: \"application-name\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"application-lore\"\n}\nconst _hoisted_10 = { class: \"directory-stats\" }\n\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport applicationHistoryManager, { type ApplicationInfo } from '@/utils/ApplicationHistoryManager';\r\n\r\n// 定义事件\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ApplicationDirectory',\n  emits: [\"update-title\"],\n  setup(__props, { emit: __emit }) {\n\r\nconst emit = __emit;\r\n\r\n// 响应式数据\r\nconst selectedTag = ref<string | null>(null);\r\nconst applications = ref<ApplicationInfo[]>([\r\n        {\r\n          \"applicationName\": \"Curricular Material PDF\",\r\n          \"lore\": \"Download Curricula\",\r\n          \"routePath\": \"/curricular-material-pdf\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Maintain Business Partner\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/maintain-business-partner\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create BP relationship\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/create-bp-relationship\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display BP relationship\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/display-bp-relationship\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Change BP relationship\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/change-bp-relationship\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Inquiry\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/create-inquiry\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Change Inquiry\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/change-inquiry\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Inquiry\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/display-inquiry\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Sales Quotations\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-sales-quotations\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Sales Order\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/create-sales-order\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Sales Order Fulfillment\",\r\n          \"lore\": \"All issues\",\r\n          \"routePath\": \"/sales-order-fulfillment\",\r\n          \"tags\": [\"order management\", \"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"List Sales Orders\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/list-sales-orders\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Sales Orders\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-sales-orders\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Outbound Delivery\",\r\n          \"lore\": \"Create deliveries from sales orders\",\r\n          \"routePath\": \"/create-outbound-delivery\",\r\n          \"tags\": [\"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Outbound Deliveries\",\r\n          \"lore\": \"Manage and process existing deliveries\",\r\n          \"routePath\": \"/manage-outbound-deliveries\",\r\n          \"tags\": [\"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Pick Outbound Delivery\",\r\n          \"lore\": \"From Sales Orders\",\r\n          \"routePath\": \"/pick-outbound-delivery\",\r\n          \"tags\": [\"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Material Documents Overview\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/material-documents-overview\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Stock\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-stock\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Stock Overview\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/display-stock-overview\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Billing Documents VRF11\",\r\n          \"lore\": \"VRF11\",\r\n          \"routePath\": \"/create-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Billing Documents\",\r\n          \"lore\": \"76\\nBilling Due List Items\",\r\n          \"routePath\": \"/display-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Change Billing Document VR02\",\r\n          \"lore\": \"VR02\",\r\n          \"routePath\": \"/change-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Billing Document VR03\",\r\n          \"lore\": \"VR03\",\r\n          \"routePath\": \"/display-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Billing Documents\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-billing-documents\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Post Incoming Payments\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/post-incoming-payments\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"AppContent Component Test\",\r\n          \"lore\": \"测试AppContent组件的stage管理功能\",\r\n          \"routePath\": \"/test/app-content\",\r\n          \"tags\": [\"test\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Example Application\",\r\n          \"lore\": \"展示VarTree/VarBox、ApplicationContent和SearchModal的综合应用示例\",\r\n          \"routePath\": \"/example\",\r\n          \"tags\": [\"example\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"VarBox Tutorial\",\r\n          \"lore\": \"VarBox的所有用法\",\r\n          \"routePath\": \"/vartree-&-varinput-tutorial\",\r\n          \"tags\": [\"example\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"ItemConditionKit Test\",\r\n          \"lore\": \"测试新的ItemConditionKit工具类架构\",\r\n          \"routePath\": \"/test/item-condition-kit\",\r\n          \"tags\": [\"test\"]\r\n        },\r\n      ]\r\n);\r\n\r\n// 路由\r\nconst router = useRouter();\r\n\r\n// 计算属性\r\nconst availableTags = computed((): string[] => {\r\n  const tags = new Set<string>();\r\n  applications.value.forEach(app => {\r\n    app.tags?.forEach(tag => tags.add(tag));\r\n  });\r\n  return Array.from(tags).sort();\r\n});\r\n\r\nconst filteredApplications = computed((): ApplicationInfo[] => {\r\n  if (!selectedTag.value) {\r\n    return applications.value;\r\n  }\r\n  return applications.value.filter(app =>\r\n    app.tags?.includes(selectedTag.value!)\r\n  );\r\n});\r\n\r\n// 方法\r\nconst selectTag = (tag: string | null): void => {\r\n  selectedTag.value = tag;\r\n};\r\n\r\nconst getTagDisplayName = (tag: string): string => {\r\n  const tagNames: Record<string, string> = {\r\n    'customer management': '客户管理',\r\n    'order management': '订单管理',\r\n    'delivery management': '交付管理',\r\n    'financial management': '财务管理',\r\n    'chore': '其他',\r\n    'test': '测试',\r\n    'example': '示例'\r\n  };\r\n  return tagNames[tag] || tag;\r\n};\r\n\r\nconst navigateToApplication = (app: ApplicationInfo): void => {\r\n  const fullPath = `/application${app.routePath}`;\r\n  console.log(`导航到应用: ${app.applicationName} -> ${fullPath}`);\r\n\r\n  // 记录应用程序访问历史\r\n  applicationHistoryManager.addVisitRecord(app);\r\n\r\n  router.push(fullPath);\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  // 设置页面标题\r\n  emit('update-title', '应用程序目录');\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"button\", {\n            class: _normalizeClass([\"tag-filter-button\", { active: selectedTag.value === null }]),\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (selectTag(null)))\n          }, \" 全部 \", 2),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(availableTags.value, (tag) => {\n            return (_openBlock(), _createElementBlock(\"button\", {\n              key: tag,\n              class: _normalizeClass([\"tag-filter-button\", { active: selectedTag.value === tag }]),\n              onClick: ($event: any) => (selectTag(tag))\n            }, _toDisplayString(getTagDisplayName(tag)), 11, _hoisted_4))\n          }), 128))\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredApplications.value, (app) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: app.applicationName,\n            class: \"application-card\",\n            onClick: ($event: any) => (navigateToApplication(app))\n          }, [\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\"p\", _hoisted_8, _toDisplayString(app.applicationName), 1)\n            ]),\n            _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"spacer\" }, null, -1)),\n            (app.lore)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString(app.lore), 1))\n              : _createCommentVNode(\"\", true)\n          ], 8, _hoisted_6))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", _hoisted_10, [\n        _createElementVNode(\"span\", null, \"显示 \" + _toDisplayString(filteredApplications.value.length) + \" / \" + _toDisplayString(applications.value.length) + \" 个应用程序\", 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"page-content\">\r\n    <div>\r\n      <!-- 标签筛选器 -->\r\n      <div class=\"tag-filter-section\">\r\n        <div class=\"tag-filter-container\">\r\n          <button \r\n            class=\"tag-filter-button\"\r\n            :class=\"{ active: selectedTag === null }\"\r\n            @click=\"selectTag(null)\"\r\n          >\r\n            全部\r\n          </button>\r\n          <button \r\n            v-for=\"tag in availableTags\" \r\n            :key=\"tag\"\r\n            class=\"tag-filter-button\"\r\n            :class=\"{ active: selectedTag === tag }\"\r\n            @click=\"selectTag(tag)\"\r\n          >\r\n            {{ getTagDisplayName(tag) }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 应用程序网格 -->\r\n      <div class=\"applications-grid\">\r\n        <div \r\n          v-for=\"app in filteredApplications\" \r\n          :key=\"app.applicationName\"\r\n          class=\"application-card\"\r\n          @click=\"navigateToApplication(app)\"\r\n        >\r\n          <div class=\"application-header\">\r\n            <p class=\"application-name\">{{ app.applicationName }}</p>\r\n            <!-- <div class=\"application-tags\">\r\n              <span \r\n                v-for=\"tag in app.tags\" \r\n                :key=\"tag\"\r\n                class=\"application-tag\"\r\n                :class=\"`tag-${tag.replace(/\\s+/g, '-')}`\"\r\n              >\r\n                {{ getTagDisplayName(tag) }}\r\n              </span>\r\n            </div> -->\r\n          </div>\r\n          <span class=\"spacer\"></span>\r\n          <div class=\"application-lore\" v-if=\"app.lore\">\r\n            {{ app.lore }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 统计信息 -->\r\n      <div class=\"directory-stats\">\r\n        <span>显示 {{ filteredApplications.length }} / {{ applications.length }} 个应用程序</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport applicationHistoryManager, { type ApplicationInfo } from '@/utils/ApplicationHistoryManager';\r\n\r\n// 定义事件\r\nconst emit = defineEmits<{\r\n  'update-title': [title: string]\r\n}>();\r\n\r\n// 响应式数据\r\nconst selectedTag = ref<string | null>(null);\r\nconst applications = ref<ApplicationInfo[]>([\r\n        {\r\n          \"applicationName\": \"Curricular Material PDF\",\r\n          \"lore\": \"Download Curricula\",\r\n          \"routePath\": \"/curricular-material-pdf\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Maintain Business Partner\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/maintain-business-partner\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create BP relationship\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/create-bp-relationship\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display BP relationship\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/display-bp-relationship\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Change BP relationship\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/change-bp-relationship\",\r\n          \"tags\": [\"customer management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Inquiry\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/create-inquiry\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Change Inquiry\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/change-inquiry\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Inquiry\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/display-inquiry\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Sales Quotations\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-sales-quotations\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Sales Order\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/create-sales-order\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Sales Order Fulfillment\",\r\n          \"lore\": \"All issues\",\r\n          \"routePath\": \"/sales-order-fulfillment\",\r\n          \"tags\": [\"order management\", \"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"List Sales Orders\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/list-sales-orders\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Sales Orders\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-sales-orders\",\r\n          \"tags\": [\"order management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Outbound Delivery\",\r\n          \"lore\": \"Create deliveries from sales orders\",\r\n          \"routePath\": \"/create-outbound-delivery\",\r\n          \"tags\": [\"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Outbound Deliveries\",\r\n          \"lore\": \"Manage and process existing deliveries\",\r\n          \"routePath\": \"/manage-outbound-deliveries\",\r\n          \"tags\": [\"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Pick Outbound Delivery\",\r\n          \"lore\": \"From Sales Orders\",\r\n          \"routePath\": \"/pick-outbound-delivery\",\r\n          \"tags\": [\"delivery management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Material Documents Overview\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/material-documents-overview\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Stock\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-stock\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Stock Overview\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/display-stock-overview\",\r\n          \"tags\": [\"chore\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Create Billing Documents VRF11\",\r\n          \"lore\": \"VRF11\",\r\n          \"routePath\": \"/create-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Billing Documents\",\r\n          \"lore\": \"76\\nBilling Due List Items\",\r\n          \"routePath\": \"/display-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Change Billing Document VR02\",\r\n          \"lore\": \"VR02\",\r\n          \"routePath\": \"/change-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Display Billing Document VR03\",\r\n          \"lore\": \"VR03\",\r\n          \"routePath\": \"/display-billing-document\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Manage Billing Documents\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/manage-billing-documents\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Post Incoming Payments\",\r\n          \"lore\": \"\",\r\n          \"routePath\": \"/post-incoming-payments\",\r\n          \"tags\": [\"financial management\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"AppContent Component Test\",\r\n          \"lore\": \"测试AppContent组件的stage管理功能\",\r\n          \"routePath\": \"/test/app-content\",\r\n          \"tags\": [\"test\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"Example Application\",\r\n          \"lore\": \"展示VarTree/VarBox、ApplicationContent和SearchModal的综合应用示例\",\r\n          \"routePath\": \"/example\",\r\n          \"tags\": [\"example\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"VarBox Tutorial\",\r\n          \"lore\": \"VarBox的所有用法\",\r\n          \"routePath\": \"/vartree-&-varinput-tutorial\",\r\n          \"tags\": [\"example\"]\r\n        },\r\n        {\r\n          \"applicationName\": \"ItemConditionKit Test\",\r\n          \"lore\": \"测试新的ItemConditionKit工具类架构\",\r\n          \"routePath\": \"/test/item-condition-kit\",\r\n          \"tags\": [\"test\"]\r\n        },\r\n      ]\r\n);\r\n\r\n// 路由\r\nconst router = useRouter();\r\n\r\n// 计算属性\r\nconst availableTags = computed((): string[] => {\r\n  const tags = new Set<string>();\r\n  applications.value.forEach(app => {\r\n    app.tags?.forEach(tag => tags.add(tag));\r\n  });\r\n  return Array.from(tags).sort();\r\n});\r\n\r\nconst filteredApplications = computed((): ApplicationInfo[] => {\r\n  if (!selectedTag.value) {\r\n    return applications.value;\r\n  }\r\n  return applications.value.filter(app =>\r\n    app.tags?.includes(selectedTag.value!)\r\n  );\r\n});\r\n\r\n// 方法\r\nconst selectTag = (tag: string | null): void => {\r\n  selectedTag.value = tag;\r\n};\r\n\r\nconst getTagDisplayName = (tag: string): string => {\r\n  const tagNames: Record<string, string> = {\r\n    'customer management': '客户管理',\r\n    'order management': '订单管理',\r\n    'delivery management': '交付管理',\r\n    'financial management': '财务管理',\r\n    'chore': '其他',\r\n    'test': '测试',\r\n    'example': '示例'\r\n  };\r\n  return tagNames[tag] || tag;\r\n};\r\n\r\nconst navigateToApplication = (app: ApplicationInfo): void => {\r\n  const fullPath = `/application${app.routePath}`;\r\n  console.log(`导航到应用: ${app.applicationName} -> ${fullPath}`);\r\n\r\n  // 记录应用程序访问历史\r\n  applicationHistoryManager.addVisitRecord(app);\r\n\r\n  router.push(fullPath);\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  // 设置页面标题\r\n  emit('update-title', '应用程序目录');\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.tag-filter-section {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: var(--theme-color-lighter-a);\r\n  border-radius: 8px;\r\n}\r\n\r\n.tag-filter-label {\r\n  color: var(--theme-color-dark);\r\n  margin-bottom: 0.8rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.tag-filter-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.tag-filter-button {\r\n  padding: 0.5rem 1rem;\r\n  border: 2px solid var(--theme-color-light);\r\n  background-color: transparent;\r\n  color: var(--theme-color-dark);\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.tag-filter-button:hover {\r\n  background-color: var(--theme-color-light-a);\r\n}\r\n\r\n.tag-filter-button.active {\r\n  background-color: var(--theme-color-dark);\r\n  color: var(--theme-color-contrast);\r\n  border-color: var(--theme-color-dark);\r\n}\r\n\r\n.applications-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-auto-rows: 15vh;\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n  flex-grow: 1;\r\n}\r\n\r\n.application-card {\r\n  background-color: var(--theme-color-contrast);\r\n  border: 1px solid var(--theme-color-lighter);\r\n  border-radius: 8px;\r\n  padding: 1.2rem;\r\n  padding-bottom: 1rem;\r\n  padding-top: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: scroll;\r\n}\r\n.application-card::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.application-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  border-color: var(--theme-color-light);\r\n}\r\n\r\n.application-header {\r\n  margin-bottom: 1rem;\r\n  text-align: left;\r\n}\r\n\r\n.application-name {\r\n  color: var(--theme-color-dark);\r\n  font-size: 1.3rem;\r\n  margin: 0 0 0.5rem 0;\r\n  line-height: 1.3;\r\n  font-weight: 600;\r\n}\r\n\r\n.application-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.3rem;\r\n}\r\n\r\n.application-tag {\r\n  background-color: var(--theme-color-light-a);\r\n  color: var(--theme-color-dark);\r\n  padding: 0.2rem 0.6rem;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.application-lore {\r\n  color: var(--theme-color-light);\r\n  font-size: 0.95rem;\r\n  line-height: 1.4;\r\n  min-height: 1.4rem;\r\n  text-align: right;\r\n}\r\n\r\n.application-route {\r\n  color: var(--color-text-primary);\r\n  font-size: 0.85rem;\r\n  font-family: monospace;\r\n  background-color: var(--theme-color-lighter-a);\r\n  padding: 0.3rem 0.6rem;\r\n  border-radius: 4px;\r\n  border-left: 3px solid var(--theme-color-light);\r\n}\r\n\r\n.directory-stats {\r\n  text-align: center;\r\n  color: var(--theme-color-light);\r\n  font-size: 0.9rem;\r\n  padding: 1rem;\r\n  border-top: 1px solid var(--theme-color-lighter);\r\n}\r\n\r\n/* 标签特定颜色 */\r\n.tag-customer-management {\r\n  background-color: rgba(52, 152, 219, 0.2);\r\n  color: #2980b9;\r\n}\r\n\r\n.tag-order-management {\r\n  background-color: rgba(46, 204, 113, 0.2);\r\n  color: #27ae60;\r\n}\r\n\r\n.tag-delivery-management {\r\n  background-color: rgba(155, 89, 182, 0.2);\r\n  color: #8e44ad;\r\n}\r\n\r\n.tag-financial-management {\r\n  background-color: rgba(230, 126, 34, 0.2);\r\n  color: #d35400;\r\n}\r\n\r\n.tag-chore {\r\n  background-color: rgba(149, 165, 166, 0.2);\r\n  color: #7f8c8d;\r\n}\r\n\r\n.spacer {\r\n  flex-grow: 1;\r\n}\r\n</style>\r\n","import script from \"./ApplicationDirectory.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ApplicationDirectory.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ApplicationDirectory.vue?vue&type=style&index=0&id=7462cc68&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7462cc68\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"maintain-business-partner-view\">\r\n    <FilterTabs :tabs=\"businessPartnerTabs\" @tab-selected=\"handleTabSelected\"/>\r\n\r\n    <div class=\"bp-page-content\">\r\n      <div v-if=\"activeContentKey === 'sales_and_dist' && !showDetailView\" class=\"business-partner-search\" style=\"width: 100%;\">\r\n        <div class=\"input-with-icon\" style=\"width: 100%;\">\r\n          <VarBox\r\n            :tree=\"customerQueryTree\"\r\n            class=\"bp-input-var-input\"\r\n          />\r\n        </div>\r\n\r\n        <div v-if=\"searchPerformed && businessPartnerResults && businessPartnerResults.length > 0\" class=\"query-results-list\">\r\n          <div class=\"business-partner-rows-container\">\r\n            <div class=\"business-partner-row-header\">\r\n                <div class=\"header-item customer-id\">Customer ID</div>\r\n                <div class=\"header-item name\">Name</div>\r\n                <div class=\"header-item city\">City</div>\r\n                <div class=\"header-item country\">Country</div>\r\n                <div class=\"header-item bp-role\">BP Role</div>\r\n                <div class=\"header-item\"></div>\r\n            </div>\r\n            <div v-for=\"bp in businessPartnerResults\" :key=\"bp.customerId\" class=\"business-partner-row\" @click=\"viewBusinessPartnerDetail(bp.customerId)\">\r\n              <span class=\"row-item customer-id\">{{ bp.customerId }}</span>\r\n              <span class=\"row-item name\">{{ bp.type === 'person' ? bp.firstName + \" \" + bp.lastName : bp.name }}</span>\r\n              <span class=\"row-item city\">{{ bp.city }}</span>\r\n              <span class=\"row-item country\">{{ bp.country }}</span>\r\n              <span class=\"row-item bp-role\">{{ bp.bpRole }}</span>\r\n              <span class=\"row-item arrow-icon\">▶</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-else-if=\"searchPerformed && businessPartnerResults && businessPartnerResults.length === 0\" class=\"no-results\">\r\n          <p>No business partners found matching your criteria.</p>\r\n        </div>\r\n        <div v-else class=\"initial-output-message\">\r\n          <p>Enter query criteria and click \"Execute\" to see results.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-else-if=\"(activeContentKey === 'sales_and_dist' && showDetailView) || ['person', 'org', 'group'].includes(activeContentKey)\" class=\"business-partner-detail-view\">\r\n        <div v-if=\"activeContentKey === 'sales_and_dist' && showDetailView\" class=\"detail-page-actions\">\r\n          <button class=\"back-button\" @click=\"backToSearchResults\">← Back to Search Results</button>\r\n        </div>\r\n        <VarBox\r\n          :tree=\"currentVarTree\"\r\n          class=\"bp-detail-var-input\"\r\n          :key=\"customerVarBoxKey\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"bottom-actions\">\r\n      <button class=\"search-enter-button\" @click=\"handleActionButtonClick\">\r\n        {{ actionButtonText }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FilterTabs from '@/components/FilterTabs.vue';\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport { createTreeFromConfig, cns, VarTree, VarNodeValue, VarNode, createNodeFromConfig } from '@/utils/VarTree';\r\nimport { bpSearch, relationSearch } from '@/utils/searchMethods';\r\n\r\n// 定义一个基础的API URL，你可以根据你的项目配置进行调整\r\n// 在实际项目中，这通常通过环境变量配置\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\n\r\nconst customerQueryStructure = cns(\"dict\", \"dict\", \"query\", null, false, {hideLabel: true}, [\r\n  cns(\"string\", \"leaf\", \"customerId\", '', false, { searchMethods: bpSearch }, [], \"Customer ID\")\r\n]);\r\n\r\n// 封装成一个函数，用于根据类型创建不同的表单结构\r\nfunction createCustomerTreeStructure(type = 'org') {\r\n  const isPerson = type === 'person';\r\n  return cns(\"dict\",\"dict\",\"customer\",null,false,{hideLabel:true},[\r\n    cns(\"dict\",\"dict\",\"bpIdAndRoleSection\",null,false,{hideLabel:true},[\r\n      cns(\"string\",\"leaf\",\"customerId\",null,true,{},[],\"Business Partner:\"),\r\n      cns(\"selection\",\"leaf\",\"bpRole\",'',false,{options:['Business Partner','Customer','FI Customer']},[],\"Create in BP role:\"),\r\n      cns(\"string\",\"leaf\",\"type\",type,true,{hideSelf:true},[],\"BP Type:\"),\r\n    ],\"\"),\r\n\r\n    cns(\"dict\",\"dict\",\"name\",null,false,{},[\r\n      cns(\"selection\",\"leaf\",\"title\",null,false,{options:['Mr.','Mrs.','Ms.','Company']},[],\"Title:\"),\r\n      cns(\"string\",\"leaf\",\"name\",null,false,{hideSelf: isPerson},[],\"Name:\"),\r\n      cns(\"string\",\"leaf\",\"firstName\",null,false,{hideSelf: !isPerson},[],\"First Name:\"),\r\n      cns(\"string\",\"leaf\",\"lastName\",null,false,{hideSelf: !isPerson},[],\"Last Name:\"),\r\n    ],\"Name\"),\r\n    cns(\"dict\",\"dict\",\"searchTerms\",null,false,{},[\r\n      cns(\"string\",\"leaf\",\"searchTerm\",null,false,{},[],\"Search Term:\"),\r\n    ],\"Search Terms\"),\r\n    cns(\"dict\",\"dict\",\"address\",null,false,{},[\r\n      cns(\"string\",\"leaf\",\"country\",\"\",false,{searchMethods:bpSearch},[],\"Country:\"),\r\n      cns(\"string\",\"leaf\",\"street\",null,false,{},[],\"Street:\"),\r\n      cns(\"string\",\"leaf\",\"postalCode\",null,false,{},[],\"Postal Code:\"),\r\n      cns(\"string\",\"leaf\",\"city\",null,false,{},[],\"City:\"),\r\n    ],\"Address\"),\r\n  ]);\r\n}\r\n\r\n\r\nexport default {\r\n  name: 'MaintainBusinessPartnerView',\r\n  components: {\r\n    FilterTabs,\r\n    VarBox,\r\n  },\r\n  data() {\r\n    return {\r\n      activeContentKey: 'sales_and_dist',\r\n      businessPartnerTabs: [\r\n        { label: 'sales and dist', value: 'sales_and_dist' },\r\n        { label: 'person', value: 'person' },\r\n        { label: 'group', value: 'group' },\r\n        { label: 'org', value: 'org' },\r\n      ],\r\n      customerQueryTree: createTreeFromConfig(customerQueryStructure),\r\n      customerCreateTree: null, // 将其初始化为null\r\n      customerDetailTree: null, // 将其初始化为null\r\n      businessPartnerResults: [],\r\n      searchPerformed: false,\r\n      showDetailView: false,\r\n      selectedBusinessPartnerId: null,\r\n      customerVarBoxKey: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    actionButtonText() {\r\n      if (['person', 'group', 'org'].includes(this.activeContentKey)) {\r\n        return 'Save';\r\n      }\r\n      if (this.activeContentKey === 'sales_and_dist' && this.showDetailView) {\r\n        return 'Save';\r\n      }\r\n      return 'Execute';\r\n    },\r\n    // 根据当前状态动态返回要显示的VarTree\r\n    currentVarTree() {\r\n      if (['person', 'group', 'org'].includes(this.activeContentKey)) {\r\n        return this.customerCreateTree;\r\n      }\r\n      if (this.activeContentKey === 'sales_and_dist' && this.showDetailView) {\r\n        return this.customerDetailTree;\r\n      }\r\n      return this.customerQueryTree; // 默认返回查询树，以防万一\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听 activeContentKey 的变化，动态创建树\r\n    activeContentKey(newKey) {\r\n      if (['person', 'group', 'org'].includes(newKey)) {\r\n        this.customerCreateTree = createTreeFromConfig(createCustomerTreeStructure(newKey));\r\n        this.customerVarBoxKey++;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 组件创建时，初始化创建表单的树（默认一个类型）\r\n    this.customerCreateTree = createTreeFromConfig(createCustomerTreeStructure('person'));\r\n  },\r\n  methods: {\r\n    handleTabSelected(selectedTabValue) {\r\n      this.activeContentKey = selectedTabValue;\r\n      this.showDetailView = false;\r\n      this.searchPerformed = false;\r\n      this.businessPartnerResults = [];\r\n      // 切换标签时重置详情树，为下一次查询做准备\r\n      this.customerDetailTree = null;\r\n      this.selectedBusinessPartnerId = null;\r\n      this.customerVarBoxKey++;\r\n      console.log('Tab selected:', selectedTabValue);\r\n    },\r\n    async handleActionButtonClick() {\r\n      console.log('--- 准备执行操作 ---');\r\n      console.log('当前激活内容键 (activeContentKey):', this.activeContentKey);\r\n      console.log('是否显示详情页 (showDetailView):', this.showDetailView);\r\n\r\n      if (this.activeContentKey === 'sales_and_dist' && !this.showDetailView) {\r\n        await this.performBusinessPartnerSearch();\r\n      } else if (['person', 'group', 'org'].includes(this.activeContentKey)) {\r\n        await this.createBusinessPartner(this.activeContentKey);\r\n      } else if (this.activeContentKey === 'sales_and_dist' && this.showDetailView) {\r\n        await this.saveBusinessPartnerDetail();\r\n      }\r\n      console.log('--- 操作流程结束 ---');\r\n    },\r\n    async performBusinessPartnerSearch() {\r\n      console.log('执行业务伙伴查询...');\r\n      this.searchPerformed = true;\r\n      this.businessPartnerResults = [];\r\n\r\n      const queryData = this.customerQueryTree.root?.getValue();\r\n      console.log('提交的查询数据结构:', JSON.stringify(queryData, null, 2));\r\n\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/bp/search`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(queryData),\r\n        });\r\n        const result = await response.json();\r\n\r\n        if (result.success && Array.isArray(result.data)) {\r\n          this.businessPartnerResults = result.data;\r\n          console.log('查询结果:', this.businessPartnerResults);\r\n        } else {\r\n          console.error('业务伙伴查询失败:', result.message || 'API返回数据异常');\r\n          this.businessPartnerResults = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('业务伙伴查询发生错误:', error);\r\n        this.businessPartnerResults = [];\r\n        alert('查询业务伙伴失败: ' + (error.message || '网络错误'));\r\n      }\r\n    },\r\n    async viewBusinessPartnerDetail(customerId) {\r\n      console.log(`进入业务伙伴详情页，ID: ${customerId}`);\r\n      this.selectedBusinessPartnerId = customerId;\r\n      this.showDetailView = true;\r\n      this.customerVarBoxKey++;\r\n      await this.fetchBusinessPartnerDetail(customerId);\r\n    },\r\n    async fetchBusinessPartnerDetail(customerId) {\r\n      console.log(`获取业务伙伴 ${customerId} 的详情数据...`);\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/bp/get/${customerId}`);\r\n        const result = await response.json();\r\n\r\n        if (result.success && result.data) {\r\n          // 1. 根据返回的数据类型，动态生成对应的 VarTree 结构\r\n          const bpType = result.data.bpIdAndRoleSection?.type || 'org'; // 假设类型存在于此，如果不存在则使用默认值\r\n          console.log(`获取到业务伙伴类型: ${bpType}`);\r\n          this.customerDetailTree = createTreeFromConfig(createCustomerTreeStructure(bpType));\r\n\r\n          // 2. 将数据填充到新生成的树中\r\n          this.customerDetailTree.root?.forceSetValue(result.data);\r\n          console.log('业务伙伴详情数据加载成功:', result.data);\r\n        } else {\r\n          console.error('获取业务伙伴详情失败:', result.message || 'API返回数据异常');\r\n          this.showDetailView = false;\r\n          alert('获取业务伙伴详情失败: ' + (result.message || '未知错误'));\r\n        }\r\n      } catch (error) {\r\n        console.error('获取业务伙伴详情发生错误:', error);\r\n        this.showDetailView = false;\r\n        alert('获取业务伙伴详情失败: ' + (error.message || '网络错误'));\r\n      }\r\n    },\r\n    backToSearchResults() {\r\n      console.log('返回搜索结果列表');\r\n      this.showDetailView = false;\r\n      this.selectedBusinessPartnerId = null;\r\n      this.customerDetailTree = null; // 清空详情页数据树\r\n      this.customerVarBoxKey++;\r\n    },\r\n    async createBusinessPartner(type) {\r\n      console.log(`执行创建 ${type} 业务伙伴...`);\r\n      const createData = this.customerCreateTree.root?.getValue();\r\n\r\n      if (createData) {\r\n        if (!createData.bpIdAndRoleSection) {\r\n          createData.bpIdAndRoleSection = {};\r\n        }\r\n        createData.bpIdAndRoleSection.type = type;\r\n      }\r\n\r\n      console.log('提交的创建数据:', JSON.stringify(createData, null, 2));\r\n\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/bp/create`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(createData),\r\n        });\r\n        const result = await response.json();\r\n\r\n        if (result.success) {\r\n          alert(result.message + ' New Customer ID: ' + result.data.customerId);\r\n          this.customerCreateTree.root?.forceSetValue({});\r\n          this.customerVarBoxKey++;\r\n        } else {\r\n          alert('创建失败: ' + (result.message || '未知错误'));\r\n        }\r\n      } catch (error) {\r\n        console.error('创建业务伙伴失败:', error);\r\n        alert('创建业务伙伴失败: ' + (error.message || '网络错误'));\r\n      }\r\n    },\r\n    async saveBusinessPartnerDetail() {\r\n      console.log(`执行保存业务伙伴 ${this.selectedBusinessPartnerId} 的详情...`);\r\n      const detailData = this.customerDetailTree.root?.getValue();\r\n\r\n      if (!this.selectedBusinessPartnerId) {\r\n        alert('无法保存：未选择业务伙伴ID。');\r\n        return;\r\n      }\r\n      if (detailData && detailData.bpIdAndRoleSection) {\r\n        detailData.bpIdAndRoleSection.customerId = this.selectedBusinessPartnerId;\r\n      } else {\r\n        alert('无法保存：数据结构异常。');\r\n        return;\r\n      }\r\n\r\n      console.log('提交的详情数据进行保存:', JSON.stringify(detailData, null, 2));\r\n\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/bp/edit`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(detailData),\r\n        });\r\n        const result = await response.json();\r\n\r\n        if (result.success) {\r\n          alert(result.message);\r\n          this.backToSearchResults();\r\n        } else {\r\n          alert('保存失败: ' + (result.message || '未知错误'));\r\n        }\r\n      } catch (error) {\r\n        console.error('保存业务伙伴详情失败:', error);\r\n        alert('保存业务伙伴详情失败: ' + (error.message || '网络错误'));\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    API_BASE_URL = window.API_BASE_URL || '';\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 保持原有的样式，确保列表和详情页的显示效果 */\r\n.maintain-business-partner-view {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh; /* 使用 100vh 确保全屏高度 */\r\n  background-color: var(--theme-color-dark);\r\n  width:100%;\r\n}\r\n\r\n.bp-page-content {\r\n  flex-grow: 1;\r\n  background-color: var(--theme-color-page);\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 20px;\r\n  overflow-y: auto; /* 允许内容区域垂直滚动 */\r\n  padding-bottom: 80px; /* 为固定的底部操作栏留出空间，这个值应略大于底部栏的高度 */\r\n}\r\n\r\n.business-partner-search label {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\n\r\n.input-with-icon {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.bp-input-var-input,\r\n.bp-detail-var-input {\r\n  flex-grow: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n/* 修改后的底部操作栏样式 */\r\n.bottom-actions {\r\n  position: fixed; /* 固定定位 */\r\n  bottom: 0; /* 固定在底部 */\r\n  left: 0; /* 固定在左侧 */\r\n  width: 100%; /* 宽度占满 */\r\n  padding: 20px; /* 增加内边距 */\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  background-color: var(--theme-color-dark); /* 设置背景色以防内容透出 */\r\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n  z-index: 100; /* 确保它位于其他内容之上 */\r\n}\r\n\r\n.search-enter-button {\r\n  padding: 10px 20px;\r\n  background-color: var(--theme-color-page);\r\n  color: var(--theme-color-dark);\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.search-enter-button:hover {\r\n  background-color: #25984C;\r\n  color: var(--theme-color-page);\r\n}\r\n\r\n/* 搜索结果列表样式 (参考 ManageSalesOrders.vue) */\r\n.query-results-list {\r\n  margin-top: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.business-partner-rows-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.business-partner-row-header,\r\n.business-partner-row {\r\n  display: flex;\r\n  padding: 10px 15px;\r\n  border-bottom: 1px solid var(--theme-color-page);\r\n  align-items: center;\r\n}\r\n\r\n.business-partner-row-header {\r\n  background-color: var(--theme-color-dark);\r\n  font-weight: bold;\r\n}\r\n\r\n.business-partner-row {\r\n  cursor: pointer;\r\n}\r\n\r\n.business-partner-row:hover {\r\n  background-color: #ccc;\r\n  transition: background-color 0.4s;\r\n}\r\n\r\n.header-item{\r\n  flex: 1;\r\n  padding: 0 5px;\r\n  word-break: break-all;\r\n  color: var(--theme-color-page);\r\n}\r\n.row-item {\r\n  flex: 1;\r\n  padding: 0 5px;\r\n  word-break: break-all;\r\n  color: var(--theme-color-dark);\r\n}\r\n\r\n.header-item.customer-id, .row-item.customer-id { flex-basis: 10%; text-align: center; }\r\n.header-item.name, .row-item.name { flex-basis: 10%; text-align: center;}\r\n.header-item.city, .row-item.city { flex-basis: 10%; text-align: center; }\r\n.header-item.country, .row-item.country { flex-basis: 10%; text-align: center; }\r\n.header-item.bp-role, .row-item.bp-role { flex-basis: 10%; text-align: center; }\r\n.header-item:last-child, .row-item.arrow-icon {flex: 0 0 20px; text-align: right;}\r\n\r\n.no-results, .initial-output-message {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n/* 详情页样式 */\r\n.business-partner-detail-view {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.detail-page-actions {\r\n  padding-bottom: 15px;\r\n  border-bottom: 2px solid #555;\r\n}\r\n\r\n.back-button {\r\n  padding: 8px 15px;\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n:deep(.customer-address-country--wrapper){\r\n  max-width: 150px;\r\n}\r\n\r\n</style>","<template>\r\n  <div class=\"filter-tabs-container\">\r\n    <div class=\"horizontal-line top-line\"></div>\r\n\r\n    <div class=\"filter-tabs-row\">\r\n      <button\r\n        v-for=\"(tab, index) in tabs\"\r\n        :key=\"index\"\r\n        :class=\"['tab-button', { 'active': activeTab === tab.value }]\"\r\n        @click=\"selectTab(tab.value)\"\r\n      >\r\n        {{ tab.label }}\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"horizontal-line bottom-line\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FilterTabs', // 组件名称\r\n  props: {\r\n    // 标签按钮的配置数组\r\n    tabs: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => [\r\n        { label: 'sales and dist', value: 'sales_and_dist' },\r\n        { label: 'person', value: 'person' },\r\n        { label: 'group', value: 'group' },\r\n        { label: 'org', value: 'org' },\r\n        { label: 'company code', value: 'company_code' },\r\n        { label: 'more', value: 'more' },\r\n      ]\r\n    },\r\n    // 初始选中的标签值\r\n    initialActiveTab: {\r\n      type: [String, Number, Object],\r\n      default: 'sales_and_dist' // 默认选中第一个\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activeTab: this.initialActiveTab, // 当前激活的标签\r\n    };\r\n  },\r\n  watch: {\r\n    // 监听 initialActiveTab 变化，外部可以控制激活状态\r\n    initialActiveTab(newValue) {\r\n      this.activeTab = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    selectTab(tabValue) {\r\n      if (this.activeTab !== tabValue) {\r\n        this.activeTab = tabValue;\r\n        // 向父组件发出事件，通知当前选中的标签值\r\n        this.$emit('tab-selected', tabValue);\r\n        console.log('Tab selected:', tabValue);\r\n      }\r\n    }\r\n  },\r\n  // 在组件创建后，立即发出初始选中的标签\r\n  created() {\r\n    this.$emit('tab-selected', this.activeTab);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.filter-tabs-container {\r\n  width: 100%;\r\n  background-color: var(--theme-color-darker); /* 与导航栏相同的深绿色背景 */\r\n  padding-bottom: 5px; /* 留出横线和按钮之间的空间 */\r\n}\r\n.reverse.filter-tabs-container {\r\n  background-color: var(--theme-color-page);\r\n}\r\n\r\n.horizontal-line {\r\n  height: 2px; /* 横线高度 */\r\n  background-color: rgba(255, 255, 255, 0.3); /* 白色半透明横线 */\r\n  margin: 0 20px; /* 两侧留白，与导航栏padding对应 */\r\n}\r\n\r\n.top-line {\r\n  margin-bottom: 10px; /* 上横线与按钮行的间距 */\r\n}\r\n\r\n.bottom-line {\r\n  margin-top: 10px; /* 下横线与按钮行的间距 */\r\n}\r\n\r\n.filter-tabs-row {\r\n  display: flex;\r\n  justify-content: flex-start; /* 按钮靠左对齐 */\r\n  padding: 0 20px; /* 与横线对齐 */\r\n  gap: 10px; /* 按钮之间的间距 */\r\n  flex-wrap: wrap; /* 允许按钮换行，以防内容过多 */\r\n}\r\n\r\n.middle .filter-tabs-row {\r\n  justify-content: center; /* 按钮居中对齐 */\r\n}\r\n\r\n.tab-button {\r\n  background-color: rgba(255, 255, 255, 0.1); /* 默认按钮的半透明背景 */\r\n  color: var(--theme-color-page); /* 按钮文字颜色 */\r\n  border: none;\r\n  border-radius: 5px; /* 轻微圆角 */\r\n  padding: 8px 15px;\r\n  cursor: pointer;\r\n  font-size: 0.9em;\r\n  white-space: nowrap; /* 防止按钮文字换行 */\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n  flex-shrink: 0; /* 防止按钮被压缩 */\r\n}\r\n.reverse .tab-button {\r\n  color: var(--theme-color-dark); /* 按钮文字颜色 */\r\n}\r\n\r\n.tab-button:hover {\r\n  background-color: rgba(255, 255, 255, 0.2); /* 鼠标悬停效果 */\r\n}\r\n\r\n.tab-button.active {\r\n  background-color: var(--theme-color-page); /* 选中状态的浅色背景 */\r\n  color: var(--theme-color-dark); /* 选中状态的深色文字 */\r\n  font-weight: bold;\r\n}\r\n\r\n.reverse .horizontal-line {\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.reverse .tab-button.active {\r\n  background-color: var(--theme-color-lighter-a);\r\n  color: var(--theme-color-dark);\r\n}\r\n\r\n.hide-top-line .top-line,\r\n.hide-bottom-line .bottom-line {\r\n  display: none;\r\n}\r\n</style>","import { render } from \"./FilterTabs.vue?vue&type=template&id=7e8b969f&scoped=true\"\nimport script from \"./FilterTabs.vue?vue&type=script&lang=js\"\nexport * from \"./FilterTabs.vue?vue&type=script&lang=js\"\n\nimport \"./FilterTabs.vue?vue&type=style&index=0&id=7e8b969f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7e8b969f\"]])\n\nexport default __exports__","import { render } from \"./MaintainBusinessPartnerView.vue?vue&type=template&id=a9adf14a&scoped=true\"\nimport script from \"./MaintainBusinessPartnerView.vue?vue&type=script&lang=js\"\nexport * from \"./MaintainBusinessPartnerView.vue?vue&type=script&lang=js\"\n\nimport \"./MaintainBusinessPartnerView.vue?vue&type=style&index=0&id=a9adf14a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a9adf14a\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"testcase-demo-root\" }\nconst _hoisted_2 = { class: \"testcase-nav\" }\nconst _hoisted_3 = [\"href\"]\nconst _hoisted_4 = { class: \"testcase-list\" }\nconst _hoisted_5 = [\"id\"]\nconst _hoisted_6 = { class: \"result-preview\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_var_box = _resolveComponent(\"var-box\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"nav\", _hoisted_2, [\n        _cache[0] || (_cache[0] = _createElementVNode(\"div\", { class: \"testcase-nav-title\" }, \"VarBox TestCase目录\", -1)),\n        _createElementVNode(\"ul\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.testcaseNames, (name) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: name }, [\n              _createElementVNode(\"a\", {\n                href: '#testcase-'+name\n              }, _toDisplayString(name), 9, _hoisted_3)\n            ]))\n          }), 128))\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_4, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.testcaseNames, (name) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: name,\n            class: \"testcase-item\",\n            id: 'testcase-'+name\n          }, [\n            _createElementVNode(\"h3\", null, _toDisplayString(name), 1),\n            _createVNode(_component_var_box, {\n              tree: $data.testCases[name].tree,\n              nodePath: []\n            }, null, 8, [\"tree\"]),\n            _createElementVNode(\"div\", _hoisted_6, [\n              _cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"当前值：\", -1)),\n              _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify($data.testCases[name].tree.root?.currentValue, null, 2)), 1)\n            ])\n          ], 8, _hoisted_5))\n        }), 128))\n      ])\n    ])\n  ]))\n}","<template>\r\n  <div>\r\n    <!-- VarBoxCases全量测试区 -->\r\n    <div class=\"testcase-demo-root\">\r\n      <nav class=\"testcase-nav\">\r\n        <div class=\"testcase-nav-title\">VarBox TestCase目录</div>\r\n        <ul>\r\n          <li v-for=\"name in testcaseNames\" :key=\"name\">\r\n            <a :href=\"'#testcase-'+name\">{{ name }}</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div class=\"testcase-list\">\r\n        <div\r\n          v-for=\"name in testcaseNames\"\r\n          :key=\"name\"\r\n          class=\"testcase-item\"\r\n          :id=\"'testcase-'+name\"\r\n        >\r\n          <h3>{{ name }}</h3>\r\n          <var-box\r\n            :tree=\"testCases[name].tree\"\r\n            :nodePath=\"[]\"\r\n          />\r\n          <div class=\"result-preview\">\r\n            <strong>当前值：</strong>\r\n            <pre>{{ JSON.stringify(testCases[name].tree.root?.currentValue, null, 2) }}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.testcase-demo-root {\r\n  display: flex;\r\n  margin-top: 48px;\r\n  min-height: 400px;\r\n}\r\n.testcase-nav {\r\n  position: fixed;\r\n  top: 80px;\r\n  left: 0;\r\n  width: 180px;\r\n  background: #f8f8fc;\r\n  border-right: 2px solid #eee;\r\n  padding: 16px 8px 16px 16px;\r\n  z-index: 10;\r\n  font-size: 15px;\r\n  border-radius: 0 12px 12px 0;\r\n  box-shadow: 2px 0 8px #eee;\r\n}\r\n.testcase-nav-title {\r\n  font-weight: bold;\r\n  margin-bottom: 12px;\r\n  color: #7c5fd4;\r\n}\r\n.testcase-nav ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n.testcase-nav li {\r\n  margin-bottom: 8px;\r\n}\r\n.testcase-nav a {\r\n  color: #5a4fcf;\r\n  text-decoration: none;\r\n  transition: color 0.2s;\r\n}\r\n.testcase-nav a:hover {\r\n  color: #e67e22;\r\n  text-decoration: underline;\r\n}\r\n.testcase-list {\r\n  margin-left: 200px;\r\n  flex: 1;\r\n  padding: 8px 24px;\r\n}\r\n.testcase-item {\r\n  margin-bottom: 36px;\r\n  padding: 18px 16px 16px 16px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 8px #f0f0f0;\r\n  border: 1px solid #f3f3f3;\r\n}\r\n.testcase-item h3 {\r\n  margin-top: 0;\r\n  color: #6b4fcf;\r\n}\r\n</style>\r\n \r\n<script lang = \"ts\">\r\nimport VarInput from '@/components/varbox/VarInput.vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport { VarTree, VarNode, validators, createTreeFromConfig, NodeStructure, VarTypeString } from '@/utils/VarTree'\r\nimport MyCustomInput from '@/test/varbox/MyCustomInput.vue'\r\nimport { testCases } from '@/test/varbox/VarInputCasesErp'\r\nimport { markRaw } from 'vue'\r\n\r\nexport default {\r\n  name: 'NewTestPage',\r\n\r\n  components: {\r\n    VarInput,\r\n    VarBox,\r\n    MyCustomInput\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      validators,\r\n      testcaseNames: Object.keys(testCases),\r\n      testCases,\r\n      testResults: {\r\n        simpleString: '',\r\n        simpleNumber: 0,\r\n        simpleDate: '',\r\n        simpleSelection: '',\r\n        threeLevelDict: {},\r\n        threeLevelList: [],\r\n        mixed: {},\r\n        readonly: {},\r\n        dynamicList: [],\r\n        tableTest: [],\r\n        configBased: {},\r\n        // 新增的测试数据\r\n        searchInput: '',\r\n        numberInput: 0,\r\n        fileInput: ''\r\n      } as {\r\n        [key: string]: any;\r\n        simpleString: string;\r\n        simpleNumber: number;\r\n        simpleDate: string;\r\n        simpleSelection: string;\r\n        threeLevelDict: object;\r\n        threeLevelList: any[];\r\n        mixed: object;\r\n        readonly: object;\r\n        dynamicList: any[];\r\n        tableTest: any[];\r\n        configBased: object;\r\n        // 新增字段的类型定义\r\n        searchInput: string;\r\n        numberInput: number;\r\n        fileInput: string;\r\n      },\r\n      // 配置对象示例\r\n      configObject: {\r\n        varType: 'dict',\r\n        name: 'employee',\r\n        children: [\r\n          {\r\n            varType: 'dict',\r\n            name: 'basicInfo',\r\n            children: [\r\n              { varType: 'string', name: 'name', defaultValue: '张三'},\r\n              { varType: 'number', name: 'age', defaultValue: 28 },\r\n              {\r\n                varType: 'selection', name: 'gender', defaultValue: '男', config: {\r\n                  options: ['男', '女', '其他']\r\n                }\r\n              },\r\n              { varType: 'date', name: 'birthDate', defaultValue: '1995-01-01' }\r\n            ]\r\n          },\r\n          {\r\n            varType: 'dict',\r\n            name: 'workInfo',\r\n            children: [\r\n              { varType: 'string', name: 'department', defaultValue: '技术部' },\r\n              { varType: 'string', name: 'position', defaultValue: '软件工程师' },\r\n              { varType: 'number', name: 'salary', defaultValue: 8000 },\r\n              {\r\n                varType: 'fixlist',\r\n                name: 'skills',\r\n                children: [\r\n                  { varType: 'string', defaultValue: 'JavaScript' },\r\n                  { varType: 'string', defaultValue: 'Vue.js' , readonly: true},\r\n                  { varType: 'string', defaultValue: 'Python' },\r\n                  { varType: 'number', defaultValue: 123 }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            varType: 'dynamiclist',\r\n            name: 'projects',\r\n            children: [\r\n              { varType: 'dict', name:\"lan\", children: [\r\n                { varType: 'string', name: 'projectName', defaultValue: '项目A' },\r\n                { varType: 'string', name: 'role', defaultValue: '开发', config: {customComponent: markRaw(MyCustomInput)} },\r\n                { varType: 'date', name: 'startDate', defaultValue: '2023-01-01' },\r\n                { varType: 'date', name: 'endDate', defaultValue: '2023-12-31' }\r\n              ]},\r\n              { varType: 'dict', name:\"lan\", children: [\r\n                { varType: 'string', name: 'projectName', defaultValue: '项目B' },\r\n                { varType: 'string', name: 'role', defaultValue: '测试' },\r\n                { varType: 'date', name: 'startDate', defaultValue: '2024-01-01' },\r\n                { varType: 'date', name: 'endDate', defaultValue: '2024-12-31' }\r\n              ]}\r\n            ],\r\n            config: {\r\n              childTemplate: {\r\n                varType: 'dict',\r\n                children: [\r\n                  { varType: 'string', name: 'projectName', defaultValue: '' },\r\n                  { varType: 'string', name: 'role', defaultValue: '' },\r\n                  { varType: 'date', name: 'startDate', defaultValue: '' },\r\n                  { varType: 'date', name: 'endDate', defaultValue: '' }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      } as NodeStructure\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    // 简单字符串树\r\n    simpleStringTree(): VarTree {\r\n      const config: NodeStructure = { varType: 'string', name: '用户名', defaultValue: '', nameDisplay:'用户名:', config: {\r\n        validators: [\r\n          {\r\n            creteria:(val: any) => {\r\n              const flag = val === '123'\r\n              return flag\r\n            },\r\n            message: \"值不是123\"\r\n          }\r\n        ],\r\n      }}\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 简单数字树\r\n    simpleNumberTree(): VarTree {\r\n      const config: NodeStructure = { varType: 'number', name: '年龄', defaultValue: 0 }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 简单日期树\r\n    simpleDateTree(): VarTree {\r\n      const config: NodeStructure = { varType: 'date', name: 'birthday', defaultValue: '' }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 简单选择树\r\n    simpleSelectionTree(): VarTree {\r\n      const config: NodeStructure = { varType: 'selection', name: '级别', defaultValue: '选项1' }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 三层字典嵌套\r\n    threeLevelDictTree(): VarTree {\r\n      const config: NodeStructure = {\r\n        varType: 'dict',\r\n        name: 'user',\r\n        children: [\r\n          {\r\n            varType: 'string',\r\n            name: 'id',\r\n            defaultValue: 'user_001'\r\n          },\r\n          {\r\n            varType: 'dict',\r\n            name: 'personal',\r\n            children: [\r\n              { varType: 'string', name: 'name', defaultValue: '张三' },\r\n              { varType: 'number', name: 'age', defaultValue: 25 },\r\n              {\r\n                varType: 'dict',\r\n                name: 'address',\r\n                children: [\r\n                  { varType: 'string', name: 'province', defaultValue: '广东省' },\r\n                  { varType: 'string', name: 'city', defaultValue: '深圳市' },\r\n                  { varType: 'string', name: 'district', defaultValue: '南山区' }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            varType: 'string',\r\n            name: 'email',\r\n            defaultValue: 'test@example.com'\r\n          }\r\n        ]\r\n      }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 三层列表嵌套\r\n    threeLevelListTree(): VarTree {\r\n      const config: NodeStructure = {\r\n        varType: 'fixlist',\r\n        name: 'matrix',\r\n        children: [\r\n          {\r\n            varType: 'fixlist',\r\n            children: [\r\n              {\r\n                varType: 'fixlist',\r\n                children: [\r\n                  { varType: 'string', defaultValue: 'item1' },\r\n                  { varType: 'string', defaultValue: 'item2' }\r\n                ]\r\n              },\r\n              {\r\n                varType: 'fixlist',\r\n                children: [\r\n                  { varType: 'string', defaultValue: 'item3' },\r\n                  { varType: 'string', defaultValue: 'item4' }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 混合字典和列表\r\n    mixedTree(): VarTree {\r\n      const config: NodeStructure = {\r\n        varType: 'dict',\r\n        name: 'student',\r\n        children: [\r\n          { varType: 'string', name: 'name', defaultValue: '李四' },\r\n          { varType: 'string', name: 'class', defaultValue: '三年级一班' },\r\n          { varType: 'date', name: 'birthday', defaultValue: '2004/03/14' },\r\n          { varType: 'dynamiclist', name: 'scores', \r\n            children: [\r\n              { varType: 'dict', name: 'math', children: [\r\n                { varType: 'string', name: 'subject', defaultValue: '数学' },\r\n                { varType: 'number', name: 'score', defaultValue: 95 }\r\n              ]},\r\n              { varType: 'dict', name: 'english', children: [\r\n                { varType: 'string', name: 'subject', defaultValue: '英语' },\r\n                { varType: 'number', name: 'score', defaultValue: 88 }\r\n              ]}\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 只读树\r\n    readonlyTree(): VarTree {\r\n      const config: NodeStructure = {\r\n        varType: 'dict',\r\n        name: 'readonly_data',\r\n        readonly: true,\r\n        children: [\r\n          { varType: 'string', name: '系统版本', defaultValue: 'v1.0.0', readonly: true },\r\n          { varType: 'string', name: '创建时间', defaultValue: '2024-01-01', readonly: true },\r\n          { varType: 'number', name: '用户数量', defaultValue: 1000, readonly: true }\r\n        ]\r\n      }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 动态列表树\r\n    dynamicListTree(): VarTree {\r\n      const config: NodeStructure = {\r\n        varType: 'dynamiclist',\r\n        nodeType: 'list',\r\n        name: 'students',\r\n        children: [{\r\n            varType: 'dict',\r\n            children: [\r\n              { varType: 'string', name: 'name', defaultValue: '学生姓名' },\r\n              { varType: 'number', name: 'score', defaultValue: 100 }\r\n            ]\r\n          }],\r\n        config: {\r\n          childTemplate: {\r\n            varType: 'dict',\r\n            children: [\r\n              { varType: 'string', name: 'name'},\r\n              { varType: 'number', name: 'score'}\r\n            ]\r\n          },\r\n          maxLength: 10\r\n        }\r\n      }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 表格显示测试树\r\n    tableTestTree(): VarTree {\r\n      const config: NodeStructure = {\r\n        varType: 'fixlist',\r\n        name: 'student_table',\r\n        children: [\r\n          {\r\n            varType: 'dict',\r\n            children: [\r\n              { varType: 'string', name: 'name', defaultValue: '张三' },\r\n              { varType: 'number', name: 'age', defaultValue: 20 },\r\n              { varType: 'string', name: 'major', defaultValue: '计算机科学' }\r\n            ]\r\n          },\r\n          {\r\n            varType: 'dict',\r\n            children: [\r\n              { varType: 'string', name: 'name', defaultValue: '李四' },\r\n              { varType: 'number', name: 'age', defaultValue: 21 },\r\n              { varType: 'string', name: 'major', defaultValue: '软件工程' }\r\n            ]\r\n          },\r\n          {\r\n            varType: 'dict',\r\n            children: [\r\n              { varType: 'string', name: 'name', defaultValue: '王五' },\r\n              { varType: 'number', name: 'age', defaultValue: 19 },\r\n              { varType: 'string', name: 'major', defaultValue: '数据科学' }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n      return createTreeFromConfig(config)\r\n    },\r\n\r\n    // 便捷构造方法测试树\r\n    configBasedTree(): VarTree {\r\n      return createTreeFromConfig((this as any).configObject as NodeStructure)\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    // 初始化所有复杂类型的数据预览\r\n    (this as any).initializeComplexData()\r\n  },\r\n\r\n  methods: {\r\n    // 初始化复杂数据预览\r\n    initializeComplexData() {\r\n      const complexKeys = ['threeLevelDict', 'threeLevelList', 'mixed', 'readonly', 'dynamicList', 'tableTest', 'configBased']\r\n      \r\n      complexKeys.forEach(key => {\r\n        const tree = (this as any).getTreeByKey(key)\r\n        if (tree && tree.root) {\r\n          (this as any).testResults[key] = tree.root.currentValue\r\n        }\r\n      })\r\n    },\r\n    handleUpdate(key: string, updateInfo: any) {\r\n      const tree = (this as any).getTreeByKey(key)\r\n      if (!tree || !tree.root) return\r\n      if (tree.root.isLeaf()) {\r\n        (this as any).testResults[key] = updateInfo.value\r\n      } else {\r\n        (this as any).testResults[key] = tree.root.currentValue\r\n      }\r\n    },\r\n\r\n    // 根据key获取对应的树\r\n    getTreeByKey(key: any): VarTree | undefined {\r\n      const treeMap = {\r\n        simpleString: (this as any).simpleStringTree,\r\n        simpleNumber: (this as any).simpleNumberTree,\r\n        simpleDate: (this as any).simpleDateTree,\r\n        simpleSelection: (this as any).simpleSelectionTree,\r\n        threeLevelDict: (this as any).threeLevelDictTree,\r\n        threeLevelList: (this as any).threeLevelListTree,\r\n        mixed: (this as any).mixedTree,\r\n        readonly: (this as any).readonlyTree,\r\n        dynamicList: (this as any).dynamicListTree,\r\n        tableTest: (this as any).tableTestTree,\r\n        configBased: (this as any).configBasedTree,\r\n        searchInput: (this as any).simpleStringTree,\r\n        numberInput: (this as any).simpleNumberTree,\r\n      }\r\n      return treeMap[key as keyof typeof treeMap] as VarTree | undefined\r\n    },\r\n\r\n    // 新增的额外组件功能方法\r\n    handleSearch(varProps: any) {\r\n      alert(`搜索内容: ${varProps.currentNode?.currentValue || '空'}`)\r\n    },\r\n\r\n    handleClear(varProps: any) {\r\n      if (varProps.currentNode) {\r\n        varProps.setNodeValue('')\r\n      }\r\n    },\r\n\r\n    increment(varProps: any) {\r\n      if (varProps.currentNode) {\r\n        const value = varProps.getNodeValue()\r\n        const newValue = Number(value) + 1\r\n        varProps.setNodeValue(newValue)\r\n      }\r\n    },\r\n\r\n    decrement(varProps: any) {\r\n      if (varProps.currentNode) {\r\n        const value = varProps.getNodeValue()\r\n        const newValue = Number(value) - 1\r\n        varProps.setNodeValue(newValue)\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.test-page {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #409EFF;\r\n  margin-bottom: 40px;\r\n  font-size: 28px;\r\n}\r\n\r\n.test-section {\r\n  margin-bottom: 50px;\r\n  border: 1px solid #EBEEF5;\r\n  border-radius: 8px;\r\n  padding: 25px;\r\n  background-color: #FAFAFA;\r\n}\r\n\r\nh2 {\r\n  color: #606266;\r\n  border-bottom: 2px solid #409EFF;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 25px;\r\n  font-size: 20px;\r\n}\r\n\r\n.test-item {\r\n  margin-bottom: 35px;\r\n  padding: 20px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 6px;\r\n  background-color: white;\r\n}\r\n\r\nh3 {\r\n  color: #909399;\r\n  margin-bottom: 15px;\r\n  font-size: 16px;\r\n  border-left: 4px solid #409EFF;\r\n  padding-left: 10px;\r\n}\r\n\r\npre {\r\n  max-height: 300px;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.result-preview {\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  background-color: #F5F7FA;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #409EFF;\r\n}\r\n\r\n.result-preview pre {\r\n  margin: 10px 0 0 0;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.global-preview {\r\n  margin-top: 40px;\r\n  padding: 25px;\r\n  background: #F0F9FF;\r\n  border-radius: 8px;\r\n  border: 1px solid #409EFF;\r\n}\r\n\r\n.global-preview h2 {\r\n  color: #409EFF;\r\n  border-bottom-color: #409EFF;\r\n}\r\n\r\n/* 新增的额外组件布局样式 */\r\n\r\n/* 搜索输入框 - 水平布局 */\r\n:deep(.search-input--wrapper) {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  padding: 8px;\r\n  background-color: #fff;\r\n}\r\n:deep(.search-input--wrapper .search-btn) {\r\n  scale: 1.2;\r\n  transform: translateX(0, 50px);\r\n}\r\n:deep(.search-input--main) {\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n\r\n:deep(.search-input--extra) {\r\n  display: flex;\r\n  gap: 4px;\r\n}\r\n\r\n:deep(.search-btn, .clear-btn) {\r\n  padding: 4px 8px;\r\n  border: 1px solid #409EFF;\r\n  border-radius: 4px;\r\n  background-color: #409EFF;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n:deep(.search-btn:hover, .clear-btn:hover) {\r\n  background-color: #337ECC;\r\n}\r\n\r\n:deep(.clear-btn) {\r\n  background-color: #F56C6C;\r\n  border-color: #F56C6C;\r\n}\r\n\r\n:deep(.clear-btn:hover) {\r\n  background-color: #DD6161;\r\n}\r\n\r\n/* 数值输入框 - 垂直布局 */\r\n:deep(.number-input--wrapper) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  border: 1px solid #E4E7ED;\r\n  border-radius: 6px;\r\n  padding: 12px;\r\n  background-color: #F9FAFC;\r\n  width: 40%;\r\n\r\n}\r\n\r\n:deep(.number-input--main) {\r\n  width: 100%;\r\n}\r\n\r\n:deep(.number-input--extra) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n:deep(.number-controls) {\r\n  display: flex;\r\n  gap: 8px;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n:deep(.number-controls button) {\r\n  padding: 6px 12px;\r\n  border: 1px solid #67C23A;\r\n  border-radius: 4px;\r\n  background-color: #67C23A;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n:deep(.number-controls button:hover) {\r\n  background-color: #5DAE34;\r\n}\r\n\r\n:deep(.number-info) {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  font-weight: 500;\r\n}\r\n\r\n:deep(.all1-name--wrapper .dict-leaf-section) {\r\n  /* grid-template-columns: repeat(auto-fit, minmax(30%, 1fr)) !important; */\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n}\r\n\r\n:deep(.all1-testList--wrapper .list-content) {\r\n  max-width: 1000px;\r\n  overflow-x: auto;\r\n}\r\n</style>","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { style: {\"border\":\"1px dashed #409EFF\",\"padding\":\"10px\"} }\nconst _hoisted_2 = [\"value\", \"readonly\"]\nconst _hoisted_3 = { style: {\"color\":\"#888\",\"font-size\":\"12px\"} }\n\nimport { computed } from 'vue'\r\nimport { VarTree, VarNode, validators, VarNodeConfig, VarNodeValue } from '@/utils/VarTree'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'MyCustomInput',\n  props: {\n    varTree: {},\n    nodePath: {},\n    readonly: { type: Boolean },\n    contentValidator: { type: [Function, null] },\n    config: {},\n    indentLevel: {},\n    showLabel: { type: Boolean },\n    wrapperStyle: {}\n  },\n  emits: [\"update\"],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props\r\n\r\nconst currentNode = computed<VarNode | null>(() => {\r\n  return props.varTree.findNodeByPath(props.nodePath)\r\n})\r\n\r\nconst currentValue = computed<VarNodeValue>(() => {\r\n  return currentNode.value?.currentValue || \"\"\r\n})\r\n\r\nfunction onInput(e: Event) {\r\n  const val = (e.target as HTMLInputElement).value\r\n  // 这里需要用 defineEmits\r\n  emit('update', val)\r\n}\r\n\r\nconst emit = __emit\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"div\", null, \"🌟 这是外部钩子自定义组件\", -1)),\n    _createElementVNode(\"input\", {\n      value: currentValue.value,\n      onInput: onInput,\n      readonly: _ctx.readonly,\n      style: {\"width\":\"200px\"}\n    }, null, 40, _hoisted_2),\n    _createElementVNode(\"div\", _hoisted_3, \"当前值：\" + _toDisplayString(currentValue.value), 1)\n  ]))\n}\n}\n\n})","<template>\r\n  <div style=\"border:1px dashed #409EFF; padding:10px;\">\r\n    <div>🌟 这是外部钩子自定义组件</div>\r\n    <input\r\n      :value=\"currentValue\"\r\n      @input=\"onInput\"\r\n      :readonly=\"readonly\"\r\n      style=\"width: 200px;\"\r\n    />\r\n    <div style=\"color:#888;font-size:12px;\">当前值：{{ currentValue }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { computed } from 'vue'\r\nimport { VarTree, VarNode, validators, VarNodeConfig, VarNodeValue } from '@/utils/VarTree'\r\n\r\nconst props = defineProps<{\r\n  varTree: VarTree\r\n  nodePath: string[]\r\n  readonly?: boolean\r\n  contentValidator?: ((val: any) => boolean) | null\r\n  config?: VarNodeConfig\r\n  indentLevel?: number\r\n  showLabel?: boolean\r\n  wrapperStyle?: Record<string, any>\r\n}>()\r\n\r\nconst currentNode = computed<VarNode | null>(() => {\r\n  return props.varTree.findNodeByPath(props.nodePath)\r\n})\r\n\r\nconst currentValue = computed<VarNodeValue>(() => {\r\n  return currentNode.value?.currentValue || \"\"\r\n})\r\n\r\nfunction onInput(e: Event) {\r\n  const val = (e.target as HTMLInputElement).value\r\n  // 这里需要用 defineEmits\r\n  emit('update', val)\r\n}\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update', val: any): void\r\n}>()\r\n</script>","import script from \"./MyCustomInput.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./MyCustomInput.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Component } from \"vue\";\r\nimport type { NodeStructure, VarNode, VarTree } from \"../../utils/VarTree\";\r\nimport { createTreeFromConfig, createNodeFromConfig, cns } from \"../../utils/VarTree\";\r\n\r\n// TestCase结构：键为描述，值为NodeTree对象\r\nexport type TestCase = Record<string, { tree: VarTree}>;\r\nimport MyCustomInput from '@/test/varbox/MyCustomInput.vue'\r\n\r\nfunction dummyComponent(): Component {\r\n  // 伪造一个外部组件钩子\r\n  return MyCustomInput;\r\n}\r\n\r\nexport const testCases: TestCase = {\r\n  \"客户\": {\r\n    tree: createTreeFromConfig(\r\n      // ...cns(\"dict\", \"dict\", \"cnsDict\", null, false, {}, [\r\n      //   { ...cns(\"number\", \"leaf\", \"age\", 3.14, false), nameDisplay: \"年龄\" },\r\n      //   cns(\"string\", \"leaf\", \"desc\", \"111\", false)\r\n      // ])\r\n      cns(\"dict\",\"dict\",\"all1\",null,false,{hideLabel:true},[\r\n        cns(\"dict\",\"dict\",\"name\",null,false,{},[\r\n          cns(\"string\",\"leaf\",\"title\",'Default Title',false,{},[],\"Title:\"),\r\n          cns(\"string\",\"leaf\",\"name\",null,false,{},[],\"Name:\"),\r\n        ],\"Name\"),\r\n        cns(\"dict\",\"dict\",\"searchTerms\",null,false,{},[\r\n          cns(\"string\",\"leaf\",\"searchTerm\",null,false,{},[],\"Search Term:\"),\r\n        ],\"Search Terms\"),\r\n        cns(\"dict\",\"dict\",\"address\",null,false,{},[\r\n          cns(\"string\",\"leaf\",\"street\",null,false,{},[],\"Street:\"),\r\n          cns(\"string\",\"leaf\",\"postalCode\",null,false,{},[],\"Postal Code:\"),\r\n          cns(\"string\",\"leaf\",\"city\",null,false,{},[],\"City:\"),\r\n        ],\"Address\"),\r\n        cns(\"dynamiclist\",\"list\",\"testList\",null,false,{\r\n          childTemplate:createNodeFromConfig(cns(\"dict\",\"dict\",\"template\",null,false,{},[\r\n            cns(\"string\",\"leaf\",\"searchTerm\",null,false,{},[],\"Search Term\"),\r\n            cns(\"string\",\"leaf\",\"city\",null,false,{},[],\"City\"),\r\n            cns(\"string\",\"leaf\",\"postalCode\",null,false,{},[],\"Postal Code\"),\r\n            cns(\"string\",\"leaf\",\"searchTerm1\",null,false,{},[],\"Search Term\"),\r\n            cns(\"string\",\"leaf\",\"city1\",null,false,{},[],\"City\"),\r\n            cns(\"string\",\"leaf\",\"postalCode1\",null,false,{},[],\"Postal Code\"),\r\n            cns(\"string\",\"leaf\",\"searchTerm2\",null,false,{},[],\"Search Term\"),\r\n            cns(\"string\",\"leaf\",\"city2\",null,false,{},[],\"City\"),\r\n            cns(\"string\",\"leaf\",\"postalCode2\",null,false,{},[],\"Postal Code\"),\r\n            cns(\"string\",\"leaf\",\"searchTerm3\",null,false,{},[],\"Search Term\"),\r\n            cns(\"string\",\"leaf\",\"city3\",null,false,{},[],\"City\"),\r\n            cns(\"string\",\"leaf\",\"postalCode3\",null,false,{},[],\"Postal Code\"),\r\n          ]))\r\n        },[],\"表格渲染组件\")\r\n      ])\r\n    ),\r\n  },\r\n  \"客户2\": {\r\n    tree: createTreeFromConfig(\r\n      // ...cns(\"dict\", \"dict\", \"cnsDict\", null, false, {}, [\r\n      //   { ...cns(\"number\", \"leaf\", \"age\", 3.14, false), nameDisplay: \"年龄\" },\r\n      //   cns(\"string\", \"leaf\", \"desc\", \"111\", false)\r\n      // ])\r\n      cns(\"dict\",\"dict\",\"all\",null,false,{},[\r\n        cns(\"dict\",\"dict\",\"name\",null,false,{},[\r\n          cns(\"string\",\"leaf\",\"title\",null,false,{},[],\"Title:\"),\r\n          cns(\"string\",\"leaf\",\"name\",null,false,{},[],\"Name:\"),\r\n          cns(\"date\",\"leaf\",\"birthday\",null,false,{},[],\"Birthday:\")\r\n        ],\"Name\"),\r\n        cns(\"dict\",\"dict\",\"searchTerms\",null,false,{},[\r\n          cns(\"string\",\"leaf\",\"searchTerm\",null,false,{},[],\"Search Term:\"),\r\n        ],\"Search Terms\"),\r\n        cns(\"dict\",\"dict\",\"address\",null,false,{},[\r\n          cns(\"string\",\"leaf\",\"street\",null,false,{},[],\"Street:\"),\r\n          cns(\"string\",\"leaf\",\"postalCode\",null,false,{},[],\"Postal Code:\"),\r\n          cns(\"string\",\"leaf\",\"city\",null,false,{},[],\"City:\"),\r\n        ],\"Address\"),\r\n      ])\r\n    ),\r\n  },\r\n  \"cns-嵌套字典\": {\r\n    tree: createTreeFromConfig({\r\n      ...cns(\"dict\", \"dict\", \"cnsDict\", null, false, {}, [\r\n        { ...cns(\"number\", \"leaf\", \"age\", 3.14, false), nameDisplay: \"年龄\" },\r\n        cns(\"string\", \"leaf\", \"desc\", \"111\", false)\r\n      ])\r\n    }),\r\n  },\r\n  \"客户查询\": {\r\n    tree: createTreeFromConfig(\r\n      cns(\"string\", \"leaf\", \"customer_id\", null, false, {\r\n        validators: [\r\n          {\r\n            creteria: (val: any) => typeof val === 'string' && /^\\d{6}$/.test(val),\r\n            message: \"客户ID必须是六位数字\"\r\n          }\r\n        ]\r\n      })\r\n    ),\r\n  },\r\n  \"带默认值的列表\": {\r\n    tree: createTreeFromConfig(\r\n      cns('dynamiclist', 'list', 'searchResults', [], true, {}, [\r\n        cns('dict', 'dict', 'result1', {}, false, {}, [\r\n          cns('string', 'leaf', 'id', '001', true),\r\n          cns('string', 'leaf', 'name', '示例结果1', true),\r\n          cns('string', 'leaf', 'description', '这是一个搜索结果示例', true)\r\n        ]),\r\n        cns('dict', 'dict', 'result2', {}, false, {}, [\r\n          cns('string', 'leaf', 'id', '002', true),\r\n          cns('string', 'leaf', 'name', '示例结果2', true),\r\n          cns('string', 'leaf', 'description', '这是另一个搜索结果示例', true)\r\n        ])\r\n      ], '搜索结果')\r\n    )\r\n  }\r\n};","import { render } from \"./TestPageErp.vue?vue&type=template&id=124cd054&scoped=true&ts=true\"\nimport script from \"./TestPageErp.vue?vue&type=script&lang=ts\"\nexport * from \"./TestPageErp.vue?vue&type=script&lang=ts\"\n\nimport \"./TestPageErp.vue?vue&type=style&index=0&id=124cd054&scoped=true&lang=css\"\nimport \"./TestPageErp.vue?vue&type=style&index=1&id=124cd054&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-124cd054\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"search-test-page\" }\nconst _hoisted_2 = { class: \"test-section\" }\nconst _hoisted_3 = { class: \"test-item\" }\nconst _hoisted_4 = { class: \"test-item\" }\nconst _hoisted_5 = { class: \"test-item\" }\nconst _hoisted_6 = { class: \"test-item\" }\nconst _hoisted_7 = { class: \"custom-handler-log\" }\n\nimport { ref } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport { VarTree, createTreeFromConfig, cns, SearchMethod, SearchResultHandler } from '@/utils/VarTree'\r\n\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'SearchModalTest',\n  setup(__props) {\n\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\n\r\n// 自定义处理日志\r\nconst customHandlerLogs = ref<string[]>([])\r\n\r\n// 自定义搜索结果处理函数\r\nconst customSearchResultHandler: SearchResultHandler = (data, currentNode) => {\r\n  const timestamp = new Date().toLocaleTimeString()\r\n  customHandlerLogs.value.push(`[${timestamp}] 搜索方法: ${data.method.name}`)\r\n  customHandlerLogs.value.push(`[${timestamp}] 参数: ${JSON.stringify(data.params)}`)\r\n  customHandlerLogs.value.push(`[${timestamp}] 选中结果数量: ${data.selectedResults.length}`)\r\n\r\n  if (data.firstSelectedResult) {\r\n    customHandlerLogs.value.push(`[${timestamp}] 第一个选中结果: ${JSON.stringify(data.firstSelectedResult)}`)\r\n\r\n    // 自定义逻辑：将结果的 name 字段设置为当前节点的值\r\n    if (data.firstSelectedResult.name) {\r\n      currentNode.currentValue = `自定义处理: ${data.firstSelectedResult.name}`\r\n      customHandlerLogs.value.push(`[${timestamp}] 设置节点值为: ${currentNode.currentValue}`)\r\n    }\r\n  }\r\n\r\n  // 限制日志数量\r\n  if (customHandlerLogs.value.length > 10) {\r\n    customHandlerLogs.value = customHandlerLogs.value.slice(-10)\r\n  }\r\n}\r\n\r\n// 创建搜索方法配置\r\nconst createSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '简单搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/mock/simple'\r\n  },\r\n  {\r\n    name: '高级搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'searchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'keyword', '', false, {}, [], '关键词'),\r\n        cns('string', 'leaf', 'category', '', false, {}, [], '分类'),\r\n        cns('date', 'leaf', 'startDate', null, false, {}, [], '开始日期'),\r\n        cns('date', 'leaf', 'endDate', null, false, {}, [], '结束日期'),\r\n        cns('boolean', 'leaf', 'strict', false, false, {}, [], '完全匹配'),\r\n      ], '搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/advanced'\r\n  },\r\n  {\r\n    name: '业务伙伴搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'bpSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'bpId', '', false, {}, [], '业务伙伴ID'),\r\n        cns('string', 'leaf', 'companyName', '', false, {}, [], '公司名称'),\r\n        cns('selection', 'leaf', 'bpType', '', false, {\r\n          options: ['客户', '供应商', '合作伙伴']\r\n        }, [], '业务伙伴类型')\r\n      ], '业务伙伴搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/business-partner'\r\n  },\r\n  {\r\n    name: '产品搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'productSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'productCode', '', false, {}, [], '产品编码'),\r\n        cns('string', 'leaf', 'productName', '', false, {}, [], '产品名称'),\r\n        cns('number', 'leaf', 'minPrice', null, false, {}, [], '最低价格'),\r\n        cns('number', 'leaf', 'maxPrice', null, false, {}, [], '最高价格')\r\n      ], '产品搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/product'\r\n  }\r\n]\r\n\r\nconst createMultiSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '快速搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/mock/simple'\r\n  },\r\n  {\r\n    name: '精确搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'exactParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'id', '', false, {}, [], 'ID'),\r\n        cns('string', 'leaf', 'code', '', false, {}, [], '编码')\r\n      ], '精确搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/business-partner'\r\n  },\r\n  {\r\n    name: '模糊搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'fuzzyParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'text', '', false, {}, [], '搜索文本'),\r\n        cns('number', 'leaf', 'similarity', 0.8, false, {}, [], '相似度阈值')\r\n      ], '模糊搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/product'\r\n  },\r\n  {\r\n    name: '业务伙伴高级搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'bpAdvancedParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'bpId', '', false, {}, [], '业务伙伴ID'),\r\n        cns('string', 'leaf', 'companyName', '', false, {}, [], '公司名称'),\r\n        cns('selection', 'leaf', 'bpType', '', false, {\r\n          options: ['客户', '供应商', '合作伙伴']\r\n        }, [], '业务伙伴类型'),\r\n        cns('string', 'leaf', 'contactPerson', '', false, {}, [], '联系人'),\r\n        cns('selection', 'leaf', 'status', '', false, {\r\n          options: ['活跃', '暂停', '停用']\r\n        }, [], '状态')\r\n      ], '业务伙伴高级搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/business-partner'\r\n  },\r\n  {\r\n    name: '产品高级搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'productAdvancedParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'productCode', '', false, {}, [], '产品编码'),\r\n        cns('string', 'leaf', 'productName', '', false, {}, [], '产品名称'),\r\n        cns('selection', 'leaf', 'category', '', false, {\r\n          options: ['电子产品', '可穿戴设备', '音频设备', '办公设备']\r\n        }, [], '产品分类'),\r\n        cns('number', 'leaf', 'minPrice', null, false, {}, [], '最低价格'),\r\n        cns('number', 'leaf', 'maxPrice', null, false, {}, [], '最高价格'),\r\n        cns('number', 'leaf', 'minStock', null, false, {}, [], '最低库存'),\r\n        cns('selection', 'leaf', 'status', '', false, {\r\n          options: ['在售', '缺货', '停产']\r\n        }, [], '产品状态')\r\n      ], '产品高级搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/product'\r\n  }\r\n]\r\n\r\n// 测试1: 带搜索功能的VarTree\r\nconst testTreeWithSearch = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'searchField', '', false, {\r\n      searchMethods: createSearchMethods()\r\n    }, [], '带搜索的字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 测试2: 不带搜索功能的VarTree\r\nconst testTreeWithoutSearch = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'normalField', '', false, {}, [], '普通字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 测试3: 多种搜索方式的VarTree\r\nconst testTreeMultiSearch = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'multiSearchField', '', false, {\r\n      searchMethods: createMultiSearchMethods()\r\n    }, [], '多搜索方式字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 测试4: 自定义搜索结果处理的VarTree\r\nconst testTreeCustomHandler = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'customHandlerField', '', false, {\r\n      searchMethods: createSearchMethods(),\r\n      customSearchResultHandler: customSearchResultHandler\r\n    }, [], '自定义处理字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 处理VarBox更新\r\nfunction handleUpdate(payload: any) {\r\n  console.log('VarBox更新:', payload)\r\n  forceUpdate()\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[10] || (_cache[10] = _createElementVNode(\"h1\", null, \"SearchModal 测试页面\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"测试搜索功能\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"1. 带搜索功能的输入框\", -1)),\n        _createVNode(VarBox, {\n          tree: _unref(testTreeWithSearch),\n          onUpdate: handleUpdate\n        }, null, 8, [\"tree\"]),\n        (_openBlock(), _createElementBlock(\"div\", {\n          class: \"result-preview\",\n          key: forceUpdateKey.value\n        }, [\n          _cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"当前值：\", -1)),\n          _createTextVNode(_toDisplayString(JSON.stringify(_unref(testTreeWithSearch).root?.currentValue)), 1)\n        ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_4, [\n        _cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"2. 不带搜索功能的输入框（无searchMethods配置）\", -1)),\n        _createVNode(VarBox, {\n          tree: _unref(testTreeWithoutSearch),\n          onUpdate: handleUpdate\n        }, null, 8, [\"tree\"]),\n        (_openBlock(), _createElementBlock(\"div\", {\n          class: \"result-preview\",\n          key: forceUpdateKey.value\n        }, [\n          _cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"当前值：\", -1)),\n          _createTextVNode(_toDisplayString(JSON.stringify(_unref(testTreeWithoutSearch).root?.currentValue)), 1)\n        ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"3. 多种搜索方式的输入框\", -1)),\n        _createVNode(VarBox, {\n          tree: _unref(testTreeMultiSearch),\n          onUpdate: handleUpdate\n        }, null, 8, [\"tree\"]),\n        (_openBlock(), _createElementBlock(\"div\", {\n          class: \"result-preview\",\n          key: forceUpdateKey.value\n        }, [\n          _cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"当前值：\", -1)),\n          _createTextVNode(_toDisplayString(JSON.stringify(_unref(testTreeMultiSearch).root?.currentValue)), 1)\n        ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"4. 自定义搜索结果处理的输入框\", -1)),\n        _createVNode(VarBox, {\n          tree: _unref(testTreeCustomHandler),\n          onUpdate: handleUpdate\n        }, null, 8, [\"tree\"]),\n        (_openBlock(), _createElementBlock(\"div\", {\n          class: \"result-preview\",\n          key: forceUpdateKey.value\n        }, [\n          _cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"当前值：\", -1)),\n          _createTextVNode(_toDisplayString(JSON.stringify(_unref(testTreeCustomHandler).root?.currentValue)), 1)\n        ])),\n        _createElementVNode(\"div\", _hoisted_7, [\n          _cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"自定义处理日志：\", -1)),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(customHandlerLogs.value, (log, index) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: index,\n              class: \"log-item\"\n            }, _toDisplayString(log), 1))\n          }), 128))\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"search-test-page\">\r\n    <h1>SearchModal 测试页面</h1>\r\n    \r\n    <div class=\"test-section\">\r\n      <h2>测试搜索功能</h2>\r\n      \r\n      <!-- 测试1: 带搜索功能的输入框 -->\r\n      <div class=\"test-item\">\r\n        <h3>1. 带搜索功能的输入框</h3>\r\n        <VarBox\r\n          :tree=\"testTreeWithSearch\"\r\n          @update=\"handleUpdate\"\r\n        />\r\n        <div class=\"result-preview\" :key=\"forceUpdateKey\">\r\n          <strong>当前值：</strong>{{ JSON.stringify(testTreeWithSearch.root?.currentValue) }}\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 测试2: 不带搜索功能的输入框 -->\r\n      <div class=\"test-item\">\r\n        <h3>2. 不带搜索功能的输入框（无searchMethods配置）</h3>\r\n        <VarBox\r\n          :tree=\"testTreeWithoutSearch\"\r\n          @update=\"handleUpdate\"\r\n        />\r\n        <div class=\"result-preview\" :key=\"forceUpdateKey\">\r\n          <strong>当前值：</strong>{{ JSON.stringify(testTreeWithoutSearch.root?.currentValue) }}\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 测试3: 多种搜索方式 -->\r\n      <div class=\"test-item\">\r\n        <h3>3. 多种搜索方式的输入框</h3>\r\n        <VarBox\r\n          :tree=\"testTreeMultiSearch\"\r\n          @update=\"handleUpdate\"\r\n        />\r\n        <div class=\"result-preview\" :key=\"forceUpdateKey\">\r\n          <strong>当前值：</strong>{{ JSON.stringify(testTreeMultiSearch.root?.currentValue) }}\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 测试4: 自定义搜索结果处理 -->\r\n      <div class=\"test-item\">\r\n        <h3>4. 自定义搜索结果处理的输入框</h3>\r\n        <VarBox\r\n          :tree=\"testTreeCustomHandler\"\r\n          @update=\"handleUpdate\"\r\n        />\r\n        <div class=\"result-preview\" :key=\"forceUpdateKey\">\r\n          <strong>当前值：</strong>{{ JSON.stringify(testTreeCustomHandler.root?.currentValue) }}\r\n        </div>\r\n        <div class=\"custom-handler-log\">\r\n          <strong>自定义处理日志：</strong>\r\n          <div v-for=\"(log, index) in customHandlerLogs\" :key=\"index\" class=\"log-item\">\r\n            {{ log }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport { VarTree, createTreeFromConfig, cns, SearchMethod, SearchResultHandler } from '@/utils/VarTree'\r\n\r\n\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\n\r\n// 自定义处理日志\r\nconst customHandlerLogs = ref<string[]>([])\r\n\r\n// 自定义搜索结果处理函数\r\nconst customSearchResultHandler: SearchResultHandler = (data, currentNode) => {\r\n  const timestamp = new Date().toLocaleTimeString()\r\n  customHandlerLogs.value.push(`[${timestamp}] 搜索方法: ${data.method.name}`)\r\n  customHandlerLogs.value.push(`[${timestamp}] 参数: ${JSON.stringify(data.params)}`)\r\n  customHandlerLogs.value.push(`[${timestamp}] 选中结果数量: ${data.selectedResults.length}`)\r\n\r\n  if (data.firstSelectedResult) {\r\n    customHandlerLogs.value.push(`[${timestamp}] 第一个选中结果: ${JSON.stringify(data.firstSelectedResult)}`)\r\n\r\n    // 自定义逻辑：将结果的 name 字段设置为当前节点的值\r\n    if (data.firstSelectedResult.name) {\r\n      currentNode.currentValue = `自定义处理: ${data.firstSelectedResult.name}`\r\n      customHandlerLogs.value.push(`[${timestamp}] 设置节点值为: ${currentNode.currentValue}`)\r\n    }\r\n  }\r\n\r\n  // 限制日志数量\r\n  if (customHandlerLogs.value.length > 10) {\r\n    customHandlerLogs.value = customHandlerLogs.value.slice(-10)\r\n  }\r\n}\r\n\r\n// 创建搜索方法配置\r\nconst createSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '简单搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/mock/simple'\r\n  },\r\n  {\r\n    name: '高级搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'searchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'keyword', '', false, {}, [], '关键词'),\r\n        cns('string', 'leaf', 'category', '', false, {}, [], '分类'),\r\n        cns('date', 'leaf', 'startDate', null, false, {}, [], '开始日期'),\r\n        cns('date', 'leaf', 'endDate', null, false, {}, [], '结束日期'),\r\n        cns('boolean', 'leaf', 'strict', false, false, {}, [], '完全匹配'),\r\n      ], '搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/advanced'\r\n  },\r\n  {\r\n    name: '业务伙伴搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'bpSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'bpId', '', false, {}, [], '业务伙伴ID'),\r\n        cns('string', 'leaf', 'companyName', '', false, {}, [], '公司名称'),\r\n        cns('selection', 'leaf', 'bpType', '', false, {\r\n          options: ['客户', '供应商', '合作伙伴']\r\n        }, [], '业务伙伴类型')\r\n      ], '业务伙伴搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/business-partner'\r\n  },\r\n  {\r\n    name: '产品搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'productSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'productCode', '', false, {}, [], '产品编码'),\r\n        cns('string', 'leaf', 'productName', '', false, {}, [], '产品名称'),\r\n        cns('number', 'leaf', 'minPrice', null, false, {}, [], '最低价格'),\r\n        cns('number', 'leaf', 'maxPrice', null, false, {}, [], '最高价格')\r\n      ], '产品搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/product'\r\n  }\r\n]\r\n\r\nconst createMultiSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '快速搜索',\r\n    paramTree: null,\r\n    serviceUrl: '/api/search/mock/simple'\r\n  },\r\n  {\r\n    name: '精确搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'exactParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'id', '', false, {}, [], 'ID'),\r\n        cns('string', 'leaf', 'code', '', false, {}, [], '编码')\r\n      ], '精确搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/business-partner'\r\n  },\r\n  {\r\n    name: '模糊搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'fuzzyParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'text', '', false, {}, [], '搜索文本'),\r\n        cns('number', 'leaf', 'similarity', 0.8, false, {}, [], '相似度阈值')\r\n      ], '模糊搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/product'\r\n  },\r\n  {\r\n    name: '业务伙伴高级搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'bpAdvancedParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'bpId', '', false, {}, [], '业务伙伴ID'),\r\n        cns('string', 'leaf', 'companyName', '', false, {}, [], '公司名称'),\r\n        cns('selection', 'leaf', 'bpType', '', false, {\r\n          options: ['客户', '供应商', '合作伙伴']\r\n        }, [], '业务伙伴类型'),\r\n        cns('string', 'leaf', 'contactPerson', '', false, {}, [], '联系人'),\r\n        cns('selection', 'leaf', 'status', '', false, {\r\n          options: ['活跃', '暂停', '停用']\r\n        }, [], '状态')\r\n      ], '业务伙伴高级搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/business-partner'\r\n  },\r\n  {\r\n    name: '产品高级搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'productAdvancedParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'productCode', '', false, {}, [], '产品编码'),\r\n        cns('string', 'leaf', 'productName', '', false, {}, [], '产品名称'),\r\n        cns('selection', 'leaf', 'category', '', false, {\r\n          options: ['电子产品', '可穿戴设备', '音频设备', '办公设备']\r\n        }, [], '产品分类'),\r\n        cns('number', 'leaf', 'minPrice', null, false, {}, [], '最低价格'),\r\n        cns('number', 'leaf', 'maxPrice', null, false, {}, [], '最高价格'),\r\n        cns('number', 'leaf', 'minStock', null, false, {}, [], '最低库存'),\r\n        cns('selection', 'leaf', 'status', '', false, {\r\n          options: ['在售', '缺货', '停产']\r\n        }, [], '产品状态')\r\n      ], '产品高级搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/product'\r\n  }\r\n]\r\n\r\n// 测试1: 带搜索功能的VarTree\r\nconst testTreeWithSearch = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'searchField', '', false, {\r\n      searchMethods: createSearchMethods()\r\n    }, [], '带搜索的字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 测试2: 不带搜索功能的VarTree\r\nconst testTreeWithoutSearch = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'normalField', '', false, {}, [], '普通字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 测试3: 多种搜索方式的VarTree\r\nconst testTreeMultiSearch = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'multiSearchField', '', false, {\r\n      searchMethods: createMultiSearchMethods()\r\n    }, [], '多搜索方式字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 测试4: 自定义搜索结果处理的VarTree\r\nconst testTreeCustomHandler = createTreeFromConfig(\r\n  cns('dict', 'dict', 'testData', {}, false, {}, [\r\n    cns('string', 'leaf', 'customHandlerField', '', false, {\r\n      searchMethods: createSearchMethods(),\r\n      customSearchResultHandler: customSearchResultHandler\r\n    }, [], '自定义处理字段')\r\n  ], '测试数据')\r\n)\r\n\r\n// 处理VarBox更新\r\nfunction handleUpdate(payload: any) {\r\n  console.log('VarBox更新:', payload)\r\n  forceUpdate()\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search-test-page {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.test-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.test-item {\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.test-item h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n}\r\n\r\n.result-preview {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n  font-size: 12px;\r\n}\r\n\r\nh1 {\r\n  color: var(--theme-color-dark);\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\nh2 {\r\n  color: var(--theme-color-light);\r\n  border-bottom: 2px solid var(--theme-color-light);\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.custom-handler-log {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n  border-left: 4px solid var(--theme-color-dark);\r\n}\r\n\r\n.log-item {\r\n  font-family: monospace;\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin: 2px 0;\r\n  padding: 2px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n</style>","import script from \"./SearchModalTest.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./SearchModalTest.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./SearchModalTest.vue?vue&type=style&index=0&id=7009c770&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7009c770\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"page-content\">\r\n    <h1>AppContent组件测试</h1>\r\n    \r\n    <!-- 基本功能测试 -->\r\n    <div class=\"test-section\">\r\n      <h2>基本Stage管理功能测试</h2>\r\n      <div class=\"test-container\">\r\n        <AppContent\r\n          ref=\"appContentRef\"\r\n          :stages=\"['参数输入', '数据处理', '结果确认']\"\r\n          :footer-config=\"[\r\n            { nextText: '开始处理' },\r\n            {},\r\n            { prevText: '返回修改', showNext: false }\r\n          ]\"\r\n          :before-next=\"beforeNextHook\"\r\n          :before-prev=\"beforePrevHook\"\r\n          @stage-change=\"onStageChange\"\r\n          @next=\"onNext\"\r\n          @prev=\"onPrev\"\r\n        >\r\n          <template #stage-参数输入=\"{ currentStage, stageName, isFirstStage, isLastStage }\">\r\n            <div class=\"stage-content\">\r\n              <h3>{{ stageName }} (Stage {{ currentStage + 1 }})</h3>\r\n              <p>这里是参数输入界面</p>\r\n              <div class=\"form-group\">\r\n                <label>测试参数:</label>\r\n                <input \r\n                  v-model=\"testInput\" \r\n                  placeholder=\"请输入测试参数\" \r\n                  class=\"form-input\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>处理类型:</label>\r\n                <select v-model=\"processType\" class=\"form-select\">\r\n                  <option value=\"fast\">快速处理</option>\r\n                  <option value=\"normal\">标准处理</option>\r\n                  <option value=\"detailed\">详细处理</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"status-info\">\r\n                <p>当前输入: {{ testInput }}</p>\r\n                <p>处理类型: {{ processType }}</p>\r\n                <p>是否第一步: {{ isFirstStage }}</p>\r\n                <p>是否最后一步: {{ isLastStage }}</p>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          \r\n          <template #stage-数据处理=\"{ currentStage, stageName }\">\r\n            <div class=\"stage-content\">\r\n              <h3>{{ stageName }} (Stage {{ currentStage + 1 }})</h3>\r\n              <p>正在处理数据...</p>\r\n              <div class=\"processing-display\">\r\n                <div class=\"progress-bar\">\r\n                  <div class=\"progress-fill\" :style=\"{ width: processingProgress + '%' }\"></div>\r\n                </div>\r\n                <p>处理进度: {{ processingProgress }}%</p>\r\n                <div class=\"processing-details\">\r\n                  <p>输入参数: {{ testInput }}</p>\r\n                  <p>处理类型: {{ processType }}</p>\r\n                  <p>处理状态: {{ processingStatus }}</p>\r\n                  <p>预计完成时间: {{ estimatedTime }}秒</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          \r\n          <template #stage-结果确认=\"{ currentStage, stageName }\">\r\n            <div class=\"stage-content\">\r\n              <h3>{{ stageName }} (Stage {{ currentStage + 1 }})</h3>\r\n              <p>处理完成，请确认结果</p>\r\n              <div class=\"result-display\">\r\n                <div class=\"result-summary\">\r\n                  <h4>处理摘要</h4>\r\n                  <p>输入参数: {{ testInput }}</p>\r\n                  <p>处理类型: {{ processType }}</p>\r\n                  <p>处理时长: {{ actualProcessTime }}秒</p>\r\n                </div>\r\n                <div class=\"result-data\">\r\n                  <h4>处理结果</h4>\r\n                  <pre>{{ JSON.stringify(processResult, null, 2) }}</pre>\r\n                </div>\r\n                <div class=\"result-actions\">\r\n                  <label>\r\n                    <input type=\"checkbox\" v-model=\"resultConfirmed\" />\r\n                    我确认以上结果无误\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          \r\n          <template #footer-content-left=\"{ currentStage, totalStages }\">\r\n            <div class=\"footer-info\">\r\n              <span class=\"stage-indicator\">\r\n                步骤 {{ currentStage + 1 }} / {{ totalStages }}\r\n              </span>\r\n              <span class=\"stage-dots\">\r\n                <span \r\n                  v-for=\"(stage, index) in stages\" \r\n                  :key=\"index\"\r\n                  class=\"stage-dot\"\r\n                  :class=\"{ \r\n                    active: index === currentStage,\r\n                    completed: index < currentStage \r\n                  }\"\r\n                ></span>\r\n              </span>\r\n            </div>\r\n          </template>\r\n        </AppContent>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 控制面板 -->\r\n    <div class=\"control-panel\">\r\n      <h3>控制面板</h3>\r\n      <div class=\"control-buttons\">\r\n        <button @click=\"resetToFirst\" class=\"control-btn\">重置到第一步</button>\r\n        <button @click=\"goToStage(1)\" class=\"control-btn\">跳转到第二步</button>\r\n        <button @click=\"goToStage(2)\" class=\"control-btn\">跳转到第三步</button>\r\n        <button @click=\"toggleNavButtons\" class=\"control-btn\">\r\n          {{ showNavButtons ? '隐藏' : '显示' }}导航按钮\r\n        </button>\r\n        <button @click=\"simulateProcessing\" class=\"control-btn\">模拟处理</button>\r\n      </div>\r\n      \r\n      <div class=\"status-panel\">\r\n        <h4>组件状态</h4>\r\n        <div class=\"status-grid\">\r\n          <div class=\"status-item\">\r\n            <label>当前Stage:</label>\r\n            <span>{{ currentAppStage }}</span>\r\n          </div>\r\n          <div class=\"status-item\">\r\n            <label>导航按钮:</label>\r\n            <span>{{ showNavButtons ? '显示' : '隐藏' }}</span>\r\n          </div>\r\n          <div class=\"status-item\">\r\n            <label>最后操作:</label>\r\n            <span>{{ lastAction }}</span>\r\n          </div>\r\n          <div class=\"status-item\">\r\n            <label>钩子验证:</label>\r\n            <span>{{ hookValidation ? '启用' : '禁用' }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"hook-controls\">\r\n          <label>\r\n            <input type=\"checkbox\" v-model=\"hookValidation\" />\r\n            启用钩子验证（需要确认才能切换）\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 事件日志 -->\r\n    <div class=\"event-log\">\r\n      <h3>事件日志</h3>\r\n      <div class=\"log-container\">\r\n        <div \r\n          v-for=\"(log, index) in eventLogs\" \r\n          :key=\"index\"\r\n          class=\"log-entry\"\r\n          :class=\"log.type\"\r\n        >\r\n          <span class=\"log-time\">{{ log.time }}</span>\r\n          <span class=\"log-message\">{{ log.message }}</span>\r\n        </div>\r\n      </div>\r\n      <button @click=\"clearLogs\" class=\"clear-logs-btn\">清空日志</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\n\r\nexport default {\r\n  name: 'AppContentTest',\r\n  components: {\r\n    AppContent\r\n  },\r\n  data() {\r\n    return {\r\n      // 测试数据\r\n      testInput: '',\r\n      processType: 'normal',\r\n      resultConfirmed: false,\r\n      \r\n      // 处理状态\r\n      processingProgress: 0,\r\n      processingStatus: '等待开始',\r\n      estimatedTime: 0,\r\n      actualProcessTime: 0,\r\n      processResult: null,\r\n      \r\n      // 组件状态\r\n      currentAppStage: 0,\r\n      showNavButtons: true,\r\n      lastAction: '无',\r\n      hookValidation: false,\r\n      \r\n      // 事件日志\r\n      eventLogs: [],\r\n      \r\n      // Stage配置\r\n      stages: ['参数输入', '数据处理', '结果确认']\r\n    }\r\n  },\r\n  methods: {\r\n    // 钩子函数\r\n    async beforeNextHook(currentStage, targetStage) {\r\n      this.addLog('info', `执行beforeNext钩子: ${currentStage} -> ${targetStage}`)\r\n      \r\n      if (!this.hookValidation) {\r\n        return true\r\n      }\r\n      \r\n      // 根据当前stage进行验证\r\n      if (currentStage === 0) {\r\n        // 参数输入验证\r\n        if (!this.testInput.trim()) {\r\n          this.addLog('error', '参数输入验证失败: 请输入测试参数')\r\n          alert('请输入测试参数')\r\n          return false\r\n        }\r\n      } else if (currentStage === 1) {\r\n        // 数据处理验证\r\n        if (this.processingProgress < 100) {\r\n          this.addLog('error', '数据处理验证失败: 处理未完成')\r\n          alert('请等待数据处理完成')\r\n          return false\r\n        }\r\n      }\r\n      \r\n      return confirm(`确认从 \"${this.stages[currentStage]}\" 进入下一步 \"${this.stages[targetStage]}\" 吗？`)\r\n    },\r\n    \r\n    async beforePrevHook(currentStage, targetStage) {\r\n      this.addLog('info', `执行beforePrev钩子: ${currentStage} -> ${targetStage}`)\r\n      \r\n      if (!this.hookValidation) {\r\n        return true\r\n      }\r\n      \r\n      return confirm(`确认从 \"${this.stages[currentStage]}\" 返回到 \"${this.stages[targetStage]}\" 吗？`)\r\n    },\r\n    \r\n    // 事件处理\r\n    onStageChange(newStage, oldStage) {\r\n      this.currentAppStage = newStage\r\n      this.addLog('success', `Stage切换: ${oldStage} -> ${newStage} (${this.stages[newStage]})`)\r\n      \r\n      // 根据新stage执行相应逻辑\r\n      if (newStage === 1) {\r\n        this.startProcessing()\r\n      }\r\n    },\r\n    \r\n    onNext(currentStage) {\r\n      this.lastAction = `下一步 (从Stage ${currentStage})`\r\n      this.addLog('info', `点击下一步: Stage ${currentStage}`)\r\n    },\r\n    \r\n    onPrev(currentStage) {\r\n      this.lastAction = `上一步 (从Stage ${currentStage})`\r\n      this.addLog('info', `点击上一步: Stage ${currentStage}`)\r\n    },\r\n    \r\n    // 控制方法\r\n    resetToFirst() {\r\n      this.$refs.appContentRef.goToStage(0)\r\n      this.resetProcessingState()\r\n      this.addLog('info', '重置到第一步')\r\n    },\r\n    \r\n    goToStage(index) {\r\n      this.$refs.appContentRef.goToStage(index)\r\n      this.addLog('info', `手动跳转到Stage ${index}`)\r\n    },\r\n    \r\n    toggleNavButtons() {\r\n      this.showNavButtons = !this.showNavButtons\r\n      this.addLog('info', `导航按钮${this.showNavButtons ? '显示' : '隐藏'}`)\r\n    },\r\n    \r\n    // 模拟处理逻辑\r\n    async startProcessing() {\r\n      this.processingProgress = 0\r\n      this.processingStatus = '正在处理...'\r\n      this.estimatedTime = this.getEstimatedTime()\r\n      \r\n      const startTime = Date.now()\r\n      \r\n      // 模拟处理进度\r\n      const interval = setInterval(() => {\r\n        this.processingProgress += Math.random() * 10\r\n        if (this.processingProgress >= 100) {\r\n          this.processingProgress = 100\r\n          this.processingStatus = '处理完成'\r\n          this.actualProcessTime = Math.round((Date.now() - startTime) / 1000)\r\n          this.processResult = this.generateResult()\r\n          clearInterval(interval)\r\n          this.addLog('success', '数据处理完成')\r\n        }\r\n      }, 200)\r\n    },\r\n    \r\n    simulateProcessing() {\r\n      if (this.currentAppStage === 1) {\r\n        this.startProcessing()\r\n      } else {\r\n        this.addLog('warning', '请先切换到数据处理阶段')\r\n      }\r\n    },\r\n    \r\n    resetProcessingState() {\r\n      this.processingProgress = 0\r\n      this.processingStatus = '等待开始'\r\n      this.estimatedTime = 0\r\n      this.actualProcessTime = 0\r\n      this.processResult = null\r\n      this.resultConfirmed = false\r\n    },\r\n    \r\n    getEstimatedTime() {\r\n      const timeMap = {\r\n        'fast': 3,\r\n        'normal': 5,\r\n        'detailed': 8\r\n      }\r\n      return timeMap[this.processType] || 5\r\n    },\r\n    \r\n    generateResult() {\r\n      return {\r\n        input: this.testInput,\r\n        type: this.processType,\r\n        processedAt: new Date().toISOString(),\r\n        result: `处理结果: ${this.testInput.toUpperCase()}`,\r\n        metadata: {\r\n          processingTime: this.actualProcessTime,\r\n          algorithm: this.processType,\r\n          success: true\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 日志管理\r\n    addLog(type, message) {\r\n      this.eventLogs.unshift({\r\n        type,\r\n        message,\r\n        time: new Date().toLocaleTimeString()\r\n      })\r\n      \r\n      // 限制日志数量\r\n      if (this.eventLogs.length > 50) {\r\n        this.eventLogs = this.eventLogs.slice(0, 50)\r\n      }\r\n    },\r\n    \r\n    clearLogs() {\r\n      this.eventLogs = []\r\n      this.addLog('info', '日志已清空')\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    this.addLog('info', 'AppContent测试组件已加载')\r\n    this.$emit('update-title', 'AppContent组件测试')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.test-section {\r\n  margin-bottom: 2rem;\r\n  padding: 1.5rem;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background: white;\r\n}\r\n\r\n.test-container {\r\n  height: 500px;\r\n  border: 2px solid #d0d0d0;\r\n  border-radius: 8px;\r\n  background: #fafafa;\r\n}\r\n\r\n.stage-content {\r\n  padding: 2rem;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.stage-content h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  border-bottom: 2px solid #007bff;\r\n  padding-bottom: 0.5rem;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.form-input, .form-select {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.form-input:focus, .form-select:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.status-info {\r\n  background: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.status-info p {\r\n  margin: 0.25rem 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.processing-display {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 20px;\r\n  background: #e9ecef;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #007bff, #0056b3);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.processing-details {\r\n  background: #e8f4fd;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #007bff;\r\n}\r\n\r\n.result-display {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 1rem;\r\n  height: 100%;\r\n}\r\n\r\n.result-summary, .result-data {\r\n  background: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.result-actions {\r\n  grid-column: 1 / -1;\r\n  padding: 1rem;\r\n  background: #d4edda;\r\n  border: 1px solid #c3e6cb;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n}\r\n\r\n.result-actions label {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n  font-weight: bold;\r\n  color: #155724;\r\n}\r\n\r\n.footer-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.stage-indicator {\r\n  font-weight: bold;\r\n}\r\n\r\n.stage-dots {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.stage-dot {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background: #ddd;\r\n  transition: background 0.2s ease;\r\n}\r\n\r\n.stage-dot.active {\r\n  background: #007bff;\r\n}\r\n\r\n.stage-dot.completed {\r\n  background: #28a745;\r\n}\r\n\r\n.control-panel {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.control-buttons {\r\n  display: flex;\r\n  gap: 0.75rem;\r\n  margin-bottom: 1.5rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.control-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #007bff;\r\n  background: white;\r\n  color: #007bff;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.control-btn:hover {\r\n  background: #007bff;\r\n  color: white;\r\n}\r\n\r\n.status-panel {\r\n  background: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.status-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 0.75rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.status-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem;\r\n  background: white;\r\n  border-radius: 4px;\r\n  border: 1px solid #e9ecef;\r\n}\r\n\r\n.status-item label {\r\n  font-weight: bold;\r\n  color: #495057;\r\n}\r\n\r\n.hook-controls {\r\n  padding-top: 1rem;\r\n  border-top: 1px solid #dee2e6;\r\n}\r\n\r\n.hook-controls label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.event-log {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.log-container {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  border: 1px solid #e9ecef;\r\n  border-radius: 4px;\r\n  background: #f8f9fa;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.log-entry {\r\n  display: flex;\r\n  gap: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  border-bottom: 1px solid #e9ecef;\r\n  font-family: monospace;\r\n  font-size: 13px;\r\n}\r\n\r\n.log-entry:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.log-entry.info {\r\n  background: #d1ecf1;\r\n  color: #0c5460;\r\n}\r\n\r\n.log-entry.success {\r\n  background: #d4edda;\r\n  color: #155724;\r\n}\r\n\r\n.log-entry.warning {\r\n  background: #fff3cd;\r\n  color: #856404;\r\n}\r\n\r\n.log-entry.error {\r\n  background: #f8d7da;\r\n  color: #721c24;\r\n}\r\n\r\n.log-time {\r\n  font-weight: bold;\r\n  min-width: 80px;\r\n}\r\n\r\n.log-message {\r\n  flex: 1;\r\n}\r\n\r\n.clear-logs-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #dc3545;\r\n  background: white;\r\n  color: #dc3545;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.clear-logs-btn:hover {\r\n  background: #dc3545;\r\n  color: white;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .result-display {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .control-buttons {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .status-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .footer-info {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 0.5rem;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./AppContentTest.vue?vue&type=template&id=4e456819&scoped=true\"\nimport script from \"./AppContentTest.vue?vue&type=script&lang=js\"\nexport * from \"./AppContentTest.vue?vue&type=script&lang=js\"\n\nimport \"./AppContentTest.vue?vue&type=style&index=0&id=4e456819&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e456819\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx } from \"vue\"\n\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  bpSearch,\r\n  relationSearch\r\n} from '@/utils/searchMethods'\r\n\r\ntype State = 'create' | 'change' | 'display'\r\n/**\r\n * @description 应用模式-创建/修改/查看\r\n */\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Main',\n  setup(__props, { expose: __expose }) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\nconst state: Ref<State> = ref('create')\r\nconst onCreateState = computed(() => state.value === 'create')\r\nconst onChangeState = computed(() => state.value === 'change')\r\nconst onDisplayState = computed(() => state.value === 'display')\r\nfunction appToState(newState: State) {\r\n  state.value = newState\r\n  let readonly = newState === 'display'\r\n  writableTrees.forEach(tree => {\r\n    tree.root!.readonly = readonly\r\n  })\r\n  appContentRef.value.forceUpdate()\r\n}\r\n\r\n/**\r\n * @description 初始阶段-创建-初始化BP关系\r\n */\r\nconst initialCreationTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('dict','dict','relation',{},false,{hideLabel:true},[\r\n      cns('string','leaf','relationShipCategory','',false,{searchMethods:relationSearch},[],\"Relationship Category:\")\r\n    ]),\r\n    cns('dict','dict','default',{},false,{},[\r\n      cns('string','leaf','businessPartner1','',false,{searchMethods:bpSearch},[],\"Business Partner 1:\"),\r\n      cns('string','leaf','businessPartner2','',false,{searchMethods:bpSearch},[],\"Business Partner 2:\"),\r\n      cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n      cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n    ],'Default')\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 初始阶段-查询/修改-搜索BP关系\r\n */\r\nconst initialSearchTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','relationshipId','',false,{},[],\"Relationship ID:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 主信息-BP关系信息主树\r\n */\r\nconst bpRelationshipDataTree = createTreeFromConfig(\r\n  cns('dict','dict','bpRelationshipData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n    ]),\r\n    cns('dict','dict','basicInfo',{},false,{},[\r\n      cns('dict','dict','relation',{},false,{hideLabel:true},[\r\n        cns('string','leaf','relationShipCategory','',false,{searchMethods:relationSearch},[],\"Relationship Category:\")\r\n      ]),\r\n      cns('dict','dict','default',{},false,{},[\r\n        cns('string','leaf','businessPartner1','',false,{searchMethods:bpSearch},[],\"Business Partner 1:\"),\r\n        cns('string','leaf','businessPartner2','',false,{searchMethods:bpSearch},[],\"Business Partner 2:\"),\r\n        cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n        cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n      ],'Default')\r\n    ],'Basic Information'),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 动态表单数据树\r\n */\r\nconst generalDataTree = createTreeFromConfig(\r\n  cns('dict','dict','generalData',{},false,{},[\r\n    cns('string','leaf','vip','',false,{},[],\"(Default) VIP: \"),\r\n    cns('string','leaf','department','',false,{},[],\"(Default) Department: \"),\r\n    cns('string','leaf','function','',false,{},[],\"(Default) Function: \"),\r\n  ],\"(Default) General Data\")\r\n)\r\n\r\n/**\r\n * @description BP关系的可写树，用于显示状态和编辑状态的切换\r\n */\r\nconst writableTrees = [bpRelationshipDataTree, generalDataTree]\r\n\r\nconst initializeResult = ref(false)\r\n/**\r\n * @description 创建-初始化\r\n */\r\nasync function initializeByCreation() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/bp-relationship/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialCreationTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n  \r\n  // 设置基本信息\r\n  const basicInfoValue = initialCreationTree.getValue()\r\n  bpRelationshipDataTree.findNodeByPath(['basicInfo'])?.forceSetValue(basicInfoValue)\r\n  \r\n  // 设置动态表单结构\r\n  const struct = data.data.formStruct\r\n  if (isNodeStructure(struct)) {\r\n    generalDataTree.setRoot(createNodeFromConfig(struct))\r\n    generalDataTree.root!.readonly = onDisplayState.value\r\n  }\r\n  \r\n  return true\r\n}\r\n\r\n/**\r\n * @description 查询/修改-初始化\r\n */\r\nasync function initializeByGet() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/bp-relationship/get`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialSearchTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n\r\n  const bpRelationshipData: VarNodeValue = data.data.content.basicInfo\r\n  bpRelationshipDataTree.forceSetValue(bpRelationshipData)\r\n  \r\n  // 设置动态表单结构\r\n  const struct = data.data.formStruct\r\n  if (isNodeStructure(struct)) {\r\n    generalDataTree.setRoot(createNodeFromConfig(struct))\r\n    generalDataTree.root!.readonly = onDisplayState.value\r\n  }\r\n  if(data.data.content.generalData) {\r\n    console.log('generalData',data.data.content.generalData)\r\n    console.log('cur',generalDataTree.getValue())\r\n    generalDataTree.forceSetValue(data.data.content.generalData)\r\n  }\r\n  appContentRef.value.forceUpdate()\r\n  \r\n  return true\r\n}\r\n\r\n// 计算属性：初始化阶段按钮标签\r\nconst initializeStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Initialize'\r\n  } else {\r\n    return 'Load'\r\n  }\r\n})\r\n\r\n// 计算属性：信息阶段按钮标签\r\nconst informationStagePrevButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Back'\r\n  } else {\r\n    return 'Back'\r\n  }\r\n})\r\n\r\nconst informationStageNextButtonLabel = computed(() => {\r\n  if (onDisplayState.value) {\r\n    return 'Edit'\r\n  } else if (onCreateState.value) {\r\n    return 'Create'\r\n  } else {\r\n    return 'Save'\r\n  }\r\n})\r\n\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    if (onCreateState.value) {\r\n      const confirmValue = confirm('Cancel the creation?')\r\n      if(confirmValue) {    \r\n        appContentRef.value.footerMessage = ''\r\n      }\r\n      return confirmValue\r\n    } else if (onChangeState.value) {\r\n      const confirmValue = confirm('Cancel the changes?')\r\n      if(confirmValue) {    \r\n        appContentRef.value.footerMessage = ''\r\n        appToState('display')\r\n      }\r\n      return confirmValue\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  \r\n  if (currentStage === 0) {\r\n    if (onCreateState.value) {\r\n      initializeResult.value = await initializeByCreation()\r\n    } else {\r\n      initializeResult.value = await initializeByGet()\r\n    }\r\n    return initializeResult.value\r\n  }\r\n\r\n  if (currentStage === 1) {\r\n    if (onDisplayState.value) {\r\n      console.log('切换到修改状态')\r\n      appToState('change')\r\n      return false\r\n    }\r\n    if (onCreateState.value || onChangeState.value) {\r\n      console.log(bpRelationshipDataTree.getValue())\r\n      // 向后端发送数据，创建或修改BP关系\r\n      const body = {\r\n        bpRelationshipData: bpRelationshipDataTree.getValue(),\r\n        generalData: generalDataTree.getValue(),\r\n      }\r\n      const data = await fetch(`${API_BASE_URL}/api/app/bp-relationship/edit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body)\r\n      }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n      }).catch(error => {\r\n        console.error('创建/修改BP关系失败:', error)\r\n        return { success: false }\r\n      })\r\n      console.log('返回的数据',data)\r\n      if (data.success){\r\n        appContentRef.value.footerMessage = data.data.message\r\n        if (data.data.content?.id) {\r\n          bpRelationshipDataTree.findNodeByPath(['meta','id'])?.setValue(data.data.content.id)\r\n        }\r\n        console.log(bpRelationshipDataTree.getValue())\r\n        appToState('display')\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n// 暴露方法给子组件调用\r\n__expose({\r\n  appToState\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(AppContent, {\n    stages: ['initialScreen','information'],\n    \"before-next\": handleExecute,\n    \"before-prev\": handleCancel,\n    \"footer-config\": [\r\n      { nextText:initializeStageNextButtonLabel.value },\r\n      { prevText:informationStagePrevButtonLabel.value, nextText:informationStageNextButtonLabel.value },\r\n    ],\n    ref_key: \"appContentRef\",\n    ref: appContentRef\n  }, {\n    [`stage-initialScreen`]: _withCtx(() => [\n      (onCreateState.value)\n        ? (_openBlock(), _createBlock(VarBox, {\n            key: 0,\n            tree: _unref(initialCreationTree)\n          }, null, 8, [\"tree\"]))\n        : _createCommentVNode(\"\", true),\n      (onDisplayState.value || onChangeState.value)\n        ? (_openBlock(), _createBlock(VarBox, {\n            key: 1,\n            tree: _unref(initialSearchTree)\n          }, null, 8, [\"tree\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    [`stage-information`]: _withCtx(() => [\n      _createVNode(VarBox, { tree: _unref(bpRelationshipDataTree) }, null, 8, [\"tree\"]),\n      _createVNode(VarBox, { tree: _unref(generalDataTree) }, null, 8, [\"tree\"])\n    ]),\n    [`footer-content-right`]: _withCtx(() => [\n      _createTextVNode(_toDisplayString(appContentRef.value?.getCurrentStageName()), 1)\n    ]),\n    _: 2\n  }, 1032, [\"footer-config\"]))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  bpSearch,\r\n  relationSearch\r\n} from '@/utils/searchMethods'\r\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\ntype State = 'create' | 'change' | 'display'\r\n/**\r\n * @description 应用模式-创建/修改/查看\r\n */\r\nconst state: Ref<State> = ref('create')\r\nconst onCreateState = computed(() => state.value === 'create')\r\nconst onChangeState = computed(() => state.value === 'change')\r\nconst onDisplayState = computed(() => state.value === 'display')\r\nfunction appToState(newState: State) {\r\n  state.value = newState\r\n  let readonly = newState === 'display'\r\n  writableTrees.forEach(tree => {\r\n    tree.root!.readonly = readonly\r\n  })\r\n  appContentRef.value.forceUpdate()\r\n}\r\n\r\n/**\r\n * @description 初始阶段-创建-初始化BP关系\r\n */\r\nconst initialCreationTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('dict','dict','relation',{},false,{hideLabel:true},[\r\n      cns('string','leaf','relationShipCategory','',false,{searchMethods:relationSearch},[],\"Relationship Category:\")\r\n    ]),\r\n    cns('dict','dict','default',{},false,{},[\r\n      cns('string','leaf','businessPartner1','',false,{searchMethods:bpSearch},[],\"Business Partner 1:\"),\r\n      cns('string','leaf','businessPartner2','',false,{searchMethods:bpSearch},[],\"Business Partner 2:\"),\r\n      cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n      cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n    ],'Default')\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 初始阶段-查询/修改-搜索BP关系\r\n */\r\nconst initialSearchTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','relationshipId','',false,{},[],\"Relationship ID:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 主信息-BP关系信息主树\r\n */\r\nconst bpRelationshipDataTree = createTreeFromConfig(\r\n  cns('dict','dict','bpRelationshipData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n    ]),\r\n    cns('dict','dict','basicInfo',{},false,{},[\r\n      cns('dict','dict','relation',{},false,{hideLabel:true},[\r\n        cns('string','leaf','relationShipCategory','',false,{searchMethods:relationSearch},[],\"Relationship Category:\")\r\n      ]),\r\n      cns('dict','dict','default',{},false,{},[\r\n        cns('string','leaf','businessPartner1','',false,{searchMethods:bpSearch},[],\"Business Partner 1:\"),\r\n        cns('string','leaf','businessPartner2','',false,{searchMethods:bpSearch},[],\"Business Partner 2:\"),\r\n        cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n        cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n      ],'Default')\r\n    ],'Basic Information'),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 动态表单数据树\r\n */\r\nconst generalDataTree = createTreeFromConfig(\r\n  cns('dict','dict','generalData',{},false,{},[\r\n    cns('string','leaf','vip','',false,{},[],\"(Default) VIP: \"),\r\n    cns('string','leaf','department','',false,{},[],\"(Default) Department: \"),\r\n    cns('string','leaf','function','',false,{},[],\"(Default) Function: \"),\r\n  ],\"(Default) General Data\")\r\n)\r\n\r\n/**\r\n * @description BP关系的可写树，用于显示状态和编辑状态的切换\r\n */\r\nconst writableTrees = [bpRelationshipDataTree, generalDataTree]\r\n\r\nconst initializeResult = ref(false)\r\n/**\r\n * @description 创建-初始化\r\n */\r\nasync function initializeByCreation() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/bp-relationship/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialCreationTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n  \r\n  // 设置基本信息\r\n  const basicInfoValue = initialCreationTree.getValue()\r\n  bpRelationshipDataTree.findNodeByPath(['basicInfo'])?.forceSetValue(basicInfoValue)\r\n  \r\n  // 设置动态表单结构\r\n  const struct = data.data.formStruct\r\n  if (isNodeStructure(struct)) {\r\n    generalDataTree.setRoot(createNodeFromConfig(struct))\r\n    generalDataTree.root!.readonly = onDisplayState.value\r\n  }\r\n  \r\n  return true\r\n}\r\n\r\n/**\r\n * @description 查询/修改-初始化\r\n */\r\nasync function initializeByGet() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/bp-relationship/get`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialSearchTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n\r\n  const bpRelationshipData: VarNodeValue = data.data.content.basicInfo\r\n  bpRelationshipDataTree.forceSetValue(bpRelationshipData)\r\n  \r\n  // 设置动态表单结构\r\n  const struct = data.data.formStruct\r\n  if (isNodeStructure(struct)) {\r\n    generalDataTree.setRoot(createNodeFromConfig(struct))\r\n    generalDataTree.root!.readonly = onDisplayState.value\r\n  }\r\n  if(data.data.content.generalData) {\r\n    console.log('generalData',data.data.content.generalData)\r\n    console.log('cur',generalDataTree.getValue())\r\n    generalDataTree.forceSetValue(data.data.content.generalData)\r\n  }\r\n  appContentRef.value.forceUpdate()\r\n  \r\n  return true\r\n}\r\n\r\n// 计算属性：初始化阶段按钮标签\r\nconst initializeStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Initialize'\r\n  } else {\r\n    return 'Load'\r\n  }\r\n})\r\n\r\n// 计算属性：信息阶段按钮标签\r\nconst informationStagePrevButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Back'\r\n  } else {\r\n    return 'Back'\r\n  }\r\n})\r\n\r\nconst informationStageNextButtonLabel = computed(() => {\r\n  if (onDisplayState.value) {\r\n    return 'Edit'\r\n  } else if (onCreateState.value) {\r\n    return 'Create'\r\n  } else {\r\n    return 'Save'\r\n  }\r\n})\r\n\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    if (onCreateState.value) {\r\n      const confirmValue = confirm('Cancel the creation?')\r\n      if(confirmValue) {    \r\n        appContentRef.value.footerMessage = ''\r\n      }\r\n      return confirmValue\r\n    } else if (onChangeState.value) {\r\n      const confirmValue = confirm('Cancel the changes?')\r\n      if(confirmValue) {    \r\n        appContentRef.value.footerMessage = ''\r\n        appToState('display')\r\n      }\r\n      return confirmValue\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  \r\n  if (currentStage === 0) {\r\n    if (onCreateState.value) {\r\n      initializeResult.value = await initializeByCreation()\r\n    } else {\r\n      initializeResult.value = await initializeByGet()\r\n    }\r\n    return initializeResult.value\r\n  }\r\n\r\n  if (currentStage === 1) {\r\n    if (onDisplayState.value) {\r\n      console.log('切换到修改状态')\r\n      appToState('change')\r\n      return false\r\n    }\r\n    if (onCreateState.value || onChangeState.value) {\r\n      console.log(bpRelationshipDataTree.getValue())\r\n      // 向后端发送数据，创建或修改BP关系\r\n      const body = {\r\n        bpRelationshipData: bpRelationshipDataTree.getValue(),\r\n        generalData: generalDataTree.getValue(),\r\n      }\r\n      const data = await fetch(`${API_BASE_URL}/api/app/bp-relationship/edit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body)\r\n      }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n      }).catch(error => {\r\n        console.error('创建/修改BP关系失败:', error)\r\n        return { success: false }\r\n      })\r\n      console.log('返回的数据',data)\r\n      if (data.success){\r\n        appContentRef.value.footerMessage = data.data.message\r\n        if (data.data.content?.id) {\r\n          bpRelationshipDataTree.findNodeByPath(['meta','id'])?.setValue(data.data.content.id)\r\n        }\r\n        console.log(bpRelationshipDataTree.getValue())\r\n        appToState('display')\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n// 暴露方法给子组件调用\r\ndefineExpose({\r\n  appToState\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <AppContent\r\n    :stages=\"['initialScreen','information']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel\"\r\n    :footer-config=\"[\r\n      { nextText:initializeStageNextButtonLabel },\r\n      { prevText:informationStagePrevButtonLabel, nextText:informationStageNextButtonLabel },\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <template #[`stage-initialScreen`]>\r\n      <VarBox\r\n        :tree=\"initialCreationTree\"\r\n        v-if=\"onCreateState\"\r\n      ></VarBox>\r\n      <VarBox\r\n        :tree=\"initialSearchTree\"\r\n        v-if=\"onDisplayState || onChangeState\"\r\n      ></VarBox>\r\n    </template>\r\n    <template #[`stage-information`]>\r\n      <VarBox\r\n        :tree=\"bpRelationshipDataTree\"\r\n      ></VarBox>\r\n      <VarBox\r\n        :tree=\"generalDataTree\"\r\n      ></VarBox>\r\n    </template>\r\n\r\n    <template #[`footer-content-right`]>\r\n      {{ appContentRef?.getCurrentStageName() }}\r\n    </template>\r\n\r\n  </AppContent>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./Main.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Main.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Create',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('create')\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('create')\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <Main\r\n    ref=\"mainRef\"\r\n  />\r\n</template>","import script from \"./Create.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Display',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('display')\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('display')\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main\r\n    ref=\"mainRef\"\r\n  />\r\n</template>\r\n","import script from \"./Display.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Display.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Change',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('change')\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('change')\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main\r\n    ref=\"mainRef\"\r\n  />\r\n</template>\r\n","import script from \"./Change.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Change.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"bp-relationship-test\" }\nconst _hoisted_2 = { class: \"test-buttons\" }\nconst _hoisted_3 = { class: \"test-content\" }\nconst _hoisted_4 = { key: 0 }\n\nimport { ref } from 'vue'\r\nimport CreateBP from '@/views/BPRelationship/Create.vue'\r\nimport DisplayBP from '@/views/BPRelationship/Display.vue'\r\nimport ChangeBP from '@/views/BPRelationship/Change.vue'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'BPRelationshipTest',\n  setup(__props) {\n\r\nconst currentMode = ref('')\r\nconst showComponent = ref(false)\r\n\r\nfunction testCreate() {\r\n  currentMode.value = 'create'\r\n  showComponent.value = true\r\n}\r\n\r\nfunction testDisplay() {\r\n  currentMode.value = 'display'\r\n  showComponent.value = true\r\n}\r\n\r\nfunction testChange() {\r\n  currentMode.value = 'change'\r\n  showComponent.value = true\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"BP Relationship Test Page\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"button\", {\n        onClick: testCreate,\n        class: \"test-btn create\"\n      }, \"Test Create Mode\"),\n      _createElementVNode(\"button\", {\n        onClick: testDisplay,\n        class: \"test-btn display\"\n      }, \"Test Display Mode\"),\n      _createElementVNode(\"button\", {\n        onClick: testChange,\n        class: \"test-btn change\"\n      }, \"Test Change Mode\"),\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.testAPI && _ctx.testAPI(...args))),\n        class: \"test-btn api\"\n      }, \"Test API Direct\")\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"h2\", null, \"Current Mode: \" + _toDisplayString(currentMode.value), 1),\n      (showComponent.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            (currentMode.value === 'create')\n              ? (_openBlock(), _createBlock(CreateBP, { key: 0 }))\n              : _createCommentVNode(\"\", true),\n            (currentMode.value === 'display')\n              ? (_openBlock(), _createBlock(DisplayBP, { key: 1 }))\n              : _createCommentVNode(\"\", true),\n            (currentMode.value === 'change')\n              ? (_openBlock(), _createBlock(ChangeBP, { key: 2 }))\n              : _createCommentVNode(\"\", true)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"bp-relationship-test\">\r\n    <h1>BP Relationship Test Page</h1>\r\n    \r\n    <div class=\"test-buttons\">\r\n      <button @click=\"testCreate\" class=\"test-btn create\">Test Create Mode</button>\r\n      <button @click=\"testDisplay\" class=\"test-btn display\">Test Display Mode</button>\r\n      <button @click=\"testChange\" class=\"test-btn change\">Test Change Mode</button>\r\n      <button @click=\"testAPI\" class=\"test-btn api\">Test API Direct</button>\r\n    </div>\r\n    \r\n    <div class=\"test-content\">\r\n      <h2>Current Mode: {{ currentMode }}</h2>\r\n      <div v-if=\"showComponent\">\r\n        <CreateBP v-if=\"currentMode === 'create'\" />\r\n        <DisplayBP v-if=\"currentMode === 'display'\" />\r\n        <ChangeBP v-if=\"currentMode === 'change'\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from 'vue'\r\nimport CreateBP from '@/views/BPRelationship/Create.vue'\r\nimport DisplayBP from '@/views/BPRelationship/Display.vue'\r\nimport ChangeBP from '@/views/BPRelationship/Change.vue'\r\n\r\nconst currentMode = ref('')\r\nconst showComponent = ref(false)\r\n\r\nfunction testCreate() {\r\n  currentMode.value = 'create'\r\n  showComponent.value = true\r\n}\r\n\r\nfunction testDisplay() {\r\n  currentMode.value = 'display'\r\n  showComponent.value = true\r\n}\r\n\r\nfunction testChange() {\r\n  currentMode.value = 'change'\r\n  showComponent.value = true\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.bp-relationship-test {\r\n  padding: 20px;\r\n}\r\n\r\n.test-buttons {\r\n  margin: 20px 0;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.test-btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.test-btn.create {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.test-btn.display {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.test-btn.change {\r\n  background-color: #FF9800;\r\n  color: white;\r\n}\r\n\r\n.test-btn:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n.test-content {\r\n  margin-top: 20px;\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n","import script from \"./BPRelationshipTest.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./BPRelationshipTest.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./BPRelationshipTest.vue?vue&type=style&index=0&id=10611076&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-10611076\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = { class: \"example-application\" }\nconst _hoisted_2 = { class: \"stage-content\" }\nconst _hoisted_3 = { class: \"stage-header\" }\nconst _hoisted_4 = { class: \"progress-indicator\" }\nconst _hoisted_5 = { class: \"progress-text\" }\nconst _hoisted_6 = { class: \"progress-bar\" }\nconst _hoisted_7 = { class: \"stage-content\" }\nconst _hoisted_8 = { class: \"stage-header\" }\nconst _hoisted_9 = { class: \"progress-indicator\" }\nconst _hoisted_10 = { class: \"progress-text\" }\nconst _hoisted_11 = { class: \"progress-bar\" }\nconst _hoisted_12 = { class: \"form-container\" }\nconst _hoisted_13 = { class: \"stage-content\" }\nconst _hoisted_14 = { class: \"stage-header\" }\nconst _hoisted_15 = { class: \"progress-indicator\" }\nconst _hoisted_16 = { class: \"progress-text\" }\nconst _hoisted_17 = { class: \"progress-bar\" }\nconst _hoisted_18 = { class: \"form-container\" }\nconst _hoisted_19 = { class: \"stage-content\" }\nconst _hoisted_20 = { class: \"stage-header\" }\nconst _hoisted_21 = { class: \"progress-indicator\" }\nconst _hoisted_22 = { class: \"progress-text\" }\nconst _hoisted_23 = { class: \"progress-bar\" }\nconst _hoisted_24 = { class: \"preview-container\" }\nconst _hoisted_25 = { class: \"preview-section\" }\nconst _hoisted_26 = { class: \"preview-section\" }\nconst _hoisted_27 = { class: \"preview-section\" }\nconst _hoisted_28 = { class: \"stage-content\" }\nconst _hoisted_29 = { class: \"stage-header\" }\nconst _hoisted_30 = { class: \"result-container\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"success-message\"\n}\nconst _hoisted_32 = {\n  key: 1,\n  class: \"error-message\"\n}\nconst _hoisted_33 = {\n  key: 0,\n  class: \"stage-actions\"\n}\n\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport { VarTree, createTreeFromConfig, cns, SearchMethod } from '@/utils/VarTree'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ExampleApplication',\n  setup(__props) {\n\r\nconst router = useRouter()\r\nconst appContentRef = ref()\r\n\r\n// 阶段定义\r\nconst stages = ref(['基本信息录入', '部门职位', '技能经验', '预览确认', '提交结果'])\r\n\r\n// 状态管理\r\nconst isSubmitting = ref(false)\r\nconst submitSuccess = ref(false)\r\nconst submitError = ref('')\r\nconst submittedEmployeeId = ref('')\r\nconst submitTime = ref('')\r\n\r\n// 数据验证状态\r\nconst isBasicInfoValid = computed(() => {\r\n  // 触发强制更新以确保计算属性重新计算\r\n  forceUpdateKey.value\r\n\r\n  const basicInfo = employeeBasicInfoTree.root?.currentValue as any\r\n  if (!basicInfo) return false\r\n\r\n  // 检查核心必填字段\r\n  const coreRequiredFields = ['name', 'email', 'phone']\r\n  const hasCoreFields = coreRequiredFields.every(field => {\r\n    const value = basicInfo[field]\r\n    return value && String(value).trim().length > 0\r\n  })\r\n\r\n  console.log('基本信息验证:', {\r\n    basicInfo,\r\n    hasCoreFields,\r\n    name: basicInfo.name,\r\n    email: basicInfo.email,\r\n    phone: basicInfo.phone,\r\n    forceUpdateKey: forceUpdateKey.value\r\n  })\r\n\r\n  return hasCoreFields\r\n})\r\n\r\nconst isDepartmentInfoValid = computed(() => {\r\n  // 触发强制更新\r\n  forceUpdateKey.value\r\n\r\n  const deptInfo = employeeDepartmentTree.root?.currentValue as any\r\n  if (!deptInfo) return false\r\n\r\n  const isValid = deptInfo.department && String(deptInfo.department).trim().length > 0 &&\r\n                  deptInfo.position && String(deptInfo.position).trim().length > 0\r\n\r\n  console.log('部门信息验证:', {\r\n    deptInfo,\r\n    isValid,\r\n    department: deptInfo?.department,\r\n    position: deptInfo?.position,\r\n    forceUpdateKey: forceUpdateKey.value\r\n  })\r\n\r\n  return isValid\r\n})\r\n\r\n// 员工基本信息数据树\r\nconst employeeBasicInfoTree = createTreeFromConfig(\r\n  cns('dict', 'dict', 'basicInfo', {}, false, {}, [\r\n    cns('string', 'leaf', 'name', '', false, {}, [], '姓名'),\r\n    cns('string', 'leaf', 'email', '', false, {}, [], '邮箱'),\r\n    cns('string', 'leaf', 'phone', '', false, {}, [], '电话'),\r\n    cns('date', 'leaf', 'birthDate', null, false, {}, [], '出生日期'),\r\n    cns('selection', 'leaf', 'gender', '', false, {\r\n      options: ['男', '女', '其他']\r\n    }, [], '性别'),\r\n    cns('dict', 'dict', 'address', {}, false, {}, [\r\n      cns('string', 'leaf', 'province', '', false, {}, [], '省份'),\r\n      cns('string', 'leaf', 'city', '', false, {}, [], '城市'),\r\n      cns('string', 'leaf', 'district', '', false, {}, [], '区县'),\r\n      cns('string', 'leaf', 'street', '', false, {}, [], '详细地址'),\r\n      cns('string', 'leaf', 'zipCode', '', false, {}, [], '邮政编码'),\r\n    ], '地址信息'),\r\n    cns('string', 'leaf', 'idCard', '', false, {}, [], '身份证号'),\r\n    cns('dict', 'dict', 'emergencyContact', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '', false, {}, [], '紧急联系人姓名'),\r\n      cns('string', 'leaf', 'relationship', '', false, {}, [], '关系'),\r\n      cns('string', 'leaf', 'phone', '', false, {}, [], '联系电话'),\r\n    ], '紧急联系人'),\r\n  ], '基本信息')\r\n)\r\n\r\n// 创建搜索方法\r\nconst createDepartmentSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '部门搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'deptSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'deptName', '', false, {}, [], '部门名称'),\r\n        cns('selection', 'leaf', 'deptType', '', false, {\r\n          options: ['技术部', '市场部', '人事部', '财务部', '运营部', '产品部']\r\n        }, [], '部门类型'),\r\n      ], '部门搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/department',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '部门名称',\r\n      description: '描述',\r\n      deptType: '部门类型',\r\n      headCount: '人数'\r\n    }\r\n  },\r\n  {\r\n    name: '职位搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'positionSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'positionName', '', false, {}, [], '职位名称'),\r\n        cns('selection', 'leaf', 'level', '', false, {\r\n          options: ['初级', '中级', '高级', '专家', '管理']\r\n        }, [], '职位级别'),\r\n        cns('number', 'leaf', 'minSalary', null, false, {}, [], '最低薪资'),\r\n        cns('number', 'leaf', 'maxSalary', null, false, {}, [], '最高薪资'),\r\n      ], '职位搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/position',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '职位名称',\r\n      description: '描述',\r\n      level: '职位级别',\r\n      department: '所属部门',\r\n      suggestedSalary: '建议薪资',\r\n      requirements: '任职要求'\r\n    }\r\n  }\r\n]\r\n\r\nconst createManagerSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '员工搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'managerSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'employeeName', '', false, {}, [], '员工姓名'),\r\n        cns('string', 'leaf', 'employeeId', '', false, {}, [], '员工ID'),\r\n        cns('selection', 'leaf', 'department', '', false, {\r\n          options: ['技术部', '市场部', '人事部', '财务部', '运营部', '产品部']\r\n        }, [], '所在部门'),\r\n      ], '员工搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/employee',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '员工姓名',\r\n      description: '描述',\r\n      position: '职位',\r\n      department: '所在部门',\r\n      level: '职级'\r\n    }\r\n  }\r\n]\r\n\r\n// 自定义搜索结果处理函数\r\nconst customDepartmentHandler = (data: any, currentNode: any) => {\r\n  console.log('部门搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n  }\r\n}\r\n\r\nconst customPositionHandler = (data: any, currentNode: any) => {\r\n  console.log('职位搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    // 设置职位名称和建议薪资\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n\r\n    // 如果有薪资信息，自动填充薪资字段\r\n    if (data.firstSelectedResult.suggestedSalary) {\r\n      const salaryNode = employeeDepartmentTree.root?.children.find(child => child.name === 'salary')\r\n      if (salaryNode) {\r\n        salaryNode.currentValue = data.firstSelectedResult.suggestedSalary\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst customManagerHandler = (data: any, currentNode: any) => {\r\n  console.log('上级搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n  }\r\n}\r\n\r\n// 部门职位信息数据树（集成搜索功能）\r\nconst employeeDepartmentTree = createTreeFromConfig(\r\n  cns('dict', 'dict', 'departmentInfo', {}, false, {}, [\r\n    cns('string', 'leaf', 'department', '', false, {\r\n      searchMethods: createDepartmentSearchMethods(),\r\n      customSearchResultHandler: customDepartmentHandler\r\n    }, [], '部门'),\r\n    cns('string', 'leaf', 'position', '', false, {\r\n      searchMethods: createDepartmentSearchMethods().slice(1), // 只使用职位搜索\r\n      customSearchResultHandler: customPositionHandler\r\n    }, [], '职位'),\r\n    cns('date', 'leaf', 'hireDate', null, false, {\r\n      validators: [\r\n        { creteria: (value: any) => {\r\n          if (!value) return false\r\n          const hireDate = new Date(value)\r\n          const today = new Date()\r\n          return hireDate <= today\r\n        }, message: '入职日期不能晚于今天' }\r\n      ]\r\n    }, [], '入职日期'),\r\n    cns('number', 'leaf', 'salary', null, false, {\r\n      validators: [\r\n        { creteria: (value: any) => !value || (value >= 3000 && value <= 100000), message: '薪资范围应在3000-100000之间' }\r\n      ]\r\n    }, [], '薪资'),\r\n    cns('string', 'leaf', 'manager', '', false, {\r\n      searchMethods: createManagerSearchMethods(),\r\n      customSearchResultHandler: customManagerHandler\r\n    }, [], '直属上级'),\r\n  ], '部门职位信息')\r\n)\r\n\r\n// 创建技能搜索方法\r\nconst createSkillSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '技能库搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'skillSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'skillName', '', false, {}, [], '技能名称'),\r\n        cns('selection', 'leaf', 'category', '', false, {\r\n          options: ['编程语言', '框架技术', '数据库', '工具软件', '软技能', '认证证书']\r\n        }, [], '技能分类'),\r\n        cns('selection', 'leaf', 'level', '', false, {\r\n          options: ['初级', '中级', '高级', '专家']\r\n        }, [], '要求级别'),\r\n      ], '技能搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/skill',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '技能名称',\r\n      description: '描述',\r\n      category: '技能分类',\r\n      suggestedLevel: '建议级别'\r\n    }\r\n  }\r\n]\r\n\r\nconst createCompanySearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '公司搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'companySearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'companyName', '', false, {}, [], '公司名称'),\r\n        cns('selection', 'leaf', 'industry', '', false, {\r\n          options: ['互联网', '金融', '制造业', '教育', '医疗', '零售', '咨询']\r\n        }, [], '行业'),\r\n        cns('selection', 'leaf', 'scale', '', false, {\r\n          options: ['创业公司', '中小企业', '大型企业', '跨国公司']\r\n        }, [], '公司规模'),\r\n      ], '公司搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/company',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '公司名称',\r\n      description: '描述',\r\n      industry: '行业',\r\n      scale: '规模'\r\n    }\r\n  }\r\n]\r\n\r\n// 技能搜索结果处理\r\nconst customSkillHandler = (data: any, currentNode: any) => {\r\n  console.log('技能搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n\r\n    // 如果有建议的熟练程度，自动填充\r\n    if (data.firstSelectedResult.suggestedLevel) {\r\n      const skillNode = currentNode.parent\r\n      const levelNode = skillNode?.children.find((child: any) => child.name === 'level')\r\n      if (levelNode) {\r\n        levelNode.currentValue = data.firstSelectedResult.suggestedLevel\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 公司搜索结果处理\r\nconst customCompanyHandler = (data: any, currentNode: any) => {\r\n  console.log('公司搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n  }\r\n}\r\n\r\n// 技能经验数据树\r\nconst employeeSkillsTree = createTreeFromConfig(\r\n  cns('dict', 'dict', 'skillsInfo', {}, false, {}, [\r\n    cns('dynamiclist', 'list', 'skills', [], false, {}, [\r\n      cns('dict', 'dict', 'skill', {}, false, {}, [\r\n        cns('string', 'leaf', 'skillName', '', false, {\r\n          searchMethods: createSkillSearchMethods(),\r\n          customSearchResultHandler: customSkillHandler\r\n        }, [], '技能名称'),\r\n        cns('selection', 'leaf', 'level', '', false, {\r\n          options: ['初级', '中级', '高级', '专家']\r\n        }, [], '熟练程度'),\r\n        cns('number', 'leaf', 'experience', null, false, {\r\n          validators: [\r\n            { creteria: (value: any) => !value || (value >= 0 && value <= 50), message: '经验年限应在0-50年之间' }\r\n          ]\r\n        }, [], '经验年限'),\r\n      ])\r\n    ], '技能列表'),\r\n    cns('dynamiclist', 'list', 'workExperience', [], false, {}, [\r\n      cns('dict', 'dict', 'experience', {}, false, {}, [\r\n        cns('string', 'leaf', 'company', '', false, {\r\n          searchMethods: createCompanySearchMethods(),\r\n          customSearchResultHandler: customCompanyHandler\r\n        }, [], '公司名称'),\r\n        cns('string', 'leaf', 'position', '', false, {}, [], '职位'),\r\n        cns('date', 'leaf', 'startDate', null, false, {\r\n          validators: [\r\n            { creteria: (value: any) => {\r\n              if (!value) return false\r\n              const startDate = new Date(value)\r\n              const today = new Date()\r\n              return startDate <= today\r\n            }, message: '开始时间不能晚于今天' }\r\n          ]\r\n        }, [], '开始时间'),\r\n        cns('date', 'leaf', 'endDate', null, false, {\r\n          validators: [\r\n            { creteria: (value: any) => {\r\n              if (!value) return true // 结束时间可以为空（表示至今）\r\n              const endDate = new Date(value)\r\n              const today = new Date()\r\n              return endDate <= today\r\n            }, message: '结束时间不能晚于今天' }\r\n          ]\r\n        }, [], '结束时间'),\r\n        cns('string', 'leaf', 'description', '', false, {}, [], '工作描述'),\r\n      ])\r\n    ], '工作经历'),\r\n  ], '技能经验')\r\n)\r\n\r\n// 强制更新计数器\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\n\r\n// 事件处理函数\r\nfunction handleBasicInfoUpdate(payload: any) {\r\n  console.log('基本信息更新:', payload)\r\n  // 强制更新以触发计算属性重新计算\r\n  forceUpdate()\r\n}\r\n\r\nfunction handleDepartmentUpdate(payload: any) {\r\n  console.log('部门信息更新:', payload)\r\n  forceUpdate()\r\n}\r\n\r\nfunction handleSkillsUpdate(payload: any) {\r\n  console.log('技能信息更新:', payload)\r\n  forceUpdate()\r\n}\r\n\r\nfunction handleStageChange(newStage: number, oldStage: number) {\r\n  console.log(`阶段变更: ${oldStage} -> ${newStage}`)\r\n}\r\n\r\nfunction handleNext(currentStage: number) {\r\n  console.log('下一步:', currentStage)\r\n}\r\n\r\nfunction handlePrev(currentStage: number) {\r\n  console.log('上一步:', currentStage)\r\n}\r\n\r\n// 导航钩子 - 专注于每个阶段的验证和业务逻辑\r\nasync function beforeNext(currentStage: number, targetStage: number): Promise<boolean> {\r\n  console.log(`准备从阶段 ${currentStage} 前进到 ${targetStage}`)\r\n\r\n  switch (currentStage) {\r\n    case 0: // 基本信息录入 -> 部门职位\r\n      if (!isBasicInfoValid.value) {\r\n        alert('请完善基本信息（姓名、邮箱、电话）后再继续')\r\n        return false\r\n      }\r\n      console.log('基本信息验证通过')\r\n      break\r\n\r\n    case 1: // 部门职位 -> 技能经验\r\n      if (!isDepartmentInfoValid.value) {\r\n        alert('请完善部门职位信息（部门、职位）后再继续')\r\n        return false\r\n      }\r\n      console.log('部门职位信息验证通过')\r\n      break\r\n\r\n    case 2: // 技能经验 -> 预览确认\r\n      // 可选验证：检查技能列表的完整性\r\n      const skillsInfo = employeeSkillsTree.root?.currentValue as any\r\n      if (skillsInfo?.skills && skillsInfo.skills.length > 0) {\r\n        const incompleteSkills = skillsInfo.skills.some((skill: any) =>\r\n          !skill.skillName || !skill.level\r\n        )\r\n        if (incompleteSkills) {\r\n          const confirmed = confirm('技能列表中有未完成的项目，是否继续？')\r\n          if (!confirmed) return false\r\n        }\r\n      }\r\n      console.log('技能经验信息检查完成')\r\n      break\r\n\r\n    case 3: // 预览确认 -> 提交结果\r\n      // 执行提交逻辑\r\n      const submitResult = await submitEmployeeData()\r\n      if (!submitResult) {\r\n        console.log('提交失败，停留在当前阶段')\r\n        return false\r\n      }\r\n      console.log('数据提交成功')\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nasync function beforePrev(currentStage: number, targetStage: number): Promise<boolean> {\r\n  console.log(`准备从阶段 ${currentStage} 返回到 ${targetStage}`)\r\n\r\n  switch (currentStage) {\r\n    case 4: // 从提交结果返回\r\n      const confirmed = confirm('返回将丢失提交结果，是否确认？')\r\n      if (!confirmed) return false\r\n      break\r\n\r\n    case 3: // 从预览确认返回\r\n      console.log('返回编辑模式')\r\n      break\r\n\r\n    default:\r\n      // 其他阶段直接允许返回\r\n      break\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// 提交员工数据\r\nasync function submitEmployeeData(): Promise<boolean> {\r\n  isSubmitting.value = true\r\n\r\n  try {\r\n    // 收集所有数据\r\n    const employeeData = {\r\n      basicInfo: employeeBasicInfoTree.root?.currentValue,\r\n      departmentInfo: employeeDepartmentTree.root?.currentValue,\r\n      skillsInfo: employeeSkillsTree.root?.currentValue,\r\n    }\r\n\r\n    console.log('提交员工数据:', employeeData)\r\n\r\n    // 调用真实的后端API\r\n    const response = await fetch('http://localhost:3000/api/employee/create', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(employeeData)\r\n    })\r\n\r\n    const result = await response.json()\r\n\r\n    if (result.success) {\r\n      submitSuccess.value = true\r\n      submittedEmployeeId.value = result.data.employeeId\r\n      submitTime.value = new Date().toLocaleString()\r\n      console.log('员工创建成功:', result.data)\r\n    } else {\r\n      throw new Error(result.message || '提交失败')\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('提交失败:', error)\r\n    submitSuccess.value = false\r\n    submitError.value = error instanceof Error ? error.message : '网络错误，请检查后端服务是否启动'\r\n    return true // 仍然允许进入结果页面显示错误\r\n  } finally {\r\n    isSubmitting.value = false\r\n  }\r\n}\r\n\r\n// 重置表单\r\nfunction resetForm() {\r\n  // 重置所有数据树\r\n  if (employeeBasicInfoTree.root) {\r\n    employeeBasicInfoTree.root.currentValue = {}\r\n  }\r\n  if (employeeDepartmentTree.root) {\r\n    employeeDepartmentTree.root.currentValue = {}\r\n  }\r\n  if (employeeSkillsTree.root) {\r\n    employeeSkillsTree.root.currentValue = {}\r\n  }\r\n\r\n  // 重置状态\r\n  isSubmitting.value = false\r\n  submitSuccess.value = false\r\n  submitError.value = ''\r\n  submittedEmployeeId.value = ''\r\n  submitTime.value = ''\r\n\r\n  // 返回第一个阶段\r\n  appContentRef.value?.goToStage(0)\r\n}\r\n\r\n// 返回应用目录\r\nfunction goToDirectory() {\r\n  router.push('/application')\r\n}\r\n\r\nonMounted(() => {\r\n  console.log('Example Application 已加载')\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(AppContent, {\n      stages: stages.value,\n      showNavButtons: true,\n      beforeNext: beforeNext,\n      beforePrev: beforePrev,\n      prevText: '上一步',\n      nextText: '下一步',\n      onStageChange: handleStageChange,\n      onNext: handleNext,\n      onPrev: handlePrev,\n      ref_key: \"appContentRef\",\n      ref: appContentRef\n    }, {\n      \"stage-基本信息录入\": _withCtx(({ currentStage, stageName, totalStages }) => [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", _hoisted_4, [\n              _createElementVNode(\"span\", _hoisted_5, \"步骤 \" + _toDisplayString(currentStage + 1) + \" / \" + _toDisplayString(totalStages), 1),\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"div\", {\n                  class: \"progress-fill\",\n                  style: _normalizeStyle({ width: `${((currentStage + 1) / totalStages) * 100}%` })\n                }, null, 4)\n              ])\n            ]),\n            _createElementVNode(\"h2\", null, _toDisplayString(stageName), 1),\n            _cache[0] || (_cache[0] = _createElementVNode(\"p\", { class: \"stage-description\" }, \"请填写员工的基本信息，包括个人资料和联系方式\", -1))\n          ]),\n          (_openBlock(), _createElementBlock(\"div\", {\n            class: \"form-container\",\n            key: forceUpdateKey.value\n          }, [\n            _createVNode(VarBox, {\n              tree: _unref(employeeBasicInfoTree),\n              onUpdate: handleBasicInfoUpdate\n            }, null, 8, [\"tree\"])\n          ]))\n        ])\n      ]),\n      \"stage-部门职位\": _withCtx(({ currentStage, stageName, totalStages }) => [\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"div\", _hoisted_8, [\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createElementVNode(\"span\", _hoisted_10, \"步骤 \" + _toDisplayString(currentStage + 1) + \" / \" + _toDisplayString(totalStages), 1),\n              _createElementVNode(\"div\", _hoisted_11, [\n                _createElementVNode(\"div\", {\n                  class: \"progress-fill\",\n                  style: _normalizeStyle({ width: `${((currentStage + 1) / totalStages) * 100}%` })\n                }, null, 4)\n              ])\n            ]),\n            _createElementVNode(\"h2\", null, _toDisplayString(stageName), 1),\n            _cache[1] || (_cache[1] = _createElementVNode(\"p\", { class: \"stage-description\" }, \"选择员工的部门和职位信息，支持搜索功能\", -1))\n          ]),\n          _createElementVNode(\"div\", _hoisted_12, [\n            _createVNode(VarBox, {\n              tree: _unref(employeeDepartmentTree),\n              onUpdate: handleDepartmentUpdate\n            }, null, 8, [\"tree\"])\n          ])\n        ])\n      ]),\n      \"stage-技能经验\": _withCtx(({ currentStage, stageName, totalStages }) => [\n        _createElementVNode(\"div\", _hoisted_13, [\n          _createElementVNode(\"div\", _hoisted_14, [\n            _createElementVNode(\"div\", _hoisted_15, [\n              _createElementVNode(\"span\", _hoisted_16, \"步骤 \" + _toDisplayString(currentStage + 1) + \" / \" + _toDisplayString(totalStages), 1),\n              _createElementVNode(\"div\", _hoisted_17, [\n                _createElementVNode(\"div\", {\n                  class: \"progress-fill\",\n                  style: _normalizeStyle({ width: `${((currentStage + 1) / totalStages) * 100}%` })\n                }, null, 4)\n              ])\n            ]),\n            _createElementVNode(\"h2\", null, _toDisplayString(stageName), 1),\n            _cache[2] || (_cache[2] = _createElementVNode(\"p\", { class: \"stage-description\" }, \"添加员工的技能和工作经验，支持动态列表管理\", -1))\n          ]),\n          _createElementVNode(\"div\", _hoisted_18, [\n            _createVNode(VarBox, {\n              tree: _unref(employeeSkillsTree),\n              onUpdate: handleSkillsUpdate\n            }, null, 8, [\"tree\"])\n          ])\n        ])\n      ]),\n      \"stage-预览确认\": _withCtx(({ currentStage, stageName, totalStages }) => [\n        _createElementVNode(\"div\", _hoisted_19, [\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"div\", _hoisted_21, [\n              _createElementVNode(\"span\", _hoisted_22, \"步骤 \" + _toDisplayString(currentStage + 1) + \" / \" + _toDisplayString(totalStages), 1),\n              _createElementVNode(\"div\", _hoisted_23, [\n                _createElementVNode(\"div\", {\n                  class: \"progress-fill\",\n                  style: _normalizeStyle({ width: `${((currentStage + 1) / totalStages) * 100}%` })\n                }, null, 4)\n              ])\n            ]),\n            _createElementVNode(\"h2\", null, _toDisplayString(stageName), 1),\n            _cache[3] || (_cache[3] = _createElementVNode(\"p\", { class: \"stage-description\" }, \"请确认所有信息无误后提交\", -1))\n          ]),\n          _createElementVNode(\"div\", _hoisted_24, [\n            _createElementVNode(\"div\", _hoisted_25, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"基本信息\", -1)),\n              _createVNode(VarBox, {\n                tree: _unref(employeeBasicInfoTree),\n                readonly: true\n              }, null, 8, [\"tree\"])\n            ]),\n            _createElementVNode(\"div\", _hoisted_26, [\n              _cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"部门职位\", -1)),\n              _createVNode(VarBox, {\n                tree: _unref(employeeDepartmentTree),\n                readonly: true\n              }, null, 8, [\"tree\"])\n            ]),\n            _createElementVNode(\"div\", _hoisted_27, [\n              _cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"技能经验\", -1)),\n              _createVNode(VarBox, {\n                tree: _unref(employeeSkillsTree),\n                readonly: true\n              }, null, 8, [\"tree\"])\n            ])\n          ])\n        ])\n      ]),\n      \"stage-提交结果\": _withCtx(({ stageName }) => [\n        _createElementVNode(\"div\", _hoisted_28, [\n          _createElementVNode(\"div\", _hoisted_29, [\n            _createElementVNode(\"h2\", null, _toDisplayString(stageName), 1)\n          ]),\n          _createElementVNode(\"div\", _hoisted_30, [\n            (submitSuccess.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [\n                  _cache[7] || (_cache[7] = _createElementVNode(\"div\", { class: \"success-icon\" }, \"✓\", -1)),\n                  _cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"员工信息提交成功！\", -1)),\n                  _createElementVNode(\"p\", null, \"员工ID: \" + _toDisplayString(submittedEmployeeId.value), 1),\n                  _createElementVNode(\"p\", null, \"提交时间: \" + _toDisplayString(submitTime.value), 1)\n                ]))\n              : (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n                  _cache[9] || (_cache[9] = _createElementVNode(\"div\", { class: \"error-icon\" }, \"✗\", -1)),\n                  _cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"提交失败\", -1)),\n                  _createElementVNode(\"p\", null, _toDisplayString(submitError.value), 1)\n                ]))\n          ])\n        ])\n      ]),\n      \"footer-content-right\": _withCtx(({ currentStage }) => [\n        (currentStage === 4)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn-primary\",\n                onClick: resetForm\n              }, \" 重新开始 \"),\n              _createElementVNode(\"button\", {\n                class: \"btn btn-secondary\",\n                onClick: goToDirectory\n              }, \" 返回应用目录 \")\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    }, 8, [\"stages\"])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"example-application\">\r\n    <AppContent\r\n      :stages=\"stages\"\r\n      :showNavButtons=\"true\"\r\n      :beforeNext=\"beforeNext\"\r\n      :beforePrev=\"beforePrev\"\r\n      :prevText=\"'上一步'\"\r\n      :nextText=\"'下一步'\"\r\n      @stage-change=\"handleStageChange\"\r\n      @next=\"handleNext\"\r\n      @prev=\"handlePrev\"\r\n      ref=\"appContentRef\"\r\n    >\r\n      <!-- 阶段1: 员工基本信息录入 -->\r\n      <template #stage-基本信息录入=\"{ currentStage, stageName, totalStages }\">\r\n        <div class=\"stage-content\">\r\n          <div class=\"stage-header\">\r\n            <div class=\"progress-indicator\">\r\n              <span class=\"progress-text\">步骤 {{ currentStage + 1 }} / {{ totalStages }}</span>\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress-fill\" :style=\"{ width: `${((currentStage + 1) / totalStages) * 100}%` }\"></div>\r\n              </div>\r\n            </div>\r\n            <h2>{{ stageName }}</h2>\r\n            <p class=\"stage-description\">请填写员工的基本信息，包括个人资料和联系方式</p>\r\n          </div>\r\n          \r\n          <div class=\"form-container\" :key=\"forceUpdateKey\">\r\n            <VarBox\r\n              :tree=\"employeeBasicInfoTree\"\r\n              @update=\"handleBasicInfoUpdate\"\r\n            />\r\n          </div>\r\n          \r\n\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 阶段2: 部门与职位信息 -->\r\n      <template #stage-部门职位=\"{ currentStage, stageName, totalStages }\">\r\n        <div class=\"stage-content\">\r\n          <div class=\"stage-header\">\r\n            <div class=\"progress-indicator\">\r\n              <span class=\"progress-text\">步骤 {{ currentStage + 1 }} / {{ totalStages }}</span>\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress-fill\" :style=\"{ width: `${((currentStage + 1) / totalStages) * 100}%` }\"></div>\r\n              </div>\r\n            </div>\r\n            <h2>{{ stageName }}</h2>\r\n            <p class=\"stage-description\">选择员工的部门和职位信息，支持搜索功能</p>\r\n          </div>\r\n          \r\n          <div class=\"form-container\">\r\n            <VarBox\r\n              :tree=\"employeeDepartmentTree\"\r\n              @update=\"handleDepartmentUpdate\"\r\n            />\r\n          </div>\r\n          \r\n\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 阶段3: 技能与经验 -->\r\n      <template #stage-技能经验=\"{ currentStage, stageName, totalStages }\">\r\n        <div class=\"stage-content\">\r\n          <div class=\"stage-header\">\r\n            <div class=\"progress-indicator\">\r\n              <span class=\"progress-text\">步骤 {{ currentStage + 1 }} / {{ totalStages }}</span>\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress-fill\" :style=\"{ width: `${((currentStage + 1) / totalStages) * 100}%` }\"></div>\r\n              </div>\r\n            </div>\r\n            <h2>{{ stageName }}</h2>\r\n            <p class=\"stage-description\">添加员工的技能和工作经验，支持动态列表管理</p>\r\n          </div>\r\n          \r\n          <div class=\"form-container\">\r\n            <VarBox\r\n              :tree=\"employeeSkillsTree\"\r\n              @update=\"handleSkillsUpdate\"\r\n            />\r\n          </div>\r\n          \r\n\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 阶段4: 数据预览与确认 -->\r\n      <template #stage-预览确认=\"{ currentStage, stageName, totalStages }\">\r\n        <div class=\"stage-content\">\r\n          <div class=\"stage-header\">\r\n            <div class=\"progress-indicator\">\r\n              <span class=\"progress-text\">步骤 {{ currentStage + 1 }} / {{ totalStages }}</span>\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress-fill\" :style=\"{ width: `${((currentStage + 1) / totalStages) * 100}%` }\"></div>\r\n              </div>\r\n            </div>\r\n            <h2>{{ stageName }}</h2>\r\n            <p class=\"stage-description\">请确认所有信息无误后提交</p>\r\n          </div>\r\n          \r\n          <div class=\"preview-container\">\r\n            <div class=\"preview-section\">\r\n              <h3>基本信息</h3>\r\n              <VarBox\r\n                :tree=\"employeeBasicInfoTree\"\r\n                :readonly=\"true\"\r\n              />\r\n            </div>\r\n            \r\n            <div class=\"preview-section\">\r\n              <h3>部门职位</h3>\r\n              <VarBox\r\n                :tree=\"employeeDepartmentTree\"\r\n                :readonly=\"true\"\r\n              />\r\n            </div>\r\n            \r\n            <div class=\"preview-section\">\r\n              <h3>技能经验</h3>\r\n              <VarBox\r\n                :tree=\"employeeSkillsTree\"\r\n                :readonly=\"true\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 阶段5: 提交结果 -->\r\n      <template #stage-提交结果=\"{ stageName }\">\r\n        <div class=\"stage-content\">\r\n          <div class=\"stage-header\">\r\n            <h2>{{ stageName }}</h2>\r\n          </div>\r\n          \r\n          <div class=\"result-container\">\r\n            <div v-if=\"submitSuccess\" class=\"success-message\">\r\n              <div class=\"success-icon\">✓</div>\r\n              <h3>员工信息提交成功！</h3>\r\n              <p>员工ID: {{ submittedEmployeeId }}</p>\r\n              <p>提交时间: {{ submitTime }}</p>\r\n            </div>\r\n            \r\n            <div v-else class=\"error-message\">\r\n              <div class=\"error-icon\">✗</div>\r\n              <h3>提交失败</h3>\r\n              <p>{{ submitError }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n      </template>\r\n\r\n      <!-- Footer导航按钮 - 只在最后阶段显示自定义按钮 -->\r\n      <template #footer-content-right=\"{ currentStage }\">\r\n        <!-- 阶段4: 提交结果 - 显示自定义按钮 -->\r\n        <div v-if=\"currentStage === 4\" class=\"stage-actions\">\r\n          <button class=\"btn btn-primary\" @click=\"resetForm\">\r\n            重新开始\r\n          </button>\r\n          <button class=\"btn btn-secondary\" @click=\"goToDirectory\">\r\n            返回应用目录\r\n          </button>\r\n        </div>\r\n      </template>\r\n    </AppContent>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport { VarTree, createTreeFromConfig, cns, SearchMethod } from '@/utils/VarTree'\r\n\r\nconst router = useRouter()\r\nconst appContentRef = ref()\r\n\r\n// 阶段定义\r\nconst stages = ref(['基本信息录入', '部门职位', '技能经验', '预览确认', '提交结果'])\r\n\r\n// 状态管理\r\nconst isSubmitting = ref(false)\r\nconst submitSuccess = ref(false)\r\nconst submitError = ref('')\r\nconst submittedEmployeeId = ref('')\r\nconst submitTime = ref('')\r\n\r\n// 数据验证状态\r\nconst isBasicInfoValid = computed(() => {\r\n  // 触发强制更新以确保计算属性重新计算\r\n  forceUpdateKey.value\r\n\r\n  const basicInfo = employeeBasicInfoTree.root?.currentValue as any\r\n  if (!basicInfo) return false\r\n\r\n  // 检查核心必填字段\r\n  const coreRequiredFields = ['name', 'email', 'phone']\r\n  const hasCoreFields = coreRequiredFields.every(field => {\r\n    const value = basicInfo[field]\r\n    return value && String(value).trim().length > 0\r\n  })\r\n\r\n  console.log('基本信息验证:', {\r\n    basicInfo,\r\n    hasCoreFields,\r\n    name: basicInfo.name,\r\n    email: basicInfo.email,\r\n    phone: basicInfo.phone,\r\n    forceUpdateKey: forceUpdateKey.value\r\n  })\r\n\r\n  return hasCoreFields\r\n})\r\n\r\nconst isDepartmentInfoValid = computed(() => {\r\n  // 触发强制更新\r\n  forceUpdateKey.value\r\n\r\n  const deptInfo = employeeDepartmentTree.root?.currentValue as any\r\n  if (!deptInfo) return false\r\n\r\n  const isValid = deptInfo.department && String(deptInfo.department).trim().length > 0 &&\r\n                  deptInfo.position && String(deptInfo.position).trim().length > 0\r\n\r\n  console.log('部门信息验证:', {\r\n    deptInfo,\r\n    isValid,\r\n    department: deptInfo?.department,\r\n    position: deptInfo?.position,\r\n    forceUpdateKey: forceUpdateKey.value\r\n  })\r\n\r\n  return isValid\r\n})\r\n\r\n// 员工基本信息数据树\r\nconst employeeBasicInfoTree = createTreeFromConfig(\r\n  cns('dict', 'dict', 'basicInfo', {}, false, {}, [\r\n    cns('string', 'leaf', 'name', '', false, {}, [], '姓名'),\r\n    cns('string', 'leaf', 'email', '', false, {}, [], '邮箱'),\r\n    cns('string', 'leaf', 'phone', '', false, {}, [], '电话'),\r\n    cns('date', 'leaf', 'birthDate', null, false, {}, [], '出生日期'),\r\n    cns('selection', 'leaf', 'gender', '', false, {\r\n      options: ['男', '女', '其他']\r\n    }, [], '性别'),\r\n    cns('dict', 'dict', 'address', {}, false, {}, [\r\n      cns('string', 'leaf', 'province', '', false, {}, [], '省份'),\r\n      cns('string', 'leaf', 'city', '', false, {}, [], '城市'),\r\n      cns('string', 'leaf', 'district', '', false, {}, [], '区县'),\r\n      cns('string', 'leaf', 'street', '', false, {}, [], '详细地址'),\r\n      cns('string', 'leaf', 'zipCode', '', false, {}, [], '邮政编码'),\r\n    ], '地址信息'),\r\n    cns('string', 'leaf', 'idCard', '', false, {}, [], '身份证号'),\r\n    cns('dict', 'dict', 'emergencyContact', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '', false, {}, [], '紧急联系人姓名'),\r\n      cns('string', 'leaf', 'relationship', '', false, {}, [], '关系'),\r\n      cns('string', 'leaf', 'phone', '', false, {}, [], '联系电话'),\r\n    ], '紧急联系人'),\r\n  ], '基本信息')\r\n)\r\n\r\n// 创建搜索方法\r\nconst createDepartmentSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '部门搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'deptSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'deptName', '', false, {}, [], '部门名称'),\r\n        cns('selection', 'leaf', 'deptType', '', false, {\r\n          options: ['技术部', '市场部', '人事部', '财务部', '运营部', '产品部']\r\n        }, [], '部门类型'),\r\n      ], '部门搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/department',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '部门名称',\r\n      description: '描述',\r\n      deptType: '部门类型',\r\n      headCount: '人数'\r\n    }\r\n  },\r\n  {\r\n    name: '职位搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'positionSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'positionName', '', false, {}, [], '职位名称'),\r\n        cns('selection', 'leaf', 'level', '', false, {\r\n          options: ['初级', '中级', '高级', '专家', '管理']\r\n        }, [], '职位级别'),\r\n        cns('number', 'leaf', 'minSalary', null, false, {}, [], '最低薪资'),\r\n        cns('number', 'leaf', 'maxSalary', null, false, {}, [], '最高薪资'),\r\n      ], '职位搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/position',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '职位名称',\r\n      description: '描述',\r\n      level: '职位级别',\r\n      department: '所属部门',\r\n      suggestedSalary: '建议薪资',\r\n      requirements: '任职要求'\r\n    }\r\n  }\r\n]\r\n\r\nconst createManagerSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '员工搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'managerSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'employeeName', '', false, {}, [], '员工姓名'),\r\n        cns('string', 'leaf', 'employeeId', '', false, {}, [], '员工ID'),\r\n        cns('selection', 'leaf', 'department', '', false, {\r\n          options: ['技术部', '市场部', '人事部', '财务部', '运营部', '产品部']\r\n        }, [], '所在部门'),\r\n      ], '员工搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/employee',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '员工姓名',\r\n      description: '描述',\r\n      position: '职位',\r\n      department: '所在部门',\r\n      level: '职级'\r\n    }\r\n  }\r\n]\r\n\r\n// 自定义搜索结果处理函数\r\nconst customDepartmentHandler = (data: any, currentNode: any) => {\r\n  console.log('部门搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n  }\r\n}\r\n\r\nconst customPositionHandler = (data: any, currentNode: any) => {\r\n  console.log('职位搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    // 设置职位名称和建议薪资\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n\r\n    // 如果有薪资信息，自动填充薪资字段\r\n    if (data.firstSelectedResult.suggestedSalary) {\r\n      const salaryNode = employeeDepartmentTree.root?.children.find(child => child.name === 'salary')\r\n      if (salaryNode) {\r\n        salaryNode.currentValue = data.firstSelectedResult.suggestedSalary\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst customManagerHandler = (data: any, currentNode: any) => {\r\n  console.log('上级搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n  }\r\n}\r\n\r\n// 部门职位信息数据树（集成搜索功能）\r\nconst employeeDepartmentTree = createTreeFromConfig(\r\n  cns('dict', 'dict', 'departmentInfo', {}, false, {}, [\r\n    cns('string', 'leaf', 'department', '', false, {\r\n      searchMethods: createDepartmentSearchMethods(),\r\n      customSearchResultHandler: customDepartmentHandler\r\n    }, [], '部门'),\r\n    cns('string', 'leaf', 'position', '', false, {\r\n      searchMethods: createDepartmentSearchMethods().slice(1), // 只使用职位搜索\r\n      customSearchResultHandler: customPositionHandler\r\n    }, [], '职位'),\r\n    cns('date', 'leaf', 'hireDate', null, false, {\r\n      validators: [\r\n        { creteria: (value: any) => {\r\n          if (!value) return false\r\n          const hireDate = new Date(value)\r\n          const today = new Date()\r\n          return hireDate <= today\r\n        }, message: '入职日期不能晚于今天' }\r\n      ]\r\n    }, [], '入职日期'),\r\n    cns('number', 'leaf', 'salary', null, false, {\r\n      validators: [\r\n        { creteria: (value: any) => !value || (value >= 3000 && value <= 100000), message: '薪资范围应在3000-100000之间' }\r\n      ]\r\n    }, [], '薪资'),\r\n    cns('string', 'leaf', 'manager', '', false, {\r\n      searchMethods: createManagerSearchMethods(),\r\n      customSearchResultHandler: customManagerHandler\r\n    }, [], '直属上级'),\r\n  ], '部门职位信息')\r\n)\r\n\r\n// 创建技能搜索方法\r\nconst createSkillSearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '技能库搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'skillSearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'skillName', '', false, {}, [], '技能名称'),\r\n        cns('selection', 'leaf', 'category', '', false, {\r\n          options: ['编程语言', '框架技术', '数据库', '工具软件', '软技能', '认证证书']\r\n        }, [], '技能分类'),\r\n        cns('selection', 'leaf', 'level', '', false, {\r\n          options: ['初级', '中级', '高级', '专家']\r\n        }, [], '要求级别'),\r\n      ], '技能搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/skill',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '技能名称',\r\n      description: '描述',\r\n      category: '技能分类',\r\n      suggestedLevel: '建议级别'\r\n    }\r\n  }\r\n]\r\n\r\nconst createCompanySearchMethods = (): SearchMethod[] => [\r\n  {\r\n    name: '公司搜索',\r\n    paramTree: createTreeFromConfig(\r\n      cns('dict', 'dict', 'companySearchParams', {}, false, {}, [\r\n        cns('string', 'leaf', 'companyName', '', false, {}, [], '公司名称'),\r\n        cns('selection', 'leaf', 'industry', '', false, {\r\n          options: ['互联网', '金融', '制造业', '教育', '医疗', '零售', '咨询']\r\n        }, [], '行业'),\r\n        cns('selection', 'leaf', 'scale', '', false, {\r\n          options: ['创业公司', '中小企业', '大型企业', '跨国公司']\r\n        }, [], '公司规模'),\r\n      ], '公司搜索参数')\r\n    ) as VarTree,\r\n    serviceUrl: '/api/search/mock/company',\r\n    resultHeaderDisplay: {\r\n      id: 'ID',\r\n      result: '公司名称',\r\n      description: '描述',\r\n      industry: '行业',\r\n      scale: '规模'\r\n    }\r\n  }\r\n]\r\n\r\n// 技能搜索结果处理\r\nconst customSkillHandler = (data: any, currentNode: any) => {\r\n  console.log('技能搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n\r\n    // 如果有建议的熟练程度，自动填充\r\n    if (data.firstSelectedResult.suggestedLevel) {\r\n      const skillNode = currentNode.parent\r\n      const levelNode = skillNode?.children.find((child: any) => child.name === 'level')\r\n      if (levelNode) {\r\n        levelNode.currentValue = data.firstSelectedResult.suggestedLevel\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 公司搜索结果处理\r\nconst customCompanyHandler = (data: any, currentNode: any) => {\r\n  console.log('公司搜索结果处理:', data)\r\n  if (data.firstSelectedResult) {\r\n    currentNode.currentValue = data.firstSelectedResult.result\r\n  }\r\n}\r\n\r\n// 技能经验数据树\r\nconst employeeSkillsTree = createTreeFromConfig(\r\n  cns('dict', 'dict', 'skillsInfo', {}, false, {}, [\r\n    cns('dynamiclist', 'list', 'skills', [], false, {}, [\r\n      cns('dict', 'dict', 'skill', {}, false, {}, [\r\n        cns('string', 'leaf', 'skillName', '', false, {\r\n          searchMethods: createSkillSearchMethods(),\r\n          customSearchResultHandler: customSkillHandler\r\n        }, [], '技能名称'),\r\n        cns('selection', 'leaf', 'level', '', false, {\r\n          options: ['初级', '中级', '高级', '专家']\r\n        }, [], '熟练程度'),\r\n        cns('number', 'leaf', 'experience', null, false, {\r\n          validators: [\r\n            { creteria: (value: any) => !value || (value >= 0 && value <= 50), message: '经验年限应在0-50年之间' }\r\n          ]\r\n        }, [], '经验年限'),\r\n      ])\r\n    ], '技能列表'),\r\n    cns('dynamiclist', 'list', 'workExperience', [], false, {}, [\r\n      cns('dict', 'dict', 'experience', {}, false, {}, [\r\n        cns('string', 'leaf', 'company', '', false, {\r\n          searchMethods: createCompanySearchMethods(),\r\n          customSearchResultHandler: customCompanyHandler\r\n        }, [], '公司名称'),\r\n        cns('string', 'leaf', 'position', '', false, {}, [], '职位'),\r\n        cns('date', 'leaf', 'startDate', null, false, {\r\n          validators: [\r\n            { creteria: (value: any) => {\r\n              if (!value) return false\r\n              const startDate = new Date(value)\r\n              const today = new Date()\r\n              return startDate <= today\r\n            }, message: '开始时间不能晚于今天' }\r\n          ]\r\n        }, [], '开始时间'),\r\n        cns('date', 'leaf', 'endDate', null, false, {\r\n          validators: [\r\n            { creteria: (value: any) => {\r\n              if (!value) return true // 结束时间可以为空（表示至今）\r\n              const endDate = new Date(value)\r\n              const today = new Date()\r\n              return endDate <= today\r\n            }, message: '结束时间不能晚于今天' }\r\n          ]\r\n        }, [], '结束时间'),\r\n        cns('string', 'leaf', 'description', '', false, {}, [], '工作描述'),\r\n      ])\r\n    ], '工作经历'),\r\n  ], '技能经验')\r\n)\r\n\r\n// 强制更新计数器\r\nconst forceUpdateKey = ref(0)\r\nconst forceUpdate = () => {\r\n  forceUpdateKey.value++\r\n}\r\n\r\n// 事件处理函数\r\nfunction handleBasicInfoUpdate(payload: any) {\r\n  console.log('基本信息更新:', payload)\r\n  // 强制更新以触发计算属性重新计算\r\n  forceUpdate()\r\n}\r\n\r\nfunction handleDepartmentUpdate(payload: any) {\r\n  console.log('部门信息更新:', payload)\r\n  forceUpdate()\r\n}\r\n\r\nfunction handleSkillsUpdate(payload: any) {\r\n  console.log('技能信息更新:', payload)\r\n  forceUpdate()\r\n}\r\n\r\nfunction handleStageChange(newStage: number, oldStage: number) {\r\n  console.log(`阶段变更: ${oldStage} -> ${newStage}`)\r\n}\r\n\r\nfunction handleNext(currentStage: number) {\r\n  console.log('下一步:', currentStage)\r\n}\r\n\r\nfunction handlePrev(currentStage: number) {\r\n  console.log('上一步:', currentStage)\r\n}\r\n\r\n// 导航钩子 - 专注于每个阶段的验证和业务逻辑\r\nasync function beforeNext(currentStage: number, targetStage: number): Promise<boolean> {\r\n  console.log(`准备从阶段 ${currentStage} 前进到 ${targetStage}`)\r\n\r\n  switch (currentStage) {\r\n    case 0: // 基本信息录入 -> 部门职位\r\n      if (!isBasicInfoValid.value) {\r\n        alert('请完善基本信息（姓名、邮箱、电话）后再继续')\r\n        return false\r\n      }\r\n      console.log('基本信息验证通过')\r\n      break\r\n\r\n    case 1: // 部门职位 -> 技能经验\r\n      if (!isDepartmentInfoValid.value) {\r\n        alert('请完善部门职位信息（部门、职位）后再继续')\r\n        return false\r\n      }\r\n      console.log('部门职位信息验证通过')\r\n      break\r\n\r\n    case 2: // 技能经验 -> 预览确认\r\n      // 可选验证：检查技能列表的完整性\r\n      const skillsInfo = employeeSkillsTree.root?.currentValue as any\r\n      if (skillsInfo?.skills && skillsInfo.skills.length > 0) {\r\n        const incompleteSkills = skillsInfo.skills.some((skill: any) =>\r\n          !skill.skillName || !skill.level\r\n        )\r\n        if (incompleteSkills) {\r\n          const confirmed = confirm('技能列表中有未完成的项目，是否继续？')\r\n          if (!confirmed) return false\r\n        }\r\n      }\r\n      console.log('技能经验信息检查完成')\r\n      break\r\n\r\n    case 3: // 预览确认 -> 提交结果\r\n      // 执行提交逻辑\r\n      const submitResult = await submitEmployeeData()\r\n      if (!submitResult) {\r\n        console.log('提交失败，停留在当前阶段')\r\n        return false\r\n      }\r\n      console.log('数据提交成功')\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nasync function beforePrev(currentStage: number, targetStage: number): Promise<boolean> {\r\n  console.log(`准备从阶段 ${currentStage} 返回到 ${targetStage}`)\r\n\r\n  switch (currentStage) {\r\n    case 4: // 从提交结果返回\r\n      const confirmed = confirm('返回将丢失提交结果，是否确认？')\r\n      if (!confirmed) return false\r\n      break\r\n\r\n    case 3: // 从预览确认返回\r\n      console.log('返回编辑模式')\r\n      break\r\n\r\n    default:\r\n      // 其他阶段直接允许返回\r\n      break\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// 提交员工数据\r\nasync function submitEmployeeData(): Promise<boolean> {\r\n  isSubmitting.value = true\r\n\r\n  try {\r\n    // 收集所有数据\r\n    const employeeData = {\r\n      basicInfo: employeeBasicInfoTree.root?.currentValue,\r\n      departmentInfo: employeeDepartmentTree.root?.currentValue,\r\n      skillsInfo: employeeSkillsTree.root?.currentValue,\r\n    }\r\n\r\n    console.log('提交员工数据:', employeeData)\r\n\r\n    // 调用真实的后端API\r\n    const response = await fetch('http://localhost:3000/api/employee/create', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(employeeData)\r\n    })\r\n\r\n    const result = await response.json()\r\n\r\n    if (result.success) {\r\n      submitSuccess.value = true\r\n      submittedEmployeeId.value = result.data.employeeId\r\n      submitTime.value = new Date().toLocaleString()\r\n      console.log('员工创建成功:', result.data)\r\n    } else {\r\n      throw new Error(result.message || '提交失败')\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('提交失败:', error)\r\n    submitSuccess.value = false\r\n    submitError.value = error instanceof Error ? error.message : '网络错误，请检查后端服务是否启动'\r\n    return true // 仍然允许进入结果页面显示错误\r\n  } finally {\r\n    isSubmitting.value = false\r\n  }\r\n}\r\n\r\n// 重置表单\r\nfunction resetForm() {\r\n  // 重置所有数据树\r\n  if (employeeBasicInfoTree.root) {\r\n    employeeBasicInfoTree.root.currentValue = {}\r\n  }\r\n  if (employeeDepartmentTree.root) {\r\n    employeeDepartmentTree.root.currentValue = {}\r\n  }\r\n  if (employeeSkillsTree.root) {\r\n    employeeSkillsTree.root.currentValue = {}\r\n  }\r\n\r\n  // 重置状态\r\n  isSubmitting.value = false\r\n  submitSuccess.value = false\r\n  submitError.value = ''\r\n  submittedEmployeeId.value = ''\r\n  submitTime.value = ''\r\n\r\n  // 返回第一个阶段\r\n  appContentRef.value?.goToStage(0)\r\n}\r\n\r\n// 返回应用目录\r\nfunction goToDirectory() {\r\n  router.push('/application')\r\n}\r\n\r\nonMounted(() => {\r\n  console.log('Example Application 已加载')\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.example-application {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.stage-content {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n}\r\n\r\n.stage-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.progress-indicator {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.progress-text {\r\n  display: block;\r\n  font-size: 12px;\r\n  color: var(--theme-color-text-secondary);\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 4px;\r\n  background-color: var(--theme-color-border);\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background-color: var(--theme-color-primary);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.stage-header h2 {\r\n  margin: 0 0 8px 0;\r\n  color: var(--theme-color-dark);\r\n  font-size: 24px;\r\n}\r\n\r\n.stage-description {\r\n  margin: 0;\r\n  color: var(--theme-color-text-secondary);\r\n  font-size: 14px;\r\n}\r\n\r\n.form-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.preview-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.preview-section {\r\n  margin-bottom: 30px;\r\n  padding: 15px;\r\n  border: 1px solid var(--theme-color-border);\r\n  border-radius: 8px;\r\n  background-color: var(--theme-color-lighter-a);\r\n}\r\n\r\n.preview-section h3 {\r\n  margin: 0 0 15px 0;\r\n  color: var(--theme-color-dark);\r\n  font-size: 18px;\r\n}\r\n\r\n.stage-actions {\r\n  display: flex;\r\n  gap: 12px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--theme-color-primary);\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: var(--theme-color-primary-dark);\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: var(--theme-color-secondary);\r\n  color: white;\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background-color: var(--theme-color-secondary-dark);\r\n}\r\n\r\n.btn-success {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.btn-success:hover:not(:disabled) {\r\n  background-color: #218838;\r\n}\r\n\r\n.result-container {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.success-message, .error-message {\r\n  text-align: center;\r\n  padding: 40px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.success-message {\r\n  background-color: #d4edda;\r\n  border: 1px solid #c3e6cb;\r\n  color: #155724;\r\n}\r\n\r\n.error-message {\r\n  background-color: #f8d7da;\r\n  border: 1px solid #f5c6cb;\r\n  color: #721c24;\r\n}\r\n\r\n.success-icon, .error-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.success-message h3, .error-message h3 {\r\n  margin: 0 0 12px 0;\r\n  font-size: 20px;\r\n}\r\n\r\n.success-message p, .error-message p {\r\n  margin: 4px 0;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n","import script from \"./ExampleApplication.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ExampleApplication.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ExampleApplication.vue?vue&type=style&index=0&id=5fc5d545&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5fc5d545\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, vModelDynamic as _vModelDynamic, withKeys as _withKeys, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"string-input-container\" }\nconst _hoisted_2 = [\"type\", \"readonly\", \"placeholder\"]\n\nimport { ref, computed, watch } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmits } from './varbox/inputs/InputProps';\r\nimport {getPathString} from './varbox/utils'\r\n\r\nconst characterRestrictionMessage = 'Only letters, numbers and special characters like !@#$%^&* are allowed.';\r\nconst passwordLengthMessage = 'Password must be 8 characters or less.'; \r\n\r\n// 监听 props.Type 的变化，同步更新 currentInputType\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'customeStringInput',\n  props: {...SimpleInputBoxProps,\r\n  modelValue:{\r\n    type: [String, Number],\r\n    default: \"\"\r\n  },\r\n  // 新增\r\n  Type: {\r\n    type: String,\r\n    default: 'text'\r\n  },\r\n},\n  emits: SimpleInputBoxEmits,\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props\r\nconst emit = __emit\r\n\r\nconst slotScopeData = computed(() => ({\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  allProps: props,\r\n  //新增\r\n  internalValue: inputValue,\r\n  inputTypeRef: currentInputType,\r\n  handleInput: handleInput,\r\n  togglePasswordVisibility: togglePasswordVisibility\r\n}));\r\nconst pathString = computed<string>(()=>getPathString(props.tree, props.nodePath))\r\nconst inputValue = ref<string>(\r\n  (typeof props.modelValue === 'number' || typeof props.modelValue === 'string')\r\n    ? String(props.modelValue)\r\n    : ''\r\n)\r\n\r\nconst inputClass = computed(()=>({\r\n        'string-input': true,\r\n        'readonly': props.readonly\r\n      }))\r\n\r\nconst currentInputType = ref(props.Type);\r\n// **定义允许的字符集正则表达式**\r\n// 允许字母 (a-z, A-Z)、数字 (0-9) 和特殊字符 !@#$%^&*\r\n// 你可以根据需要修改这个正则表达式，例如，如果只允许字母和数字：/^[a-zA-Z0-9]*$/\r\nconst allowedCharsRegex = /^[a-zA-Z0-9!@#$%^&*]*$/;\r\n\r\n// **定义非法字符的错误提示信息**\r\nwatch(() => props.Type, (newType) => {\r\n  currentInputType.value = newType;\r\n}, { immediate: true }); // immediate 确保初始化时设置正确\r\n\r\n// 监听 inputValue 的变化，并 emit 给父组件\r\nwatch(inputValue, (newValue) => {\r\n  emit('update:modelValue', newValue);\r\n});\r\n\r\n// 监听 props.modelValue 的变化，同步更新 inputValue\r\n// 这用于处理父组件直接改变 modelValue 的情况 (例如重置)\r\nwatch(() => props.modelValue, (newValue) => {\r\n  const newStringValue = (typeof newValue === 'number' || typeof newValue === 'string')\r\n    ? String(newValue)\r\n    : '';\r\n\r\n  // 只有当 prop 的值与当前 inputValue 不同时才更新，避免无限循环\r\n  // 因为 inputValue 的变化也会通过 watch 触发 update:modelValue\r\n  if (inputValue.value !== newStringValue) {\r\n    console.log(\"Prop modelValue 变化，同步到 inputValue:\", newStringValue);\r\n    inputValue.value = newStringValue;\r\n  }\r\n}, { immediate: true });\r\n\r\n// 统一的校验函数：返回最优先的错误信息\r\nfunction validateAll(value: string): { isValid: boolean; message: string } {\r\n    // 1. 最高优先级：字符合法性校验\r\n    if (!allowedCharsRegex.test(value)) {\r\n        return { isValid: false, message: characterRestrictionMessage };\r\n    }\r\n\r\n    // 2. 次高优先级：密码长度校验\r\n    if (props.Type === 'password' && value.length > 8) {\r\n        return { isValid: false, message: passwordLengthMessage };\r\n    }\r\n    return { isValid: true, message: '' }; // 所有校验都通过\r\n}\r\n\r\nfunction handleBlur() {\r\n  emit('blur', inputValue.value);\r\n}\r\n\r\n// 切换密码可见性的方法\r\nfunction togglePasswordVisibility() {\r\n  console.log(\"切换密码可见性\");\r\n  console.log(\"当前输入类型:\", currentInputType.value);\r\n  currentInputType.value = currentInputType.value === 'password' ? 'text' : 'password';\r\n}\r\n\r\nfunction handleEnter() {\r\n  // 对输入的验证会在Login.vue中处理，这里不需要重复验证\r\n  // if (props.node?.config?.validators !== undefined) {\r\n  //   for (const validator of props.node.config.validators) {\r\n  //     const isValid = validator.creteria(inputValue.value);\r\n  //     if (!isValid) {\r\n  //       const message = validator.message || '输入值不符合要求'\r\n  //       emit('validation-error', message);\r\n  //       return;\r\n  //     }\r\n  //   }\r\n  // } else {\r\n  //   emit('validation-error', '');\r\n  // }\r\n\r\n  // emit('enter', inputValue.value);\r\n  // emit('validation-error', '');\r\n  emit('enter', inputValue.value);//仍然可以发出 enter 事件，让父组件决定如何响应回车\r\n}\r\n\r\nfunction handleInput(event: Event) {\r\n  const target = event.target as HTMLInputElement;\r\n  const newInputValue = target.value;\r\n\r\n  // 始终先对新输入的整个字符串进行完整校验\r\n  const { isValid, message } = validateAll(newInputValue);\r\n\r\n  if (isValid) {\r\n    // 如果当前输入的新值完全合法 (字符和长度都符合)\r\n    inputValue.value = newInputValue; // 更新内部绑定的值\r\n    emit('validation-error', ''); // 清除所有错误信息\r\n  } else {\r\n    // 如果当前输入的新值不合法 (可能是字符非法，也可能是超长)\r\n    // 阻止非法内容进入，将 input 框显示的内容强制回退到上一次合法状态\r\n    target.value = inputValue.value;\r\n    // 发出明确的错误信息 (validateAll 会返回最优先的错误)\r\n    emit('validation-error', message);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, `${pathString.value}--simple`, _normalizeProps(_guardReactiveProps(slotScopeData.value)), () => [\n      _withDirectives(_createElementVNode(\"input\", {\n        type: currentInputType.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((inputValue).value = $event)),\n        readonly: _ctx.readonly,\n        placeholder: _ctx.placeholder,\n        class: _normalizeClass(inputClass.value),\n        onBlur: handleBlur,\n        onKeyup: _withKeys(handleEnter, [\"enter\"]),\n        onInput: handleInput\n      }, null, 42, _hoisted_2), [\n        [_vModelDynamic, inputValue.value]\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"string-input-container\">\r\n    <slot\r\n      :name=\"`${pathString}--simple`\"\r\n      v-bind=\"slotScopeData\"\r\n    >\r\n      <input\r\n        :type=\"currentInputType\"\r\n        v-model=\"inputValue\"\r\n        :readonly=\"readonly\"\r\n        :placeholder=\"placeholder\"\r\n        :class=\"inputClass\"\r\n        @blur=\"handleBlur\"\r\n        @keyup.enter=\"handleEnter\"\r\n        @input=\"handleInput\"\r\n      >\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { SimpleInputBoxProps, SimpleInputBoxEmits } from './varbox/inputs/InputProps';\r\nimport {getPathString} from './varbox/utils'\r\n\r\nconst props = defineProps({...SimpleInputBoxProps,\r\n  modelValue:{\r\n    type: [String, Number],\r\n    default: \"\"\r\n  },\r\n  // 新增\r\n  Type: {\r\n    type: String,\r\n    default: 'text'\r\n  },\r\n})\r\nconst emit = defineEmits(SimpleInputBoxEmits)\r\n\r\nconst slotScopeData = computed(() => ({\r\n  blur: handleBlur,\r\n  handleEnter: handleEnter,\r\n  allProps: props,\r\n  //新增\r\n  internalValue: inputValue,\r\n  inputTypeRef: currentInputType,\r\n  handleInput: handleInput,\r\n  togglePasswordVisibility: togglePasswordVisibility\r\n}));\r\nconst pathString = computed<string>(()=>getPathString(props.tree, props.nodePath))\r\nconst inputValue = ref<string>(\r\n  (typeof props.modelValue === 'number' || typeof props.modelValue === 'string')\r\n    ? String(props.modelValue)\r\n    : ''\r\n)\r\n\r\nconst inputClass = computed(()=>({\r\n        'string-input': true,\r\n        'readonly': props.readonly\r\n      }))\r\n\r\nconst currentInputType = ref(props.Type);\r\n// **定义允许的字符集正则表达式**\r\n// 允许字母 (a-z, A-Z)、数字 (0-9) 和特殊字符 !@#$%^&*\r\n// 你可以根据需要修改这个正则表达式，例如，如果只允许字母和数字：/^[a-zA-Z0-9]*$/\r\nconst allowedCharsRegex = /^[a-zA-Z0-9!@#$%^&*]*$/;\r\n\r\n// **定义非法字符的错误提示信息**\r\nconst characterRestrictionMessage = 'Only letters, numbers and special characters like !@#$%^&* are allowed.';\r\nconst passwordLengthMessage = 'Password must be 8 characters or less.'; \r\n\r\n// 监听 props.Type 的变化，同步更新 currentInputType\r\nwatch(() => props.Type, (newType) => {\r\n  currentInputType.value = newType;\r\n}, { immediate: true }); // immediate 确保初始化时设置正确\r\n\r\n// 监听 inputValue 的变化，并 emit 给父组件\r\nwatch(inputValue, (newValue) => {\r\n  emit('update:modelValue', newValue);\r\n});\r\n\r\n// 监听 props.modelValue 的变化，同步更新 inputValue\r\n// 这用于处理父组件直接改变 modelValue 的情况 (例如重置)\r\nwatch(() => props.modelValue, (newValue) => {\r\n  const newStringValue = (typeof newValue === 'number' || typeof newValue === 'string')\r\n    ? String(newValue)\r\n    : '';\r\n\r\n  // 只有当 prop 的值与当前 inputValue 不同时才更新，避免无限循环\r\n  // 因为 inputValue 的变化也会通过 watch 触发 update:modelValue\r\n  if (inputValue.value !== newStringValue) {\r\n    console.log(\"Prop modelValue 变化，同步到 inputValue:\", newStringValue);\r\n    inputValue.value = newStringValue;\r\n  }\r\n}, { immediate: true });\r\n\r\n// 统一的校验函数：返回最优先的错误信息\r\nfunction validateAll(value: string): { isValid: boolean; message: string } {\r\n    // 1. 最高优先级：字符合法性校验\r\n    if (!allowedCharsRegex.test(value)) {\r\n        return { isValid: false, message: characterRestrictionMessage };\r\n    }\r\n\r\n    // 2. 次高优先级：密码长度校验\r\n    if (props.Type === 'password' && value.length > 8) {\r\n        return { isValid: false, message: passwordLengthMessage };\r\n    }\r\n    return { isValid: true, message: '' }; // 所有校验都通过\r\n}\r\n\r\nfunction handleBlur() {\r\n  emit('blur', inputValue.value);\r\n}\r\n\r\n// 切换密码可见性的方法\r\nfunction togglePasswordVisibility() {\r\n  console.log(\"切换密码可见性\");\r\n  console.log(\"当前输入类型:\", currentInputType.value);\r\n  currentInputType.value = currentInputType.value === 'password' ? 'text' : 'password';\r\n}\r\n\r\nfunction handleEnter() {\r\n  // 对输入的验证会在Login.vue中处理，这里不需要重复验证\r\n  // if (props.node?.config?.validators !== undefined) {\r\n  //   for (const validator of props.node.config.validators) {\r\n  //     const isValid = validator.creteria(inputValue.value);\r\n  //     if (!isValid) {\r\n  //       const message = validator.message || '输入值不符合要求'\r\n  //       emit('validation-error', message);\r\n  //       return;\r\n  //     }\r\n  //   }\r\n  // } else {\r\n  //   emit('validation-error', '');\r\n  // }\r\n\r\n  // emit('enter', inputValue.value);\r\n  // emit('validation-error', '');\r\n  emit('enter', inputValue.value);//仍然可以发出 enter 事件，让父组件决定如何响应回车\r\n}\r\n\r\nfunction handleInput(event: Event) {\r\n  const target = event.target as HTMLInputElement;\r\n  const newInputValue = target.value;\r\n\r\n  // 始终先对新输入的整个字符串进行完整校验\r\n  const { isValid, message } = validateAll(newInputValue);\r\n\r\n  if (isValid) {\r\n    // 如果当前输入的新值完全合法 (字符和长度都符合)\r\n    inputValue.value = newInputValue; // 更新内部绑定的值\r\n    emit('validation-error', ''); // 清除所有错误信息\r\n  } else {\r\n    // 如果当前输入的新值不合法 (可能是字符非法，也可能是超长)\r\n    // 阻止非法内容进入，将 input 框显示的内容强制回退到上一次合法状态\r\n    target.value = inputValue.value;\r\n    // 发出明确的错误信息 (validateAll 会返回最优先的错误)\r\n    emit('validation-error', message);\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.string-input {\r\n  width: 100%;\r\n  padding:10px;\r\n  border:none;\r\n  background-color: var(--login-input-bg);\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  color: white;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.string-input::placeholder {\r\n  color:var(--login-text-placeholder); /* 你想要的占位符颜色，例如一个浅灰色 */\r\n  opacity: 1; /* 某些浏览器会默认给占位符设置透明度，设置 opacity: 1 可以确保颜色完全显示 */\r\n}\r\n\r\n.string-input-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-items: center;\r\n}\r\n\r\n.string-input:focus {\r\n  outline: none;\r\n  border: 1px solid white; /* 聚焦时的边框颜色 */\r\n}\r\n\r\n.string-input.readonly {\r\n  background-color: #F5F7FA;\r\n  cursor: not-allowed;\r\n}\r\n</style>","import script from \"./customeStringInput.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./customeStringInput.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./customeStringInput.vue?vue&type=style&index=0&id=0054ac62&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0054ac62\"]])\n\nexport default __exports__","import axios, { AxiosError } from 'axios'; // 导入 AxiosError 类型\r\n\r\nconst getAPIBaseUrl = () => {\r\n  return window.API_BASE_URL || 'http://localhost:3000'\r\n}\r\n\r\n// // 定义统一的 API 响应类型\r\n// interface ApiResponse<T> {\r\n//     success: boolean;\r\n//     message: string;\r\n//     data?: T; // 成功时的数据\r\n//     statusCode?: number; // HTTP 状态码\r\n//     errorCode?: string; // 后端自定义错误码\r\n//     details?: any; // 更多错误详情，如字段验证错误\r\n// }\r\n\r\n// // 注册接口\r\n// export async function register(username: string, password: string): Promise<ApiResponse<null>> {\r\n//     try {\r\n//         const response = await axios.post(`${API_BASE_URL}/register`, {\r\n//             username,\r\n//             password\r\n//         });\r\n\r\n//         // 假设后端成功响应时，data 结构就是 { success: boolean, message: string }\r\n//         // 如果后端只返回 { message: \"Registered successfully\" }，你可能需要调整 data: response.data\r\n//         return {\r\n//             success: true,\r\n//             message: response.data.message || '注册成功',\r\n//             statusCode: response.status\r\n//         };\r\n//     } catch (error) {\r\n//         const axiosError = error as AxiosError; // 类型断言\r\n\r\n//         if (axiosError.response) {\r\n//             // 服务器返回了状态码在 2xx 之外的响应\r\n//             const errorData = axiosError.response.data as { message?: string, code?: string, details?: any };\r\n//             return {\r\n//                 success: false,\r\n//                 message: errorData.message || '注册失败：服务器返回错误',\r\n//                 statusCode: axiosError.response.status,\r\n//                 errorCode: errorData.code,\r\n//                 details: errorData.details\r\n//             };\r\n//         } else if (axiosError.request) {\r\n//             // 请求已发出，但没有收到响应（例如网络中断，CORS问题）\r\n//             return {\r\n//                 success: false,\r\n//                 message: '注册失败：无响应，请检查网络连接或服务器状态',\r\n//                 details: axiosError.message // Axios 自身的错误消息\r\n//             };\r\n//         } else {\r\n//             // 在设置请求时发生了一些事情，触发了错误\r\n//             return {\r\n//                 success: false,\r\n//                 message: '注册失败：请求设置错误',\r\n//                 details: axiosError.message\r\n//             };\r\n//         }\r\n//     }\r\n// }\r\n\r\n// // 定义登录成功时的数据类型\r\n// interface LoginSuccessData {\r\n//     token: string;\r\n//     user?: { id: string; username: string }; // 可选的用户信息\r\n// }\r\n\r\n// // 登录接口\r\n// export async function login(username: string, password: string): Promise<ApiResponse<LoginSuccessData>> {\r\n//     try {\r\n//         const response = await axios.post(`${API_BASE_URL}/login`, {\r\n//             username,\r\n//             password\r\n//         });\r\n\r\n//         // 假设后端成功响应时，data 结构是 { token: string, message: string, user?: {...} }\r\n//         // 确保你的后端在成功登录时返回了 token\r\n//         if (response.data.token) {\r\n//             return {\r\n//                 success: true,\r\n//                 message: response.data.message || '登录成功',\r\n//                 data: {\r\n//                     token: response.data.token,\r\n//                     user: response.data.user // 如果后端返回用户信息\r\n//                 },\r\n//                 statusCode: response.status\r\n//             };\r\n//         } else {\r\n//             // 如果后端成功返回 2xx 状态码但没有 token（不符合预期）\r\n//             return {\r\n//                 success: false,\r\n//                 message: response.data.message || '登录成功，但未获取到认证信息',\r\n//                 statusCode: response.status,\r\n//                 errorCode: 'NO_TOKEN_RECEIVED'\r\n//             };\r\n//         }\r\n\r\n//     } catch (error) {\r\n//         const axiosError = error as AxiosError; // 类型断言\r\n\r\n//         if (axiosError.response) {\r\n//             // 服务器返回了状态码在 2xx 之外的响应 (如 401 Unauthorized)\r\n//             const errorData = axiosError.response.data as { message?: string, code?: string, details?: any };\r\n//             return {\r\n//                 success: false,\r\n//                 message: errorData.message || '登录失败：用户名或密码不正确',\r\n//                 statusCode: axiosError.response.status,\r\n//                 errorCode: errorData.code,\r\n//                 details: errorData.details\r\n//             };\r\n//         } else if (axiosError.request) {\r\n//             // 请求已发出，但没有收到响应（例如网络中断）\r\n//             return {\r\n//                 success: false,\r\n//                 message: '登录失败：网络连接问题或服务器无响应',\r\n//                 details: axiosError.message\r\n//             };\r\n//         } else {\r\n//             // 在设置请求时发生了一些事情，触发了错误\r\n//             return {\r\n//                 success: false,\r\n//                 message: '登录失败：请求配置错误',\r\n//                 details: axiosError.message\r\n//             };\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// 模拟注册和登录接口\r\n\r\n// 这里使用简单的逻辑模拟注册和登录，实际应用中应连接后端服务\r\n\r\nexport async function register(username: string, password: string) {\r\n    return { success: true, message: 'Registered Successfully' };\r\n}\r\n\r\nexport async function login(username: string, password: string) {\r\n    if (username === 'admin' && password === '123456') {\r\n        return { success: true, token: 'fake-token', message: 'Login Successfully' };\r\n    }\r\n    return { success: false, message: 'Wrong username or password' };\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { id: \"welcome-page-up\" }\nconst _hoisted_2 = { style: {\"width\":\"25%\",\"margin\":\"50px auto\",\"padding\":\"20px\",\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\"} }\nconst _hoisted_3 = { class: \"account-input\" }\nconst _hoisted_4 = { class: \"account-input\" }\nconst _hoisted_5 = { style: {\"width\":\"100%\",\"margin-top\":\"10px\",\"margin-bottom\":\"20px\",\"display\":\"flex\"} }\nconst _hoisted_6 = { style: {\"margin-right\":\"auto\"} }\nconst _hoisted_7 = { style: {\"margin-left\":\"auto\"} }\nconst _hoisted_8 = [\"disabled\"]\n\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport StringInput from '@/components/customeStringInput.vue';\r\nimport { VarTree, createTreeFromConfig, cns, validators, } from '@/utils/VarTree';\r\nimport { login } from '@/api/auth';\r\n\r\n// 定义 VarTree 结构\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Login',\n  setup(__props) {\n\r\nconst formTree = createTreeFromConfig({\r\n    varType: 'dict',\r\n    nodeType: 'dict',\r\n    name: 'form',\r\n    children: [\r\n        cns('string', 'leaf', 'username', '1', false, {\r\n        validators: [{ creteria: validators.required, message: 'Username cannot be empty' }],\r\n        classPrefix: 'username',\r\n        hideLabel: false\r\n        }, [], '用户名'),\r\n        cns('string', 'leaf', 'password', '', false, {\r\n        validators: [{ creteria: validators.required, message: 'Password cannot be empty' }],\r\n        classPrefix: 'password',\r\n        hideLabel: false\r\n        }, [], '密码')\r\n    ]\r\n});\r\n\r\nconst isSubmitting = ref(false);\r\nconst message = ref('');\r\nconst messageType = ref<'success' | 'error'>('success');\r\nconst router = useRouter();\r\nconst readonly = ref(false);\r\n\r\nconst username = ref(\"\");\r\nconst password = ref(\"\");\r\n\r\n// 处理子组件发出的验证错误，统一显示在界面上\r\nfunction handleValidationError(errorMessage: string) {\r\n    if (errorMessage) {\r\n        message.value = errorMessage;\r\n        messageType.value = 'error';\r\n    } else {\r\n        // 如果子组件发送空字符串，表示验证通过，清除错误消息\r\n        message.value = '';\r\n    }\r\n}\r\n\r\nasync function handleLogin() {\r\n    // 每次点击登录时，清除之前的消息\r\n    message.value = '';\r\n    messageType.value = 'error'; // 默认设置为错误类型\r\n\r\n    // 1. 更新 VarTree 节点的值 (可选，取决于你的 VarTree 如何使用)\r\n    // 这是确保 VarTree 中的 currentValue 与 ref 同步的关键\r\n    const usernameNode = formTree.findNodeByPath(['username'])!;\r\n    const passwordNode = formTree.findNodeByPath(['password'])!;\r\n    usernameNode.currentValue = username.value;\r\n    passwordNode.currentValue = password.value;\r\n\r\n    // 2. 执行表单验证\r\n    // 遍历所有需要验证的节点，检查它们是否通过了 VarTree 定义的验证规则\r\n    let isValid = true;\r\n    const nodesToValidate = [usernameNode, passwordNode];\r\n\r\n    for (const node of nodesToValidate) {\r\n        if (node.config?.validators) {\r\n            for (const validator of node.config.validators) {\r\n                if (!validator.creteria(node.currentValue)) {\r\n                    message.value = validator.message || `${node.name} 验证失败`;\r\n                    isValid = false;\r\n                    break; // 找到第一个错误就停止当前节点的验证\r\n                }\r\n            }\r\n        }\r\n        if (!isValid) break; // 如果有节点验证失败，就停止所有节点的验证\r\n    }\r\n\r\n    if (!isValid) {\r\n        return; // 如果验证失败，停止登录流程\r\n    }\r\n\r\n    // 3. 提交数据到后端\r\n    isSubmitting.value = true;\r\n    try {\r\n        const response = await login(username.value, password.value); // 使用 ref 的值\r\n        isSubmitting.value = false;\r\n        message.value = response.message;\r\n        messageType.value = response.success ? 'success' : 'error';\r\n\r\n        if (response.success) {\r\n            localStorage.setItem('token', response.token ?? ''); // 存储 token\r\n            setTimeout(() => router.push('/application/home'), 1000); // 登录成功后跳转到application下的home页面\r\n        }\r\n    } catch (error: any) {\r\n        isSubmitting.value = false;\r\n        // 处理网络错误或其他未知错误\r\n        message.value = error.response?.data?.message || '登录失败，请稍后再试。';\r\n        messageType.value = 'error';\r\n        console.error('Login error:', error);\r\n    }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _cache[4] || (_cache[4] = _createElementVNode(\"h1\", { style: {\"margin-bottom\":\"40px\",\"font-size\":\"39px\"} }, \"WELCOME TO LOGIN\", -1)),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(StringInput, {\n            Type: \"text\",\n            node: _unref(formTree).findNodeByPath(['username']),\n            tree: _unref(formTree),\n            nodePath: ['username'],\n            modelValue: username.value,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((username).value = $event)),\n            placeholder: \"Please enter username\",\n            readonly: readonly.value,\n            onValidationError: handleValidationError\n          }, null, 8, [\"node\", \"tree\", \"modelValue\", \"readonly\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createVNode(StringInput, {\n            Type: \"password\",\n            node: _unref(formTree).findNodeByPath(['password']),\n            tree: _unref(formTree),\n            nodePath: ['password'],\n            modelValue: password.value,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n            placeholder: \"Please enter password\",\n            readonly: readonly.value,\n            onValidationError: handleValidationError\n          }, null, 8, [\"node\", \"tree\", \"modelValue\", \"readonly\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"div\", _hoisted_6, [\n            _createVNode(_component_router_link, { to: \"/register\" }, {\n              default: _withCtx(() => _cache[2] || (_cache[2] = [\n                _createTextVNode(\"Get an account\")\n              ])),\n              _: 1,\n              __: [2]\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createVNode(_component_router_link, { to: \"/getMyPassBack\" }, {\n              default: _withCtx(() => _cache[3] || (_cache[3] = [\n                _createTextVNode(\"Forgot password\")\n              ])),\n              _: 1,\n              __: [3]\n            })\n          ])\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: handleLogin,\n          disabled: isSubmitting.value,\n          class: \"login-button\"\n        }, _toDisplayString(isSubmitting.value ? 'login...' : '你给我摇滚出去🤘'), 9, _hoisted_8),\n        (message.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ color: messageType.value === 'error' ? 'red' : 'white', marginTop: '10px' })\n            }, _toDisplayString(message.value), 5))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _cache[5] || (_cache[5] = _createElementVNode(\"div\", { id: \"welcome-page-down\" }, [\n      _createElementVNode(\"span\", { style: {\"color\":\"var(--login-bg)\",\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"justify-content\":\"center\"} }, [\n        _createElementVNode(\"p\", { style: {\"font-size\":\"xx-large\",\"font-weight\":\"bold\",\"margin\":\"0px\"} }, \"TEAM CCC\"),\n        _createElementVNode(\"br\"),\n        _createElementVNode(\"p\", { style: {\"width\":\"50%\",\"justify-content\":\"center\"} }, \" Our Sales & Distribution (SD) System empowers businesses with end-to-end automation, from customer inquiries to payment collection. Manage customers, orders, shipments, and finances seamlessly in one integrated platform. Boost efficiency, reduce errors, and gain real-time insights-making global sales faster and smarter than ever. \"),\n        _createElementVNode(\"br\"),\n        _createElementVNode(\"span\", null, \"© 2025 Team CCC. All rights reserved.\")\n      ])\n    ], -1))\n  ], 64))\n}\n}\n\n})","<template>\r\n    <div id=\"welcome-page-up\">\r\n        <div style=\"width:25% ; margin: 50px auto; padding: 20px;\r\n            display: flex;flex-direction: column;align-items: center;\">\r\n            <h1 style=\"margin-bottom: 40px;font-size:39px;\">WELCOME TO LOGIN</h1>\r\n            <div class=\"account-input\">\r\n                <string-input\r\n                    Type=\"text\"\r\n                    :node=\"formTree.findNodeByPath(['username'])\"\r\n                    :tree=\"formTree\"\r\n                    :nodePath=\"['username']\"\r\n                    v-model=\"username\"\r\n                    placeholder=\"Please enter username\"\r\n                    :readonly=\"readonly\"\r\n                    @validation-error=\"handleValidationError\" />\r\n            </div>\r\n            <div class=\"account-input\">\r\n                <string-input\r\n                    Type=\"password\"\r\n                    :node=\"formTree.findNodeByPath(['password'])\"\r\n                    :tree=\"formTree\"\r\n                    :nodePath=\"['password']\"\r\n                    v-model=\"password\"\r\n                    placeholder=\"Please enter password\"\r\n                    :readonly=\"readonly\"\r\n                    @validation-error=\"handleValidationError\" />\r\n            </div>\r\n            <div style=\"width:100%;margin-top: 10px;margin-bottom: 20px;display: flex;\">\r\n                <div style=\"margin-right:auto;\">\r\n                    <router-link to=\"/register\">Get an account</router-link>\r\n                </div>\r\n                <div style=\"margin-left:auto;\">\r\n                    <router-link to=\"/getMyPassBack\">Forgot password</router-link>\r\n                </div>\r\n            </div>\r\n            <button\r\n                @click=\"handleLogin\"\r\n                :disabled=\"isSubmitting\"\r\n                class=\"login-button\"\r\n            >\r\n                {{ isSubmitting ? 'login...' : '你给我摇滚出去🤘' }}\r\n            </button>\r\n            <div v-if=\"message\" :style=\"{ color: messageType === 'error' ? 'red' : 'white', marginTop: '10px' }\">\r\n                {{ message }}\r\n            </div>\r\n        </div>  \r\n    </div>\r\n    <div id=\"welcome-page-down\">\r\n        <span style=\"color: var(--login-bg);display: flex;\r\n            flex-direction: column;align-items: center;justify-content: center;\">\r\n            <p style=\"font-size: xx-large;font-weight: bold;margin:0px\">TEAM CCC</p>\r\n            <br><p style=\"width:50%;justify-content: center;\">\r\n                Our Sales & Distribution (SD) System empowers businesses with \r\n                end-to-end automation, from customer inquiries to payment collection. \r\n                Manage customers, orders, shipments, and finances seamlessly in \r\n                one integrated platform. Boost efficiency, reduce errors, \r\n                and gain real-time insights-making global sales faster and smarter than ever.\r\n            </p><br>\r\n            <span>© 2025 Team CCC. All rights reserved.</span>\r\n        </span>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport StringInput from '@/components/customeStringInput.vue';\r\nimport { VarTree, createTreeFromConfig, cns, validators, } from '@/utils/VarTree';\r\nimport { login } from '@/api/auth';\r\n\r\n// 定义 VarTree 结构\r\nconst formTree = createTreeFromConfig({\r\n    varType: 'dict',\r\n    nodeType: 'dict',\r\n    name: 'form',\r\n    children: [\r\n        cns('string', 'leaf', 'username', '1', false, {\r\n        validators: [{ creteria: validators.required, message: 'Username cannot be empty' }],\r\n        classPrefix: 'username',\r\n        hideLabel: false\r\n        }, [], '用户名'),\r\n        cns('string', 'leaf', 'password', '', false, {\r\n        validators: [{ creteria: validators.required, message: 'Password cannot be empty' }],\r\n        classPrefix: 'password',\r\n        hideLabel: false\r\n        }, [], '密码')\r\n    ]\r\n});\r\n\r\nconst isSubmitting = ref(false);\r\nconst message = ref('');\r\nconst messageType = ref<'success' | 'error'>('success');\r\nconst router = useRouter();\r\nconst readonly = ref(false);\r\n\r\nconst username = ref(\"\");\r\nconst password = ref(\"\");\r\n\r\n// 处理子组件发出的验证错误，统一显示在界面上\r\nfunction handleValidationError(errorMessage: string) {\r\n    if (errorMessage) {\r\n        message.value = errorMessage;\r\n        messageType.value = 'error';\r\n    } else {\r\n        // 如果子组件发送空字符串，表示验证通过，清除错误消息\r\n        message.value = '';\r\n    }\r\n}\r\n\r\nasync function handleLogin() {\r\n    // 每次点击登录时，清除之前的消息\r\n    message.value = '';\r\n    messageType.value = 'error'; // 默认设置为错误类型\r\n\r\n    // 1. 更新 VarTree 节点的值 (可选，取决于你的 VarTree 如何使用)\r\n    // 这是确保 VarTree 中的 currentValue 与 ref 同步的关键\r\n    const usernameNode = formTree.findNodeByPath(['username'])!;\r\n    const passwordNode = formTree.findNodeByPath(['password'])!;\r\n    usernameNode.currentValue = username.value;\r\n    passwordNode.currentValue = password.value;\r\n\r\n    // 2. 执行表单验证\r\n    // 遍历所有需要验证的节点，检查它们是否通过了 VarTree 定义的验证规则\r\n    let isValid = true;\r\n    const nodesToValidate = [usernameNode, passwordNode];\r\n\r\n    for (const node of nodesToValidate) {\r\n        if (node.config?.validators) {\r\n            for (const validator of node.config.validators) {\r\n                if (!validator.creteria(node.currentValue)) {\r\n                    message.value = validator.message || `${node.name} 验证失败`;\r\n                    isValid = false;\r\n                    break; // 找到第一个错误就停止当前节点的验证\r\n                }\r\n            }\r\n        }\r\n        if (!isValid) break; // 如果有节点验证失败，就停止所有节点的验证\r\n    }\r\n\r\n    if (!isValid) {\r\n        return; // 如果验证失败，停止登录流程\r\n    }\r\n\r\n    // 3. 提交数据到后端\r\n    isSubmitting.value = true;\r\n    try {\r\n        const response = await login(username.value, password.value); // 使用 ref 的值\r\n        isSubmitting.value = false;\r\n        message.value = response.message;\r\n        messageType.value = response.success ? 'success' : 'error';\r\n\r\n        if (response.success) {\r\n            localStorage.setItem('token', response.token ?? ''); // 存储 token\r\n            setTimeout(() => router.push('/application/home'), 1000); // 登录成功后跳转到application下的home页面\r\n        }\r\n    } catch (error: any) {\r\n        isSubmitting.value = false;\r\n        // 处理网络错误或其他未知错误\r\n        message.value = error.response?.data?.message || '登录失败，请稍后再试。';\r\n        messageType.value = 'error';\r\n        console.error('Login error:', error);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-button {\r\n    width: 100%;\r\n    display: inline-flex; /* 使内容居中更方便 */\r\n    align-items: center; /* 垂直居中 */\r\n    justify-content: center; /* 水平居中 */\r\n    margin: 1%;\r\n    padding: 8px 25px;\r\n    border: 2px solid transparent; /* 初始透明边框 */\r\n    border-radius: 5px;\r\n    background-color: var(--btn-default-bg); \r\n    color:var(--btn-default-text);\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    text-decoration: none; /* 移除可能的下划线（如果是a标签）*/\r\n    cursor:default;\r\n    outline: none; /* 移除默认焦点轮廓 */\r\n    transition: all 0.3s ease; /* 平滑过渡所有属性 */\r\n}\r\n\r\n.login-button:hover {\r\n    background-color: var(--btn-hover-bg); /* 悬停时改变背景色 */\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* 悬停时加深阴影 */\r\n    transform: translateY(-2px); /* 悬停时轻微上浮 */\r\n    color: var(--btn-hover-text); /* 悬停时改变文字颜色 */\r\n}\r\n\r\n.login-button:active {\r\n    background-color: var(--btn-active-bg); /* 点击时改变背景色 */\r\n    box-shadow: 0 2px 4px var(--btn-active-shadow);\r\n    transform: translateY(0); /* 点击时恢复位置 */\r\n}\r\n\r\n.login-button:focus {\r\n    border-color: var(--btn-focus-border); /* 获得焦点时显示蓝色边框 */\r\n    box-shadow: 0 0 0 0.2rem var(--btn-focus-shadow); /* 焦点光晕 */\r\n}\r\n\r\n.account-input {\r\n    width: 100%;\r\n    padding-bottom:15px;\r\n    margin:0%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n#welcome-page-up {\r\n    width: 100%;\r\n    padding-top:60px;\r\n    padding-bottom:40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--login-bg-1);\r\n    color: var(--login-text);\r\n}\r\n\r\n#welcome-page-down {\r\n    width:100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--login-text);\r\n    height: 100%;\r\n}\r\n</style>","import script from \"./Login.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Login.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=185ad690&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-185ad690\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, vModelDynamic as _vModelDynamic, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '@/assets/icons/open-eye.svg'\nimport _imports_1 from '@/assets/icons/closed-eye.svg'\n\n\nconst _hoisted_1 = { id: \"register-page-up\" }\nconst _hoisted_2 = { style: {\"width\":\"25%\",\"margin\":\"50px auto\",\"padding\":\"20px\",\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\"} }\nconst _hoisted_3 = { class: \"account-input\" }\nconst _hoisted_4 = { class: \"account-input\" }\nconst _hoisted_5 = { class: \"password-input-wrapper\" }\nconst _hoisted_6 = [\"type\", \"onUpdate:modelValue\", \"onKeyup\", \"placeholder\", \"readonly\", \"onInput\"]\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = {\n  key: \"open-eye\",\n  src: _imports_0,\n  alt: \"显示密码\",\n  class: \"password-icon\"\n}\nconst _hoisted_9 = {\n  key: \"closed-eye\",\n  src: _imports_1,\n  alt: \"隐藏密码\",\n  class: \"password-icon\"\n}\nconst _hoisted_10 = { style: {\"width\":\"100%\",\"margin-top\":\"10px\",\"margin-bottom\":\"20px\",\"display\":\"flex\"} }\nconst _hoisted_11 = { style: {\"margin-left\":\"auto\",\"display\":\"flex\"} }\nconst _hoisted_12 = [\"disabled\"]\n\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport StringInput from '@/components/customeStringInput.vue';\r\nimport { VarTree, createTreeFromConfig, cns, validators } from '@/utils/VarTree';\r\nimport { register } from '@/api/auth';\r\n\r\n// 定义 VarTree 结构\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Register',\n  setup(__props) {\n\r\nconst formTree = createTreeFromConfig({\r\n    varType: 'dict',\r\n    nodeType: 'dict',\r\n    name: 'form',\r\n    children: [\r\n        cns('string', 'leaf', 'username', '', false, {\r\n        validators: [{ creteria: validators.required, message: '用户名不能为空' }],\r\n        classPrefix: 'username',\r\n        hideLabel: false\r\n        }, [], '用户名'),\r\n        cns('string', 'leaf', 'password', '', false, {\r\n        validators: [{ creteria: validators.required, message: '密码不能为空' }],\r\n        classPrefix: 'password',\r\n        hideLabel: false\r\n        }, [], '密码')\r\n    ]\r\n});\r\n\r\nconst isSubmitting = ref(false);\r\nconst message = ref('');\r\nconst messageType = ref<'success' | 'error'>('success');\r\nconst router = useRouter();\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst readonly = ref(false); // 设置为只读\r\n\r\n// 处理子组件发出的验证错误，统一显示在界面上\r\nfunction handleValidationError(errorMessage: string) {\r\n    if (errorMessage) {\r\n        message.value = errorMessage;\r\n        messageType.value = 'error';\r\n    } else {\r\n        // 如果子组件发送空字符串，表示验证通过，清除错误消息\r\n        message.value = '';\r\n    }\r\n}\r\n\r\n// 如果你需要在父组件处理 password 的 blur 或 enter 事件，在这里定义\r\nfunction handlePasswordBlur(value: string) {\r\n    console.log('Password input blurred:', value);\r\n    // 这里可以添加密码失去焦点时的特定逻辑，例如格式校验\r\n}\r\n\r\nfunction handlePasswordEnter(value: string) {\r\n    console.log('Password input entered:', value);\r\n    handleRegister();\r\n}\r\n\r\n\r\nasync function handleRegister() {\r\n    // 每次点击注册时，清除之前的消息\r\n    message.value = '';\r\n    messageType.value = 'error'; // 默认设置为错误类型\r\n\r\n    // 1. 更新 VarTree 节点的值 (可选，取决于你的 VarTree 如何使用)\r\n    // 这是确保 VarTree 中的 currentValue 与 ref 同步的关键\r\n    const usernameNode = formTree.findNodeByPath(['username'])!;\r\n    const passwordNode = formTree.findNodeByPath(['password'])!;\r\n    usernameNode.currentValue = username.value;\r\n    passwordNode.currentValue = password.value;\r\n\r\n    // 2. 执行表单验证\r\n    // 遍历所有需要验证的节点，检查它们是否通过了 VarTree 定义的验证规则\r\n    let isValid = true;\r\n    const nodesToValidate = [usernameNode, passwordNode];\r\n\r\n    for (const node of nodesToValidate) {\r\n        if (node.config?.validators) {\r\n            for (const validator of node.config.validators) {\r\n                if (!validator.creteria(node.currentValue)) {\r\n                    message.value = validator.message || `${node.name} 验证失败`;\r\n                    isValid = false;\r\n                    break; // 找到第一个错误就停止当前节点的验证\r\n                }\r\n            }\r\n        }\r\n        if (!isValid) break; // 如果有节点验证失败，就停止所有节点的验证\r\n    }\r\n\r\n    if (!isValid) {\r\n        return; // 如果验证失败，停止注册流程\r\n    }\r\n\r\n    // 3. 提交数据到后端\r\n    isSubmitting.value = true;\r\n    try {\r\n        const response = await register(username.value, password.value); // 使用 ref 的值\r\n        isSubmitting.value = false;\r\n        message.value = response.message;\r\n        messageType.value = response.success ? 'success' : 'error';\r\n\r\n        if (response.success) {\r\n            setTimeout(() => router.push('/login'), 1000);\r\n        }\r\n    } catch (error: any) {\r\n        isSubmitting.value = false;\r\n        // 处理网络错误或其他未知错误\r\n        message.value = error.response?.data?.message || 'Registration failed, please try again later.';\r\n        messageType.value = 'error';\r\n        console.error('Register error:', error);\r\n    }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _cache[4] || (_cache[4] = _createElementVNode(\"h1\", { style: {\"margin-bottom\":\"40px\",\"font-size\":\"39px\"} }, \"WELCOME TO US!\", -1)),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(StringInput, {\n            Type: \"text\",\n            node: _unref(formTree).findNodeByPath(['username']),\n            tree: _unref(formTree),\n            nodePath: ['username'],\n            modelValue: username.value,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((username).value = $event)),\n            placeholder: \"Please enter username\",\n            readonly: readonly.value,\n            onValidationError: handleValidationError\n          }, null, 8, [\"node\", \"tree\", \"modelValue\", \"readonly\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createVNode(StringInput, {\n            Type: \"password\",\n            node: _unref(formTree).findNodeByPath(['password']),\n            tree: _unref(formTree),\n            nodePath: ['password'],\n            modelValue: password.value,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n            placeholder: \"Please enter password\",\n            readonly: readonly.value,\n            onValidationError: handleValidationError,\n            onEnter: handlePasswordEnter,\n            onBlur: handlePasswordBlur\n          }, {\n            \"form-password--simple\": _withCtx(({handleEnter,allProps,internalValue,inputTypeRef,handleInput,togglePasswordVisibility}) => [\n              _createElementVNode(\"div\", _hoisted_5, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  class: \"password-input\",\n                  type: inputTypeRef.value,\n                  \"onUpdate:modelValue\": ($event: any) => ((internalValue.value) = $event),\n                  onKeyup: _withKeys(handleEnter, [\"enter\"]),\n                  placeholder: allProps.placeholder,\n                  readonly: allProps.readonly,\n                  onInput: handleInput\n                }, null, 40, _hoisted_6), [\n                  [_vModelDynamic, internalValue.value]\n                ]),\n                _createElementVNode(\"span\", {\n                  class: \"password-toggle-icon\",\n                  onClick: togglePasswordVisibility\n                }, [\n                  _createVNode(_Transition, {\n                    name: \"fade\",\n                    mode: \"out-in\"\n                  }, {\n                    default: _withCtx(() => [\n                      (inputTypeRef.value === 'password')\n                        ? (_openBlock(), _createElementBlock(\"img\", _hoisted_8))\n                        : (_openBlock(), _createElementBlock(\"img\", _hoisted_9))\n                    ]),\n                    _: 2\n                  }, 1024)\n                ], 8, _hoisted_7)\n              ])\n            ]),\n            _: 1\n          }, 8, [\"node\", \"tree\", \"modelValue\", \"readonly\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_10, [\n          _createElementVNode(\"div\", _hoisted_11, [\n            _cache[3] || (_cache[3] = _createElementVNode(\"p\", { style: {\"color\":\"var(--color-link-default)\"} }, \"Already have an account? \", -1)),\n            _createVNode(_component_router_link, { to: \"/login\" }, {\n              default: _withCtx(() => _cache[2] || (_cache[2] = [\n                _createTextVNode(\"Go login!\")\n              ])),\n              _: 1,\n              __: [2]\n            })\n          ])\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: handleRegister,\n          disabled: isSubmitting.value,\n          class: \"register-button\"\n        }, _toDisplayString(isSubmitting.value ? 'Register...' : 'Register'), 9, _hoisted_12),\n        (message.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ color: messageType.value === 'error' ? 'red' : 'white', marginTop: '10px' })\n            }, _toDisplayString(message.value), 5))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _cache[5] || (_cache[5] = _createElementVNode(\"div\", { id: \"register-page-down\" }, [\n      _createElementVNode(\"span\", { style: {\"color\":\"var(--login-bg)\",\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"justify-content\":\"center\"} }, [\n        _createElementVNode(\"p\", { style: {\"font-size\":\"xx-large\",\"font-weight\":\"bold\",\"margin\":\"0px\"} }, \"TEAM CCC\"),\n        _createElementVNode(\"br\"),\n        _createElementVNode(\"p\", { style: {\"width\":\"50%\",\"justify-content\":\"center\"} }, \" Our Sales & Distribution (SD) System empowers businesses with end-to-end automation, from customer inquiries to payment collection. Manage customers, orders, shipments, and finances seamlessly in one integrated platform. Boost efficiency, reduce errors, and gain real-time insights-making global sales faster and smarter than ever. \"),\n        _createElementVNode(\"br\"),\n        _createElementVNode(\"span\", null, \"© 2025 Team CCC. All rights reserved.\")\n      ])\n    ], -1))\n  ], 64))\n}\n}\n\n})","<template>\r\n    <div id=\"register-page-up\">\r\n        <div style=\"width:25% ; margin: 50px auto; padding: 20px;\r\n            display: flex;flex-direction: column;align-items: center;\">\r\n            <h1 style=\"margin-bottom: 40px;font-size:39px;\">WELCOME TO US!</h1>\r\n            <div class=\"account-input\">\r\n                <string-input\r\n                    Type=\"text\"\r\n                    :node=\"formTree.findNodeByPath(['username'])\"\r\n                    :tree=\"formTree\"\r\n                    :nodePath=\"['username']\"\r\n                    v-model=\"username\"\r\n                    placeholder=\"Please enter username\"\r\n                    :readonly=\"readonly\"\r\n                    @validation-error=\"handleValidationError\" />\r\n            </div>\r\n            <div class=\"account-input\">\r\n                <string-input\r\n                    Type=\"password\"\r\n                    :node=\"formTree.findNodeByPath(['password'])\"\r\n                    :tree=\"formTree\"\r\n                    :nodePath=\"['password']\"\r\n                    v-model=\"password\"\r\n                    placeholder=\"Please enter password\"\r\n                    :readonly=\"readonly\"\r\n                    @validation-error=\"handleValidationError\"\r\n                    @enter=\"handlePasswordEnter\"\r\n                    @blur=\"handlePasswordBlur\">\r\n                    <template v-slot:form-password--simple=\"{handleEnter,allProps,internalValue,inputTypeRef,handleInput,togglePasswordVisibility}\">\r\n                        <div class=\"password-input-wrapper\">\r\n                            <input\r\n                                class=\"password-input\"\r\n                                :type=\"inputTypeRef.value\" v-model=\"internalValue.value\" @keyup.enter=\"handleEnter\"\r\n                                :placeholder=\"allProps.placeholder\"\r\n                                :readonly=\"allProps.readonly\"\r\n                                @input=\"handleInput\"\r\n                            />\r\n                            <span\r\n                                class=\"password-toggle-icon\"\r\n                                @click=\"togglePasswordVisibility\">\r\n                                    <!-- {{ inputTypeRef.value === 'password' ? '👁️' : '🔒' }} -->\r\n                                    <Transition name=\"fade\" mode=\"out-in\">\r\n                                        <img\r\n                                            v-if=\"inputTypeRef.value === 'password'\"\r\n                                            key = \"open-eye\" src=\"@/assets/icons/open-eye.svg\" alt=\"显示密码\"\r\n                                            class=\"password-icon\"\r\n                                        />\r\n                                        <img\r\n                                            v-else\r\n                                            key = \"closed-eye\" src=\"@/assets/icons/closed-eye.svg\" alt=\"隐藏密码\"\r\n                                            class=\"password-icon\"\r\n                                        />\r\n                                    </Transition>\r\n                            </span>\r\n                        </div>\r\n                    </template>\r\n                </string-input>\r\n            </div>\r\n            <div style=\"width:100%;margin-top: 10px;margin-bottom: 20px;display: flex;\">\r\n                <div style=\"margin-left:auto;display: flex;\">\r\n                    <p style=\"color: var(--color-link-default);\">Already have an account?&nbsp;</p>\r\n                    <router-link to=\"/login\">Go login!</router-link>\r\n                </div>\r\n            </div>\r\n            <button\r\n                @click=\"handleRegister\"\r\n                :disabled=\"isSubmitting\"\r\n                class=\"register-button\"\r\n            >\r\n                {{ isSubmitting ? 'Register...' : 'Register' }}\r\n            </button>\r\n            <div v-if=\"message\" :style=\"{ color: messageType === 'error' ? 'red' : 'white', marginTop: '10px' }\">\r\n                {{ message }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"register-page-down\">\r\n        <span style=\"color: var(--login-bg);display: flex;\r\n            flex-direction: column;align-items: center;justify-content: center;\">\r\n            <p style=\"font-size: xx-large;font-weight: bold;margin:0px\">TEAM CCC</p>\r\n            <br><p style=\"width:50%;justify-content: center;\">\r\n                Our Sales & Distribution (SD) System empowers businesses with \r\n                end-to-end automation, from customer inquiries to payment collection. \r\n                Manage customers, orders, shipments, and finances seamlessly in \r\n                one integrated platform. Boost efficiency, reduce errors, \r\n                and gain real-time insights-making global sales faster and smarter than ever.\r\n            </p><br>\r\n            <span>© 2025 Team CCC. All rights reserved.</span>\r\n        </span>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport StringInput from '@/components/customeStringInput.vue';\r\nimport { VarTree, createTreeFromConfig, cns, validators } from '@/utils/VarTree';\r\nimport { register } from '@/api/auth';\r\n\r\n// 定义 VarTree 结构\r\nconst formTree = createTreeFromConfig({\r\n    varType: 'dict',\r\n    nodeType: 'dict',\r\n    name: 'form',\r\n    children: [\r\n        cns('string', 'leaf', 'username', '', false, {\r\n        validators: [{ creteria: validators.required, message: '用户名不能为空' }],\r\n        classPrefix: 'username',\r\n        hideLabel: false\r\n        }, [], '用户名'),\r\n        cns('string', 'leaf', 'password', '', false, {\r\n        validators: [{ creteria: validators.required, message: '密码不能为空' }],\r\n        classPrefix: 'password',\r\n        hideLabel: false\r\n        }, [], '密码')\r\n    ]\r\n});\r\n\r\nconst isSubmitting = ref(false);\r\nconst message = ref('');\r\nconst messageType = ref<'success' | 'error'>('success');\r\nconst router = useRouter();\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst readonly = ref(false); // 设置为只读\r\n\r\n// 处理子组件发出的验证错误，统一显示在界面上\r\nfunction handleValidationError(errorMessage: string) {\r\n    if (errorMessage) {\r\n        message.value = errorMessage;\r\n        messageType.value = 'error';\r\n    } else {\r\n        // 如果子组件发送空字符串，表示验证通过，清除错误消息\r\n        message.value = '';\r\n    }\r\n}\r\n\r\n// 如果你需要在父组件处理 password 的 blur 或 enter 事件，在这里定义\r\nfunction handlePasswordBlur(value: string) {\r\n    console.log('Password input blurred:', value);\r\n    // 这里可以添加密码失去焦点时的特定逻辑，例如格式校验\r\n}\r\n\r\nfunction handlePasswordEnter(value: string) {\r\n    console.log('Password input entered:', value);\r\n    handleRegister();\r\n}\r\n\r\n\r\nasync function handleRegister() {\r\n    // 每次点击注册时，清除之前的消息\r\n    message.value = '';\r\n    messageType.value = 'error'; // 默认设置为错误类型\r\n\r\n    // 1. 更新 VarTree 节点的值 (可选，取决于你的 VarTree 如何使用)\r\n    // 这是确保 VarTree 中的 currentValue 与 ref 同步的关键\r\n    const usernameNode = formTree.findNodeByPath(['username'])!;\r\n    const passwordNode = formTree.findNodeByPath(['password'])!;\r\n    usernameNode.currentValue = username.value;\r\n    passwordNode.currentValue = password.value;\r\n\r\n    // 2. 执行表单验证\r\n    // 遍历所有需要验证的节点，检查它们是否通过了 VarTree 定义的验证规则\r\n    let isValid = true;\r\n    const nodesToValidate = [usernameNode, passwordNode];\r\n\r\n    for (const node of nodesToValidate) {\r\n        if (node.config?.validators) {\r\n            for (const validator of node.config.validators) {\r\n                if (!validator.creteria(node.currentValue)) {\r\n                    message.value = validator.message || `${node.name} 验证失败`;\r\n                    isValid = false;\r\n                    break; // 找到第一个错误就停止当前节点的验证\r\n                }\r\n            }\r\n        }\r\n        if (!isValid) break; // 如果有节点验证失败，就停止所有节点的验证\r\n    }\r\n\r\n    if (!isValid) {\r\n        return; // 如果验证失败，停止注册流程\r\n    }\r\n\r\n    // 3. 提交数据到后端\r\n    isSubmitting.value = true;\r\n    try {\r\n        const response = await register(username.value, password.value); // 使用 ref 的值\r\n        isSubmitting.value = false;\r\n        message.value = response.message;\r\n        messageType.value = response.success ? 'success' : 'error';\r\n\r\n        if (response.success) {\r\n            setTimeout(() => router.push('/login'), 1000);\r\n        }\r\n    } catch (error: any) {\r\n        isSubmitting.value = false;\r\n        // 处理网络错误或其他未知错误\r\n        message.value = error.response?.data?.message || 'Registration failed, please try again later.';\r\n        messageType.value = 'error';\r\n        console.error('Register error:', error);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#register-page-up {\r\n    width: 100%;\r\n    padding-top:60px;\r\n    padding-bottom:40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--login-bg-1);\r\n    color: var(--login-text);\r\n}\r\n\r\n#register-page-down {\r\n    width:100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--login-text);\r\n    height: 100%;\r\n}\r\n\r\n.account-input {\r\n    width: 100%;\r\n    padding-bottom:15px;\r\n    margin:0%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.password-input-wrapper {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: var(--login-input-bg);\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n    color:white;\r\n    transition: border-color 0.2s;\r\n    display: flex;\r\n}\r\n\r\n.password-input::placeholder {\r\n    color:var(--login-text-placeholder); /* 你想要的占位符颜色，例如一个浅灰色 */\r\n    opacity: 1; /* 某些浏览器会默认给占位符设置透明度，设置 opacity: 1 可以确保颜色完全显示 */\r\n}\r\n\r\n.password-input {\r\n    flex-grow: 1; /* 允许输入框增长并占据可用空间 */\r\n}\r\n\r\n.password-toggle-icon {\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0px; /* 图标周围的内边距 */\r\n    position: relative; /* 为内部绝对定位的子元素建立定位上下文 */\r\n    width: 30px; /* 图标容器的固定宽度，防止布局偏移 */\r\n    overflow: hidden; /* 在过渡期间隐藏任何溢出内容 */\r\n}\r\n\r\n.password-icon {\r\n    width: 20px; /* 图片的固定宽度 */\r\n    height: 20px; /* 图片的固定高度 */\r\n    display: block; /* 移除行内图片下方的额外空间 */\r\n    object-fit: contain; /* 确保图片内容在其边界内正确缩放 */\r\n\r\n    /* Vue <Transition> 组件所需：用于渐变效果的定位 */\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n/* Vue <Transition> 组件的 CSS 类，用于渐变效果 */\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n    opacity: 0; /* 进入动画的起始状态和离开动画的结束状态：透明度为0 */\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n    transition: opacity 0.3s ease-in-out; /* 透明度属性在 0.3 秒内平滑过渡 */\r\n}\r\n\r\n.register-button {\r\n    width: 100%;\r\n    display: inline-flex; /* 使内容居中更方便 */\r\n    align-items: center; /* 垂直居中 */\r\n    justify-content: center; /* 水平居中 */\r\n    margin: 1%;\r\n    padding: 8px 25px;\r\n    border: 2px solid transparent; /* 初始透明边框 */\r\n    border-radius: 5px;\r\n    background-color: var(--btn-default-bg); \r\n    color:var(--btn-default-text);\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    text-decoration: none; /* 移除可能的下划线（如果是a标签）*/\r\n    cursor:default;\r\n    outline: none; /* 移除默认焦点轮廓 */\r\n    transition: all 0.3s ease; /* 平滑过渡所有属性 */\r\n}\r\n\r\n.register-button:hover {\r\n    background-color: var(--btn-hover-bg); /* 悬停时改变背景色 */\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* 悬停时加深阴影 */\r\n    transform: translateY(-2px); /* 悬停时轻微上浮 */\r\n    color: var(--btn-hover-text); /* 悬停时改变文字颜色 */\r\n}\r\n\r\n.register-button:active {\r\n    background-color: var(--btn-active-bg); /* 点击时改变背景色 */\r\n    box-shadow: 0 2px 4px var(--btn-active-shadow);\r\n    transform: translateY(0); /* 点击时恢复位置 */\r\n}\r\n\r\n.register-button:focus {\r\n    border-color: var(--btn-focus-border); /* 获得焦点时显示蓝色边框 */\r\n    box-shadow: 0 0 0 0.2rem var(--btn-focus-shadow); /* 焦点光晕 */\r\n}\r\n</style>","import script from \"./Register.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Register.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Register.vue?vue&type=style&index=0&id=ecaa0fba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ecaa0fba\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"single-app-card\" @click=\"handleClick\">\r\n        <div class=\"card-content\">\r\n        <slot name=\"text\">\r\n            <span class=\"app-text\">{{ pageName }}</span>\r\n        </slot>\r\n        </div>\r\n        \r\n        <div class=\"card-icon\">\r\n        <slot name=\"icon\">\r\n            <img :src=\"resolvedIconPath\" alt=\"App Icon\" class=\"default-icon\"/>\r\n        </slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent,computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport applicationHistoryManager from '@/utils/ApplicationHistoryManager';\r\n\r\n// **关键改动：使用 require.context() 预加载所有可能的图标**\r\n// 这段代码放在组件定义外部，确保它只执行一次，预加载所有图标。\r\n// 如果放在 setup() 内部，虽然也能工作，但每次组件实例化都会重新创建 context 和 map，效率较低。\r\n// - 第一个参数: 要扫描的目录。这里使用了 '@' 别名。\r\n// - 第二个参数: 是否扫描子目录 (false 表示只扫描当前目录)。\r\n// - 第三个参数: 匹配文件名的正则表达式 (/\\.svg$/ 匹配所有 .svg 文件)。\r\nconst iconContext = require.context('@/assets/icons/', false, /\\.svg$/);\r\n\r\n// 创建一个映射表，将原始的 '@' 别名路径映射到 Webpack 解析后的实际图片 URL\r\nconst iconsMap = {};\r\niconContext.keys().forEach(key => {\r\n  // `key` 通常是 './文件名.svg' 这种形式。我们需要将其转换为 '@/assets/icons/文件名.svg'\r\n  const aliasPath = `@/assets/icons/${key.substring(2)}`; // 移除 './'\r\n  iconsMap[aliasPath] = iconContext(key); // 调用 context 函数获取图片资源的 URL\r\n});\r\n\r\nexport default defineComponent({\r\n    name: 'SingleApp',\r\n    props: {\r\n        /**\r\n         * @description 页面的名称，将作为默认显示的文字\r\n         * @type {string}\r\n         */\r\n        pageName: {\r\n        type: String,\r\n        required: true,\r\n        },\r\n        /**\r\n         * @description 点击时跳转的路由路径\r\n         * @type {string}\r\n         */\r\n        pagePath: {\r\n        type: String,\r\n        required: true,\r\n        },\r\n        /**\r\n         * @description \r\n         * @type {string}\r\n         */\r\n        iconPath: {\r\n        type: String,\r\n        required: false,\r\n        },\r\n    },\r\n    setup(props) {\r\n        console.log(iconsMap); // 输出 iconsMap 以便调试\r\n\r\n        const router = useRouter();\r\n\r\n        // 使用 computed 属性来动态解析 iconPath\r\n        const resolvedIconPath = computed(() => {\r\n            // 首先尝试从 iconsMap 中查找 props.iconPath 对应的图片 URL\r\n            if (props.iconPath && iconsMap[props.iconPath]) {\r\n                return iconsMap[props.iconPath];\r\n            } else {\r\n                // 如果 props.iconPath 不存在，或者在 iconsMap 中找不到对应的图标\r\n                // 则回退到默认图标\r\n                console.log(`Could not resolve icon: ${props.iconPath}. Using default icon.`);\r\n                const defaultIconPath = '@/assets/icons/default-app-icon.svg';\r\n                \r\n                // 确保默认图标也存在于 iconsMap 中\r\n                if (iconsMap[defaultIconPath]) {\r\n                    return iconsMap[defaultIconPath];\r\n                } else {\r\n                    // 如果连默认图标也找不到，则可能是路径错误或未被 require.context() 包含\r\n                    console.error('Default icon itself could not be resolved! Please check \"@/assets/icons/default-app-icon.svg\" path and require.context configuration.');\r\n                    return ''; // 返回空字符串，防止图片加载失败的破碎图标显示\r\n                }\r\n            }\r\n        });\r\n\r\n        const handleClick = () => {\r\n            // 检查 pagePath 是否存在，然后进行路由跳转\r\n            if (props.pagePath) {\r\n                // 记录应用程序访问历史\r\n                // 从 pagePath 中提取 routePath (去掉 /application 前缀)\r\n                const routePath = props.pagePath.startsWith('/application')\r\n                    ? props.pagePath.substring('/application'.length)\r\n                    : props.pagePath;\r\n\r\n                const appInfo = {\r\n                    applicationName: props.pageName,\r\n                    routePath: routePath,\r\n                    lore: '', // HomePage中的应用没有描述信息\r\n                    tags: [] // HomePage中的应用没有标签信息\r\n                };\r\n\r\n                applicationHistoryManager.addVisitRecord(appInfo);\r\n\r\n                router.push(props.pagePath);\r\n            } else {\r\n                console.warn(`SingleApp: pagePath for \"${props.pageName}\" is not defined. Cannot navigate.`);\r\n            }\r\n        };\r\n\r\n        return {\r\n            handleClick,\r\n            resolvedIconPath, \r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.single-app-card {\r\n    width: 90%; /* 固定宽度 */\r\n    height: 180px; /* 固定高度 */\r\n    background-color: var(--theme-color-contrast); /* 背景颜色，可自定义 */\r\n    border-top:1px solid white; /* 边框颜色，可自定义 */\r\n    border-left:1px solid white; /* 边框颜色，可自定义 */\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between; /* 内容在垂直方向上两端对齐 */\r\n    align-items: flex-start; /* 文字内容左对齐 */\r\n    padding: 15px;\r\n    position: relative; /* 启用定位上下文，用于图标的绝对定位 */\r\n    overflow: hidden; /* 隐藏超出边界的内容，确保图标在右下角不溢出 */\r\n    cursor: pointer; /* 鼠标悬停时显示手型，表示可点击 */\r\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; /* 悬停动画 */\r\n}\r\n\r\n.single-app-card:hover {\r\n    transform: translateY(-5px); /* 鼠标悬停时轻微上浮 */\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3); /* 阴影加深 */\r\n}\r\n\r\n.card-content {\r\n    flex-grow: 1; /* 让内容区域占据大部分空间 */\r\n    display: flex;\r\n    align-items: flex-start; /* 文字顶部对齐 */\r\n    color: var(--theme-color-card-text); /* 文字颜色 */\r\n    font-size: 1.1em;\r\n    font-weight: bold;\r\n    text-align: left;\r\n    line-height: 1.3;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    width:60%;\r\n}\r\n\r\n.app-text {\r\n    /* 默认文字样式 */    \r\n    color: var(--theme-color-card-text); /* 可自定义文字颜色 */\r\n}\r\n\r\n.card-icon {\r\n    position: absolute; /* 绝对定位 */\r\n    right: 15px; /* 距离右侧 15px */\r\n    bottom: 15px; /* 距离底部 15px */\r\n    width: 40px; /* 图标容器宽度 */\r\n    height: 40px; /* 图标容器高度 */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /* background-color: rgba(255, 255, 255, 0.1); /* 可选：图标背景，调试时很有用 */\r\n    border-radius: 5px;\r\n}\r\n\r\n.default-icon {\r\n    width: 100%; /* 默认图标填充容器 */\r\n    height: 100%;\r\n    object-fit: contain; /* 保持图片比例 */\r\n    /* filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3)); */\r\n}\r\n</style>","import { render } from \"./SingleApp.vue?vue&type=template&id=4a510771&scoped=true\"\nimport script from \"./SingleApp.vue?vue&type=script&lang=js\"\nexport * from \"./SingleApp.vue?vue&type=script&lang=js\"\n\nimport \"./SingleApp.vue?vue&type=style&index=0&id=4a510771&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a510771\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = { class: \"app-categories\" }\nconst _hoisted_2 = { class: \"app-list\" }\n\nimport SingleApp from '@/components/SingleApp.vue'; // 导入 SingleApp 组件\r\nimport { computed } from 'vue';\r\nimport { createTreeFromConfig, cns } from '@/utils/VarTree'; // 导入 VarTree 相关的工具函数\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'; // 导入 AppContent 组件\r\n\r\n// 定义 VarTree 结构来管理应用类别和每个类别下的应用列表\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Home',\n  setup(__props) {\n\r\nconst appTree = createTreeFromConfig({\r\n    varType: 'dict', // 根节点类型\r\n    nodeType: 'dict', // 根节点类型\r\n    name: 'appCategories', // 根节点名称\r\n    children: [\r\n        // 客户管理类别\r\n        cns('dict', 'dict', 'Customers', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Maintain Business Partner',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/maintain-BP.svg', \r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create BP Relationship',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-BP-relationship.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Display BP Relationship',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-BP-relationship.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Change BP Relationship',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-BP-relationship.svg',\r\n            },\r\n        ], 'Customer Management'),\r\n        \r\n        //订单管理\r\n        cns('dict', 'dict', 'Orders', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create Inquiry',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-inquiry.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Display Inquiry',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-inquiry.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Change Inquiry',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-inquiry.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Manage Sales Quotations',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/manage-sales-quotations.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Manage Sales Orders',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/manage-sales-orders.svg',\r\n            },\r\n        ], 'order management'),\r\n        \r\n        //物流管理\r\n        cns('dict', 'dict', 'Logistics', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create Outbound Delivery',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-outbound-deliveries.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Pick Outbound Delivery',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-outbound-deliveries.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Manage Outbound Deliveries',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/manage-outbound-deliveries.svg',\r\n            }\r\n        ], 'logistics management'),\r\n\r\n        //财务管理\r\n        cns('dict', 'dict', 'Finance', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create Billing Document',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-billing-documents.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Display Billing Document',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-billing-documents.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Change Billing Document',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-billing-documents.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Posting Incoming Payments',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/posting-incoming-payments.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Material Documents Overview',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/material-documents-overview.svg',\r\n            }\r\n        ], 'finance management'),\r\n    ]\r\n});\r\nconsole.log('应用树结构:', appTree.getRoot()?.children);\r\n// 计算属性，用于在模板中方便地遍历所有类别节点\r\nconst appCategories = computed(() => appTree.getRoot()?.children);\r\n\r\n// -- END NEW CONTENT --\r\n\r\n// Home 页面现在作为 Application 的子路由，标题由 Application 组件管理\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(AppContent, {\n    stages: ['home'],\n    hideBottomBar: true\n  }, {\n    \"stage-home\": _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(appCategories.value, (categoryNode) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: categoryNode.name,\n            class: \"app-category\"\n          }, [\n            _createElementVNode(\"h3\", null, _toDisplayString(<string>(categoryNode.name)), 1),\n            _createElementVNode(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categoryNode.children, (app) => {\n                return (_openBlock(), _createBlock(SingleApp, {\n                  key: app.name,\n                  pageName: app.name,\n                  pagePath: `/application/${app.name.toLowerCase().replace(/\\s/g, '-')}`,\n                  iconPath: app.iconPath\n                }, null, 8, [\"pageName\", \"pagePath\", \"iconPath\"]))\n              }), 128))\n            ])\n          ]))\n        }), 128))\n      ])\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<template>\r\n    <AppContent\r\n        :stages=\"['home']\"\r\n        :hideBottomBar=\"true\"\r\n    >\r\n        <template #stage-home>\r\n            <div class=\"app-categories\">\r\n                <div v-for=\"categoryNode in appCategories\" :key=\"categoryNode.name\" class=\"app-category\">\r\n                    <h3>{{ <string>(categoryNode.name) }}</h3>\r\n                    <div class=\"app-list\">\r\n                        <SingleApp\r\n                            v-for=\"app in categoryNode.children\"\r\n                            :key=\"app.name\"\r\n                            :pageName=\"app.name\"\r\n                            :pagePath=\"`/application/${app.name.toLowerCase().replace(/\\s/g, '-')}`\"\r\n                            :iconPath=\"app.iconPath\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </AppContent>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport SingleApp from '@/components/SingleApp.vue'; // 导入 SingleApp 组件\r\nimport { computed } from 'vue';\r\nimport { createTreeFromConfig, cns } from '@/utils/VarTree'; // 导入 VarTree 相关的工具函数\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'; // 导入 AppContent 组件\r\n\r\n// 定义 VarTree 结构来管理应用类别和每个类别下的应用列表\r\nconst appTree = createTreeFromConfig({\r\n    varType: 'dict', // 根节点类型\r\n    nodeType: 'dict', // 根节点类型\r\n    name: 'appCategories', // 根节点名称\r\n    children: [\r\n        // 客户管理类别\r\n        cns('dict', 'dict', 'Customers', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Maintain Business Partner',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/maintain-BP.svg', \r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create BP Relationship',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-BP-relationship.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Display BP Relationship',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-BP-relationship.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Change BP Relationship',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-BP-relationship.svg',\r\n            },\r\n        ], 'Customer Management'),\r\n        \r\n        //订单管理\r\n        cns('dict', 'dict', 'Orders', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create Inquiry',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-inquiry.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Display Inquiry',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-inquiry.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Change Inquiry',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-inquiry.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Manage Sales Quotations',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/manage-sales-quotations.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Manage Sales Orders',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/manage-sales-orders.svg',\r\n            },\r\n        ], 'order management'),\r\n        \r\n        //物流管理\r\n        cns('dict', 'dict', 'Logistics', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create Outbound Delivery',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-outbound-deliveries.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Pick Outbound Delivery',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-outbound-deliveries.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Manage Outbound Deliveries',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/manage-outbound-deliveries.svg',\r\n            }\r\n        ], 'logistics management'),\r\n\r\n        //财务管理\r\n        cns('dict', 'dict', 'Finance', null, true, {}, [\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Create Billing Document',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-billing-documents.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Display Billing Document',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-billing-documents.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Change Billing Document',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/create-billing-documents.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Posting Incoming Payments',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/posting-incoming-payments.svg',\r\n            },\r\n            {\r\n                varType: 'string',\r\n                nodeType: \"leaf\",\r\n                name: 'Material Documents Overview',\r\n                readonly: true,\r\n                iconPath: '@/assets/icons/material-documents-overview.svg',\r\n            }\r\n        ], 'finance management'),\r\n    ]\r\n});\r\nconsole.log('应用树结构:', appTree.getRoot()?.children);\r\n// 计算属性，用于在模板中方便地遍历所有类别节点\r\nconst appCategories = computed(() => appTree.getRoot()?.children);\r\n\r\n// -- END NEW CONTENT --\r\n\r\n// Home 页面现在作为 Application 的子路由，标题由 Application 组件管理\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.home-page-layout {\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    height: 100vh;\r\n    max-height: 100vh;\r\n    background-color: var(--theme-color-dark);\r\n    display: flex; /* 让导航栏和内容区能够垂直排列 */\r\n    flex-direction: column;\r\n}\r\n\r\n.home-content{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1; /* 让 home-content 占据除了导航栏外的所有可用垂直空间 */\r\n    background-color: var(--theme-color-dark);\r\n    width: 100%;\r\n    padding: 20px; /* 为内容添加整体内边距 */\r\n    box-sizing: border-box; /* 确保 padding 不会增加总宽度 */\r\n    overflow-y: auto; /* 当内容超出时允许垂直滚动 */\r\n}\r\n\r\n.horizontal-line {\r\n  height: 2px; /* 横线高度 */\r\n  background-color: rgba(255, 255, 255, 0.3); /* 白色半透明横线 */\r\n  margin: 0 0 20px 0; /* 仅在底部留白，因为 home-content 已经有左右 padding */\r\n}\r\n\r\n.app-dashboard-container {\r\n  padding-top: 20px; /* 与上方横线和页面标题的间距 */\r\n  flex-grow: 1; /* 让仪表盘容器占据剩余空间 */\r\n  background-color: var(--theme-color-page);\r\n  border-radius: 10px;\r\n}\r\n\r\nh2 {\r\n    font-size: 2em;\r\n    margin-bottom: 30px;\r\n    text-align: center;\r\n    color: var(--theme-color-text); /* 主要文字颜色，假设已全局定义 */\r\n}\r\n\r\n.app-categories {\r\n    display: flex;\r\n    flex-wrap: wrap; /* 允许分类容器在空间不足时换行 */\r\n    gap: 10px; /* 各个分类容器之间的间距 */\r\n    justify-content: center; /* 让分类容器在主轴（水平方向）上居中 */\r\n    align-items: flex-start; /* 确保所有分类从顶部对齐 */\r\n    min-height: auto;\r\n}\r\n\r\n.app-category {\r\n    padding-top: 25px;\r\n    padding-bottom: 25px;\r\n    display: flex;\r\n    flex-direction: column; /* 分类内的应用 (SingleApp) 竖向排列 */\r\n    gap: 15px; /* 分类内各个 SingleApp 之间的间距 */\r\n    min-width: 280px; /* 确保每个分类有最小宽度 */\r\n    max-width: 400px; /* 限制分类容器的最大宽度 */\r\n    flex: 1; /* 允许分类容器在 Flex 容器中伸缩，但会尝试占据等量空间 */\r\n    min-height: auto;\r\n}\r\n\r\nh3 {\r\n    font-size: 1.5em;\r\n    color: var(--theme-color-dark); /* 分类标题的颜色 */\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.app-list {\r\n    display: flex;\r\n    flex-direction: column; /* 应用列表（SingleApp 集合）竖向排列 */\r\n    align-items: center; /* 列表内的应用居中对齐 */\r\n    gap: 25px; /* 列表内各个 SingleApp 之间的间距 */\r\n}\r\n\r\n/* 默认图标样式，确保它在 SingleApp 内部的 icon 插槽中正确显示 */\r\n.default-icon {\r\n    width: 100%; /* 填充 SingleApp 的图标容器 */\r\n    height: 100%;\r\n    object-fit: contain; /* 保持图片比例 */\r\n    filter: grayscale(100%) brightness(150%); /* 示例：默认图标可以灰度化并提亮 */\r\n}\r\n\r\n</style>","import script from \"./Home.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=642dc745&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-642dc745\"]])\n\nexport default __exports__","import { VarTree, VarNode, createTreeFromConfig, createNodeFromConfig, cns, type NodeStructure } from '@/utils/VarTree'\r\nimport { ref, computed, type Ref } from 'vue'\r\n\r\n/**\r\n * ItemCondition 配套工具类配置\r\n */\r\nexport interface ItemConditionKitConfig {\r\n  validationEndpoint: string\r\n  readonly?: boolean\r\n  navigationLabels?: {\r\n    cancel?: string\r\n    save?: string\r\n    previous?: string\r\n    next?: string\r\n  }\r\n  // 自定义详细信息页面结构\r\n  detailStructures?: {\r\n    header?: NodeStructure\r\n    sales?: NodeStructure\r\n    conditions?: NodeStructure\r\n  }\r\n}\r\n\r\n/**\r\n * ItemCondition 配套工具类\r\n * 提供完整的 items 列表和详细信息管理功能\r\n */\r\nexport class ItemConditionKit {\r\n  private config: ItemConditionKitConfig\r\n  private itemsNodeRef: Ref<VarNode | null> = ref(null)\r\n  private detailTrees: { header?: VarTree, sales?: VarTree, conditions?: VarTree } = {}\r\n  \r\n  // 默认的详细信息结构\r\n  private static defaultDetailStructures = {\r\n    header: cns('dict','dict','itemDetailHeader',{},true,{\r\n      childNameDisplayTranslation: {\r\n        item: 'Sales Document Item',\r\n        material: 'Material'\r\n      }\r\n    },[\r\n      cns('string','leaf','item','',false,{},[]),\r\n      cns('string','leaf','material','',false,{},[]),\r\n    ]),\r\n    \r\n    sales: cns('dict','dict','itemDetailSales',{},false,{hideLabel:true},[\r\n      cns('dict','dict','orderQuantityAndDeliveryDate',{},false,{\r\n        childNameDisplayTranslation: {\r\n          orderQuantity: 'Quantity',\r\n          reqDelivDate: 'First Delivery Date'\r\n        },\r\n        hideList: ['orderQuantityUnit']\r\n      },[\r\n        cns('string','leaf','orderQuantity','',false,{},[]),\r\n        cns('string','leaf','orderQuantityUnit','',false,{hideLabel:true},[]),\r\n        cns('date','leaf','reqDelivDate','',false,{},[]),\r\n      ],'Order Quantity and Delivery Date'),\r\n      cns('dict','dict','generalSalesData',{},false,{\r\n        childNameDisplayTranslation: {\r\n          pricingDate: 'Pricing Date: ',\r\n          orderProbability: 'Order Probability: '\r\n        },\r\n        hideList: ['netValueUnit']\r\n      },[\r\n        cns('string','leaf','netValue','',true,{},[]),\r\n        cns('string','leaf','netValueUnit','',true,{hideLabel:true},[]),\r\n        cns('string','leaf','pricingDate','',false,{},[]),\r\n        cns('string','leaf','orderProbability','1',false,{},[]),\r\n      ])\r\n    ]),\r\n    \r\n    conditions: cns('dict','dict','itemDetailConditions',{},false,{\r\n      childNameDisplayTranslation: {\r\n        orderQuantity: 'Quantity',\r\n      },\r\n      hideList: ['orderQuantityUnit', 'netValueUnit', 'taxValueUnit']\r\n    },[\r\n      cns('string','leaf','orderQuantity','',false,{},[]),\r\n      cns('string','leaf','orderQuantityUnit','',false,{hideLabel:true},[]),\r\n      cns('string','leaf','netValue','',true,{},[]),\r\n      cns('string','leaf','netValueUnit','',true,{hideLabel:true},[]),\r\n      cns('string','leaf','taxValue','',true,{},[]),\r\n      cns('string','leaf','taxValueUnit','',true,{hideLabel:true},[]),\r\n      cns('dynamiclist','list','pricingElements',null,true,{\r\n        rowProvided:0,\r\n        childTemplate:cns('dict','dict','condition',null,false,{},[\r\n          cns('string','leaf','cnty','',false,{},[],\"Cnty\"),\r\n          cns('string','leaf','name','',false,{},[],\"Name\"),\r\n          cns('string','leaf','amount','',false,{},[],\"Amount\"),\r\n          cns('string','leaf','city','',false,{},[],\"City\"),\r\n          cns('string','leaf','per','',false,{},[],\"per\"),\r\n          cns('string','leaf','uom','',false,{},[],\"UoM\"),\r\n          cns('string','leaf','conditionValue','',false,{},[],\"Condition Value\"),\r\n          cns('string','leaf','curr','',false,{},[],\"Curr.\"),\r\n          cns('string','leaf','status','',false,{},[],\"Status\"),\r\n          cns('string','leaf','numC','',false,{},[],\"NumC\"),\r\n          cns('string','leaf','atoMtsComponent','',false,{},[],\"ATO/MTS Component\"),\r\n          cns('string','leaf','oun','',false,{},[],\"OUn\"),\r\n          cns('string','leaf','cconDe','',false,{},[],\"CConDe\"),\r\n          cns('string','leaf','un','',false,{},[],\"Un\"),\r\n          cns('string','leaf','conditionValue2','',false,{},[],\"Condition Value\"),\r\n          cns('string','leaf','cdCur','',false,{},[],\"CdCur\"),\r\n          cns('boolean','leaf','stat',false,false,{},[],\"Stat\"),\r\n        ]),\r\n      },[],\"Pricing Elements\")\r\n    ])\r\n  }\r\n\r\n  constructor(config: ItemConditionKitConfig) {\r\n    this.config = {\r\n      readonly: false,\r\n      navigationLabels: {\r\n        cancel: 'Cancel',\r\n        save: 'Save',\r\n        previous: '← Previous',\r\n        next: 'Next →'\r\n      },\r\n      ...config\r\n    }\r\n    \r\n    // 初始化详细信息树\r\n    this.initializeDetailTrees()\r\n  }\r\n\r\n  /**\r\n   * 初始化详细信息树\r\n   */\r\n  private initializeDetailTrees() {\r\n    const structures = {\r\n      ...ItemConditionKit.defaultDetailStructures,\r\n      ...this.config.detailStructures\r\n    }\r\n\r\n    if (structures.header) {\r\n      this.detailTrees.header = createTreeFromConfig(structures.header)\r\n      // 设置根节点的名称用于识别\r\n      if (this.detailTrees.header.root) {\r\n        this.detailTrees.header.root.name = 'itemDetailHeader'\r\n      }\r\n    }\r\n    if (structures.sales) {\r\n      this.detailTrees.sales = createTreeFromConfig(structures.sales)\r\n      if (this.detailTrees.sales.root) {\r\n        this.detailTrees.sales.root.name = 'itemDetailSales'\r\n      }\r\n    }\r\n    if (structures.conditions) {\r\n      this.detailTrees.conditions = createTreeFromConfig(structures.conditions)\r\n      if (this.detailTrees.conditions.root) {\r\n        this.detailTrees.conditions.root.name = 'itemDetailConditions'\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建 items 节点的函数\r\n   * @param tree - 目标 VarTree\r\n   * @param path - items 节点在树中的路径\r\n   * @param itemTemplate - 可选的自定义 item 模板\r\n   */\r\n  summonItemsNode = (tree: VarTree, path: string[], itemTemplate?: NodeStructure): VarNode => {\r\n    // 默认的 item 模板\r\n    const defaultItemTemplate = cns('dict','dict','item',null,false,{},[\r\n      cns('string','leaf','item','',true,{},[],\"Item\"),\r\n      cns('string','leaf','material','',false,{},[],\"Material\"),\r\n      cns('string','leaf','orderQuantity','',false,{},[],\"Order Quantity\"),\r\n      cns('string','leaf','orderQuantityUnit','',false,{hideLabel:true},[],\"SU\"),\r\n      cns('string','leaf','description','',false,{},[],\"Description\"),\r\n      cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date\"),\r\n      cns('string','leaf','netValue','',true,{},[],\"Net: \"),\r\n      cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit\"),\r\n      cns('string','leaf','taxValue','',true,{},[],\"Tax: \"),\r\n      cns('string','leaf','taxValueUnit','',true,{hideLabel:true},[],\"Tax Value Unit\"),\r\n      cns('date','leaf','pricingDate','',false,{},[],\"Pricing Date\"),\r\n      cns('string','leaf','orderProbability','',false,{},[],\"Order Probability\"),\r\n      cns('dynamiclist','list','pricingElements',null,true,{\r\n        rowProvided:0,\r\n        childTemplate: ItemConditionKit.defaultDetailStructures.conditions.children![6].config!.childTemplate\r\n      },[],\"Pricing Elements\"),\r\n    ])\r\n\r\n    // 创建 items 节点\r\n    const itemsNode = createNodeFromConfig(\r\n      cns('dynamiclist','list','items',null,false,{\r\n        hideLabel:true,\r\n        hideList: ['netValue', 'netValueUnit', 'pricingDate', 'orderProbability','reqDelivDate','taxValue','taxValueUnit','pricingElements'],\r\n        childTemplate: itemTemplate || defaultItemTemplate\r\n      },[],\"Items\")\r\n    )\r\n\r\n    // 将节点添加到指定路径\r\n    const parentNode = tree.findNodeByPath(path.slice(0, -1))\r\n    if (parentNode) {\r\n      itemsNode.name = path[path.length - 1]\r\n      parentNode.addChild(itemsNode)\r\n    } else {\r\n      // 如果路径不存在，直接替换到指定路径\r\n      tree.replaceNodeByPath(itemsNode, path)\r\n    }\r\n\r\n    // 保存引用\r\n    this.itemsNodeRef.value = itemsNode\r\n    \r\n    return itemsNode\r\n  }\r\n\r\n  /**\r\n   * 获取详细信息页面组件的配置\r\n   */\r\n  get detailPageConfig() {\r\n    return {\r\n      itemsNode: this.itemsNodeRef.value,\r\n      validationEndpoint: this.config.validationEndpoint,\r\n      detailTrees: [\r\n        {\r\n          name: 'sales',\r\n          tree: this.detailTrees.sales!,\r\n          headerTree: this.detailTrees.header,\r\n          tabs: [\r\n            { label: 'Sales', value: 0 },\r\n            { label: 'Conditions', value: 1 }\r\n          ]\r\n        },\r\n        {\r\n          name: 'conditions', \r\n          tree: this.detailTrees.conditions!,\r\n          headerTree: this.detailTrees.header\r\n        }\r\n      ],\r\n      readonly: this.config.readonly,\r\n      navigationLabels: this.config.navigationLabels\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取当前选中的 items\r\n   */\r\n  get selectedItems() {\r\n    return computed(() => this.itemsNodeRef.value?.getSelectedChildren() || [])\r\n  }\r\n\r\n  /**\r\n   * 获取 items 节点\r\n   */\r\n  get itemsNode() {\r\n    return this.itemsNodeRef.value\r\n  }\r\n\r\n  /**\r\n   * 设置 items 节点引用\r\n   * @param itemsNode - 要设置的 items 节点\r\n   */\r\n  setItemsNode(itemsNode: VarNode | null) {\r\n    this.itemsNodeRef.value = itemsNode\r\n  }\r\n\r\n  /**\r\n   * 更新配置\r\n   */\r\n  updateConfig(newConfig: Partial<ItemConditionKitConfig>) {\r\n    this.config = { ...this.config, ...newConfig }\r\n  }\r\n\r\n  /**\r\n   * 获取详细信息树（用于调试或高级用法）\r\n   */\r\n  getDetailTrees() {\r\n    return this.detailTrees\r\n  }\r\n}\r\n\r\n/**\r\n * 创建 ItemConditionKit 实例的工厂函数\r\n */\r\nexport function createItemConditionKit(config: ItemConditionKitConfig): ItemConditionKit {\r\n  return new ItemConditionKit(config)\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, createVNode as _createVNode, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, Teleport as _Teleport } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"item-condition-detail\"\n}\nconst _hoisted_2 = {\n  key: 0,\n  class: \"item-navigation\"\n}\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = { class: \"item-counter\" }\nconst _hoisted_5 = [\"disabled\"]\nconst _hoisted_6 = {\n  key: 4,\n  class: \"item-condition-actions\"\n}\n\nimport { ref, computed, watch, nextTick, onMounted, onUnmounted } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport FilterTabs from '@/components/FilterTabs.vue'\r\nimport { type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport { VarNode, VarTree } from '@/utils/VarTree'\r\n\r\n// Props\r\ninterface Props {\r\n  kit: ItemConditionKit\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ItemConditionDetail',\n  props: {\n    kit: {}\n  },\n  emits: [\"save\", \"cancel\", \"validation-failed\", \"validation-success\"],\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\r\nconst props = __props\r\n\r\n// Events\r\nconst emit = __emit\r\n\r\n// 响应式数据\r\nconst selectedItems = ref<VarNode[]>([])\r\nconst currentItemIndex = ref(0)\r\nconst currentTabIndex = ref(0)\r\nconst editingNode = ref<{ node: VarNode | null }>({ node: null })\r\nconst isDataReady = ref(false)\r\n\r\n// Teleport 相关状态\r\nconst teleportTarget = ref<string | null>(null)\r\nconst showButtonsInline = ref(true)\r\n\r\n// 计算属性\r\nconst config = computed(() => props.kit.detailPageConfig)\r\nconst hasMultipleItems = computed(() => selectedItems.value.length > 1)\r\nconst canGoPrevious = computed(() => currentItemIndex.value > 0)\r\nconst canGoNext = computed(() => currentItemIndex.value < selectedItems.value.length - 1)\r\nconst hasTabs = computed(() => config.value.detailTrees[0]?.tabs && config.value.detailTrees[0].tabs.length > 0)\r\nconst tabsConfig = computed(() => config.value.detailTrees[0]?.tabs || [])\r\nconst currentDetailTree = computed(() => {\r\n  if (hasTabs.value && config.value.detailTrees.length > 1) {\r\n    return config.value.detailTrees[currentTabIndex.value] || config.value.detailTrees[0]\r\n  }\r\n  return config.value.detailTrees[0]\r\n})\r\n\r\n// API 基础 URL\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\n\r\n/**\r\n * 处理 Items 表格的按钮点击事件\r\n */\r\nasync function handleItemsTableClick() {\r\n  if (!config.value.itemsNode) {\r\n    console.error('Items node not found')\r\n    return\r\n  }\r\n\r\n  const selectedChildren = [...config.value.itemsNode.getSelectedChildren()]\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 先检查所有选中的item是否有validation状态\r\n    const itemsWithoutValidation = selectedChildren.filter(item =>\r\n      item.config.data?.validation === undefined\r\n    )\r\n\r\n    // 如果有未验证的item，先进行验证\r\n    if (itemsWithoutValidation.length > 0) {\r\n      console.log('发现未验证的item，进行验证...')\r\n      const result = await validateItems(itemsWithoutValidation as VarNode[])\r\n      if (!result) {\r\n        console.log('验证失败，无法继续')\r\n        emit('validation-failed', itemsWithoutValidation as VarNode[])\r\n        return\r\n      }\r\n    }\r\n\r\n    // 再次检查所有选中的item是否都验证通过\r\n    const hasInvalidItems = selectedChildren.some(item =>\r\n      item.config.data?.validation === false\r\n    )\r\n\r\n    if (hasInvalidItems) {\r\n      console.log('存在验证未通过的item，无法继续')\r\n      emit('validation-failed', selectedChildren as VarNode[])\r\n      return\r\n    }\r\n\r\n    // 所有验证都通过，准备数据\r\n    selectedItems.value = selectedChildren as VarNode[]\r\n    currentItemIndex.value = 0\r\n    currentTabIndex.value = 0\r\n\r\n    // 确保数据准备完成后再更新详细信息树\r\n    await nextTick()\r\n    updateItemDetailTrees()\r\n\r\n    // 等待数据准备完成\r\n    await nextTick()\r\n\r\n    // 确保 isDataReady 为 true 后再继续\r\n    if (!isDataReady.value) {\r\n      console.warn('数据未准备完成，等待...')\r\n      await nextTick()\r\n    }\r\n\r\n    // 成功进入详情页面后，清空items表格的选中状态\r\n    config.value.itemsNode.children.forEach(child => {\r\n      child.setSelection(false)\r\n    })\r\n\r\n    emit('validation-success', selectedItems.value as VarNode[])\r\n  } else {\r\n    console.log('No items selected')\r\n    // 没有选中物品时，不应该进入详细信息页面\r\n    emit('validation-failed', [])\r\n  }\r\n}\r\n\r\n/**\r\n * 验证指定的items\r\n */\r\nasync function validateItems(itemNodes: VarNode[]): Promise<boolean> {\r\n  const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}${config.value.validationEndpoint}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(itemValues)\r\n    })\r\n\r\n    const data = await response.json()\r\n    console.log('验证返回的数据', data)\r\n\r\n    if (data.success) {\r\n      // 更新每个item的详细信息\r\n      if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n        data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n          if (index < itemNodes.length) {\r\n            itemNodes[index].forceSetValue(breakdown)\r\n          }\r\n        })\r\n      }\r\n\r\n      // 根据badRecordIndices设置validation\r\n      if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n        // 先重置所有节点的validation\r\n        itemNodes.forEach(node => {\r\n          if (!node.config.data) {\r\n            node.config.data = {}\r\n          }\r\n          node.config.data.validation = true\r\n        })\r\n\r\n        // 设置不合法节点的validation\r\n        data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n          if (badIndex < itemNodes.length) {\r\n            if (!itemNodes[badIndex].config.data) {\r\n              itemNodes[badIndex].config.data = {}\r\n            }\r\n            itemNodes[badIndex].config.data.validation = false\r\n          }\r\n        })\r\n      }\r\n\r\n      return data.data.result.allDataLegal === 1\r\n    }\r\n\r\n    return false\r\n  } catch (error) {\r\n    console.error('验证失败:', error)\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 更新详情页面的树结构数据\r\n * @description 把editingNode.node设为正在编辑节点的一个拷贝，将itemCondition中的输入框指向这个拷贝中的节点\r\n */\r\nfunction updateItemDetailTrees() {\r\n  if (selectedItems.value.length === 0) {\r\n    isDataReady.value = false\r\n    editingNode.value.node = null\r\n    return\r\n  }\r\n\r\n  // 先设置为未准备状态\r\n  isDataReady.value = false\r\n\r\n  const currentItem = selectedItems.value[currentItemIndex.value]\r\n  editingNode.value.node = currentItem.clone() as VarNode as any\r\n  const node = editingNode.value.node\r\n\r\n  console.log('editingNode 初始值:', node!.getValue())\r\n\r\n  // 使用引用传递而不是值拷贝设置\r\n  const setNodeFromItem = (sourcePath: string[], targetPath: string[], targetTree: VarTree) => {\r\n    const sourceNode = node!.findNodeByPath(sourcePath)\r\n    if (sourceNode) {\r\n      // 使用 replaceNodeByPath 让目标树的节点引用源节点\r\n      targetTree.replaceNodeByPath(sourceNode, targetPath)\r\n    }\r\n  }\r\n\r\n  // 更新所有详细信息树\r\n  config.value.detailTrees.forEach(detailTree => {\r\n    // 更新header树（如果存在）\r\n    if (detailTree.headerTree) {\r\n      // Header 树需要的字段\r\n      setNodeFromItem(['item'], ['item'], detailTree.headerTree)\r\n      setNodeFromItem(['material'], ['material'], detailTree.headerTree)\r\n    }\r\n\r\n    // 更新详细信息树\r\n    if (detailTree.tree.root?.name === 'itemDetailSales') {\r\n      // Sales 树需要的字段\r\n      setNodeFromItem(['orderQuantity'], ['orderQuantityAndDeliveryDate', 'orderQuantity'], detailTree.tree)\r\n      setNodeFromItem(['orderQuantityUnit'], ['orderQuantityAndDeliveryDate', 'orderQuantityUnit'], detailTree.tree)\r\n      setNodeFromItem(['reqDelivDate'], ['orderQuantityAndDeliveryDate', 'reqDelivDate'], detailTree.tree)\r\n      setNodeFromItem(['netValue'], ['generalSalesData', 'netValue'], detailTree.tree)\r\n      setNodeFromItem(['netValueUnit'], ['generalSalesData', 'netValueUnit'], detailTree.tree)\r\n      setNodeFromItem(['pricingDate'], ['generalSalesData', 'pricingDate'], detailTree.tree)\r\n      setNodeFromItem(['orderProbability'], ['generalSalesData', 'orderProbability'], detailTree.tree)\r\n    } else if (detailTree.tree.root?.name === 'itemDetailConditions') {\r\n      // Conditions 树需要的字段\r\n      setNodeFromItem(['orderQuantity'], ['orderQuantity'], detailTree.tree)\r\n      setNodeFromItem(['orderQuantityUnit'], ['orderQuantityUnit'], detailTree.tree)\r\n      setNodeFromItem(['netValue'], ['netValue'], detailTree.tree)\r\n      setNodeFromItem(['netValueUnit'], ['netValueUnit'], detailTree.tree)\r\n      setNodeFromItem(['taxValue'], ['taxValue'], detailTree.tree)\r\n      setNodeFromItem(['taxValueUnit'], ['taxValueUnit'], detailTree.tree)\r\n      setNodeFromItem(['pricingElements'], ['pricingElements'], detailTree.tree)\r\n    }\r\n  })\r\n\r\n  // 数据准备完成\r\n  isDataReady.value = true\r\n}\r\n\r\n\r\n\r\n/**\r\n * 验证当前itemCondition数据并同步到原始item\r\n * @description 把editingNode.node中的数据发送给后端验证，验证成功后更新原始item的数据\r\n */\r\nasync function validateCurrentItemConditionData(): Promise<boolean> {\r\n  if (!editingNode.value.node) return false\r\n\r\n  // 如果未更改过(config.data.validation is true) 直接返回\r\n  if (editingNode.value.node.config.data?.validation) {\r\n    console.log('数据未更改，无需验证', editingNode.value.node)\r\n    return true\r\n  }\r\n\r\n  const nodeList = [editingNode.value.node]\r\n  const isValid = await validateItems(nodeList as VarNode[])\r\n\r\n  if (isValid) {\r\n    console.log('数据验证成功')\r\n    // 同步数据\r\n    const currentNode = selectedItems.value[currentItemIndex.value]\r\n    currentNode.forceSetValue(editingNode.value.node.getValue())\r\n  } else {\r\n    console.log('数据验证失败')\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\n/**\r\n * 验证当前itemCondition数据（仅验证，不同步）\r\n */\r\nasync function validateCurrentItemConditionDataOnly(): Promise<boolean> {\r\n  if (!editingNode.value.node) return false\r\n\r\n  // 如果未更改过(config.data.validation is true) 直接返回\r\n  if (editingNode.value.node.config.data?.validation) {\r\n    console.log('数据未更改，无需验证')\r\n    return true\r\n  }\r\n\r\n  const nodeList = [editingNode.value.node]\r\n  const isValid = await validateItems(nodeList as VarNode[])\r\n\r\n  if (isValid) {\r\n    console.log('数据验证成功（仅验证，未同步）')\r\n  } else {\r\n    console.log('数据验证失败')\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\n/**\r\n * 同步当前编辑数据到原始item\r\n */\r\nfunction syncCurrentDataToOriginalItem() {\r\n  if (!editingNode.value.node) return\r\n\r\n  const currentNode = selectedItems.value[currentItemIndex.value]\r\n  currentNode.forceSetValue(editingNode.value.node.getValue())\r\n  console.log('数据已同步到原始item')\r\n}\r\n\r\n/**\r\n * 处理用户输入事件\r\n */\r\nfunction handleInputFromNode(node: VarNode, value: string, data: any) {\r\n  console.log('用户输入:', node.name, '=', value)\r\n\r\n  // 标记 editingNode 为未验证\r\n  if (editingNode.value.node && !editingNode.value.node.config.data) {\r\n    editingNode.value.node.config.data = {}\r\n  }\r\n  if (editingNode.value.node) {\r\n    editingNode.value.node.config.data!.validation = false\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 处理回车事件\r\n */\r\nasync function handleEnterFromNode(_node: VarNode, value: string, data: any) {\r\n  await validateCurrentItemConditionData()\r\n}\r\n\r\n/**\r\n * 切换到指定的item\r\n */\r\nasync function switchToItem(index: number) {\r\n  if (index >= 0 && index < selectedItems.value.length) {\r\n    const isValid = await validateCurrentItemConditionData()\r\n    if (isValid) {\r\n      currentItemIndex.value = index\r\n      updateItemDetailTrees()\r\n    } else {\r\n      console.log('数据验证失败，无法切换')\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 切换到上一个item\r\n */\r\nasync function switchToPreviousItem() {\r\n  await switchToItem(currentItemIndex.value - 1)\r\n}\r\n\r\n/**\r\n * 切换到下一个item\r\n */\r\nasync function switchToNextItem() {\r\n  await switchToItem(currentItemIndex.value + 1)\r\n}\r\n\r\n/**\r\n * 处理标签页切换\r\n */\r\nfunction handleTabClick(index: number) {\r\n  currentTabIndex.value = index\r\n}\r\n\r\n/**\r\n * 保存数据\r\n */\r\nasync function save() {\r\n  const isValid = await validateCurrentItemConditionDataOnly()\r\n  if (isValid) {\r\n    // 验证成功后同步数据到原始item\r\n    syncCurrentDataToOriginalItem()\r\n    emit('save')\r\n  } else {\r\n    console.log('数据验证失败，无法保存')\r\n  }\r\n}\r\n\r\n/**\r\n * 检测teleport目标是否存在\r\n */\r\nfunction checkTeleportTarget() {\r\n  // 检查是否存在 AppContent 的 footer 插槽目标\r\n  const footerTarget = document.querySelector('.app-content-footer-content-right')\r\n  if (footerTarget) {\r\n    teleportTarget.value = '.app-content-footer-content-right'\r\n    showButtonsInline.value = false\r\n    console.log('找到teleport目标，按钮将显示在footer中')\r\n  } else {\r\n    teleportTarget.value = null\r\n    showButtonsInline.value = true\r\n    console.log('未找到teleport目标，按钮将显示在页面内')\r\n  }\r\n}\r\n\r\n/**\r\n * 初始化组件数据\r\n */\r\nasync function initializeComponent() {\r\n  if (!config.value.itemsNode) {\r\n    console.error('Items node not found')\r\n    return\r\n  }\r\n\r\n  const selectedChildren = [...config.value.itemsNode.getSelectedChildren()]\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    console.log('发现选中的items，自动初始化详细信息页面')\r\n\r\n    // 设置选中的items\r\n    selectedItems.value = selectedChildren as VarNode[]\r\n    currentItemIndex.value = 0\r\n    currentTabIndex.value = 0\r\n\r\n    // 确保数据准备完成后再更新详细信息树\r\n    await nextTick()\r\n    updateItemDetailTrees()\r\n\r\n    // 等待数据准备完成\r\n    await nextTick()\r\n    isDataReady.value = true\r\n\r\n    emit('validation-success', selectedChildren as VarNode[])\r\n  } else {\r\n    console.log('没有选中的items，等待用户选择')\r\n    isDataReady.value = false\r\n  }\r\n}\r\n\r\n// 生命周期钩子\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n  nextTick(() => {\r\n    checkTeleportTarget()\r\n    initializeComponent()\r\n  })\r\n})\r\n\r\nonUnmounted(() => {\r\n  // 清理teleport状态\r\n  teleportTarget.value = null\r\n  showButtonsInline.value = true\r\n})\r\n\r\n/**\r\n * 取消编辑\r\n */\r\nfunction cancel() {\r\n  if (selectedItems.value.length > 0) {\r\n    selectedItems.value.forEach(item => {\r\n      if (item.config.data?.validation === false) {\r\n        item.config.data.validation = undefined\r\n      }\r\n    })\r\n  }\r\n  selectedItems.value = []\r\n  editingNode.value = { node: null }\r\n  emit('cancel')\r\n}\r\n\r\n// 暴露方法给父组件\r\n__expose({\r\n  handleItemsTableClick,\r\n  save,\r\n  cancel,\r\n  switchToPreviousItem,\r\n  switchToNextItem,\r\n  selectedItems: computed(() => selectedItems.value),\r\n  hasSelectedItems: computed(() => selectedItems.value.length > 0)\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (isDataReady.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (hasMultipleItems.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createElementVNode(\"button\", {\n                class: \"item-nav-button item-prev-button\",\n                onClick: switchToPreviousItem,\n                disabled: !canGoPrevious.value\n              }, _toDisplayString(config.value.navigationLabels?.previous), 9, _hoisted_3),\n              _createElementVNode(\"span\", _hoisted_4, \" Item \" + _toDisplayString(currentItemIndex.value + 1) + \" of \" + _toDisplayString(selectedItems.value.length), 1),\n              _createElementVNode(\"button\", {\n                class: \"item-nav-button item-next-button\",\n                onClick: switchToNextItem,\n                disabled: !canGoNext.value\n              }, _toDisplayString(config.value.navigationLabels?.next), 9, _hoisted_5)\n            ]))\n          : _createCommentVNode(\"\", true),\n        (currentDetailTree.value.headerTree && editingNode.value.node)\n          ? (_openBlock(), _createBlock(VarBox, {\n              key: 1,\n              tree: currentDetailTree.value.headerTree\n            }, null, 8, [\"tree\"]))\n          : _createCommentVNode(\"\", true),\n        (hasTabs.value)\n          ? (_openBlock(), _createBlock(FilterTabs, {\n              key: 2,\n              tabs: tabsConfig.value,\n              onTabSelected: handleTabClick,\n              class: \"reverse middle hide-bottom-line\",\n              initialActiveTab: 0\n            }, null, 8, [\"tabs\"]))\n          : _createCommentVNode(\"\", true),\n        (editingNode.value.node)\n          ? (_openBlock(), _createBlock(VarBox, {\n              key: 3,\n              tree: currentDetailTree.value.tree,\n              onEnterFromNode: validateCurrentItemConditionDataOnly,\n              onInputFromNode: handleInputFromNode\n            }, _createSlots({\n              [`itemDetailSales-orderQuantityAndDeliveryDate-orderQuantity--extra`]: _withCtx(() => [\n                _createVNode(VarBox, {\n                  tree: currentDetailTree.value.tree,\n                  path: ['orderQuantityAndDeliveryDate','orderQuantityUnit'],\n                  hideLabel: true\n                }, null, 8, [\"tree\"])\n              ]),\n              [`itemDetailSales-generalSalesData-netValue--extra`]: _withCtx(() => [\n                _createVNode(VarBox, {\n                  tree: currentDetailTree.value.tree,\n                  path: ['generalSalesData','netValueUnit'],\n                  hideLabel: true\n                }, null, 8, [\"tree\"])\n              ]),\n              [`itemDetailConditions-orderQuantity--extra`]: _withCtx(() => [\n                _createVNode(VarBox, {\n                  tree: currentDetailTree.value.tree,\n                  path: ['orderQuantityUnit'],\n                  hideLabel: true\n                }, null, 8, [\"tree\"])\n              ]),\n              [`itemDetailConditions-netValue--extra`]: _withCtx(() => [\n                _createVNode(VarBox, {\n                  tree: currentDetailTree.value.tree,\n                  path: ['netValueUnit'],\n                  hideLabel: true\n                }, null, 8, [\"tree\"])\n              ]),\n              [`itemDetailConditions-taxValue--extra`]: _withCtx(() => [\n                _createVNode(VarBox, {\n                  tree: currentDetailTree.value.tree,\n                  path: ['taxValueUnit'],\n                  hideLabel: true\n                }, null, 8, [\"tree\"])\n              ]),\n              default: _withCtx(() => [\n                _cache[0] || (_cache[0] = _createTextVNode(\" > \"))\n              ]),\n              _: 2\n            }, [\n              _renderList(_ctx.$slots, (_, name) => {\n                return {\n                  name: name,\n                  fn: _withCtx((slotData) => [\n                    _renderSlot(_ctx.$slots, name, _normalizeProps(_guardReactiveProps(slotData)))\n                  ])\n                }\n              })\n            ]), 1032, [\"tree\"]))\n          : _createCommentVNode(\"\", true),\n        (showButtonsInline.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n              _createElementVNode(\"button\", {\n                class: \"cancel-button\",\n                onClick: cancel\n              }, _toDisplayString(config.value.navigationLabels?.cancel), 1),\n              (!config.value.readonly)\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    class: \"save-button\",\n                    onClick: save\n                  }, _toDisplayString(config.value.navigationLabels?.save), 1))\n                : _createCommentVNode(\"\", true)\n            ]))\n          : _createCommentVNode(\"\", true),\n        (teleportTarget.value && !showButtonsInline.value)\n          ? (_openBlock(), _createBlock(_Teleport, {\n              key: 5,\n              to: teleportTarget.value\n            }, [\n              _createElementVNode(\"button\", {\n                class: \"cancel-button\",\n                onClick: cancel\n              }, _toDisplayString(config.value.navigationLabels?.cancel), 1),\n              (!config.value.readonly)\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    class: \"save-button\",\n                    onClick: save\n                  }, _toDisplayString(config.value.navigationLabels?.save), 1))\n                : _createCommentVNode(\"\", true)\n            ], 8, [\"to\"]))\n          : _createCommentVNode(\"\", true)\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport { ref, computed, watch, nextTick, onMounted, onUnmounted } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport FilterTabs from '@/components/FilterTabs.vue'\r\nimport { type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport { VarNode, VarTree } from '@/utils/VarTree'\r\n\r\n// Props\r\ninterface Props {\r\n  kit: ItemConditionKit\r\n}\r\n\r\nconst props = defineProps<Props>()\r\n\r\n// Events\r\nconst emit = defineEmits<{\r\n  save: []\r\n  cancel: []\r\n  'validation-failed': [items: VarNode[]]\r\n  'validation-success': [items: VarNode[]]\r\n}>()\r\n\r\n// 响应式数据\r\nconst selectedItems = ref<VarNode[]>([])\r\nconst currentItemIndex = ref(0)\r\nconst currentTabIndex = ref(0)\r\nconst editingNode = ref<{ node: VarNode | null }>({ node: null })\r\nconst isDataReady = ref(false)\r\n\r\n// Teleport 相关状态\r\nconst teleportTarget = ref<string | null>(null)\r\nconst showButtonsInline = ref(true)\r\n\r\n// 计算属性\r\nconst config = computed(() => props.kit.detailPageConfig)\r\nconst hasMultipleItems = computed(() => selectedItems.value.length > 1)\r\nconst canGoPrevious = computed(() => currentItemIndex.value > 0)\r\nconst canGoNext = computed(() => currentItemIndex.value < selectedItems.value.length - 1)\r\nconst hasTabs = computed(() => config.value.detailTrees[0]?.tabs && config.value.detailTrees[0].tabs.length > 0)\r\nconst tabsConfig = computed(() => config.value.detailTrees[0]?.tabs || [])\r\nconst currentDetailTree = computed(() => {\r\n  if (hasTabs.value && config.value.detailTrees.length > 1) {\r\n    return config.value.detailTrees[currentTabIndex.value] || config.value.detailTrees[0]\r\n  }\r\n  return config.value.detailTrees[0]\r\n})\r\n\r\n// API 基础 URL\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\n\r\n/**\r\n * 处理 Items 表格的按钮点击事件\r\n */\r\nasync function handleItemsTableClick() {\r\n  if (!config.value.itemsNode) {\r\n    console.error('Items node not found')\r\n    return\r\n  }\r\n\r\n  const selectedChildren = [...config.value.itemsNode.getSelectedChildren()]\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 先检查所有选中的item是否有validation状态\r\n    const itemsWithoutValidation = selectedChildren.filter(item =>\r\n      item.config.data?.validation === undefined\r\n    )\r\n\r\n    // 如果有未验证的item，先进行验证\r\n    if (itemsWithoutValidation.length > 0) {\r\n      console.log('发现未验证的item，进行验证...')\r\n      const result = await validateItems(itemsWithoutValidation as VarNode[])\r\n      if (!result) {\r\n        console.log('验证失败，无法继续')\r\n        emit('validation-failed', itemsWithoutValidation as VarNode[])\r\n        return\r\n      }\r\n    }\r\n\r\n    // 再次检查所有选中的item是否都验证通过\r\n    const hasInvalidItems = selectedChildren.some(item =>\r\n      item.config.data?.validation === false\r\n    )\r\n\r\n    if (hasInvalidItems) {\r\n      console.log('存在验证未通过的item，无法继续')\r\n      emit('validation-failed', selectedChildren as VarNode[])\r\n      return\r\n    }\r\n\r\n    // 所有验证都通过，准备数据\r\n    selectedItems.value = selectedChildren as VarNode[]\r\n    currentItemIndex.value = 0\r\n    currentTabIndex.value = 0\r\n\r\n    // 确保数据准备完成后再更新详细信息树\r\n    await nextTick()\r\n    updateItemDetailTrees()\r\n\r\n    // 等待数据准备完成\r\n    await nextTick()\r\n\r\n    // 确保 isDataReady 为 true 后再继续\r\n    if (!isDataReady.value) {\r\n      console.warn('数据未准备完成，等待...')\r\n      await nextTick()\r\n    }\r\n\r\n    // 成功进入详情页面后，清空items表格的选中状态\r\n    config.value.itemsNode.children.forEach(child => {\r\n      child.setSelection(false)\r\n    })\r\n\r\n    emit('validation-success', selectedItems.value as VarNode[])\r\n  } else {\r\n    console.log('No items selected')\r\n    // 没有选中物品时，不应该进入详细信息页面\r\n    emit('validation-failed', [])\r\n  }\r\n}\r\n\r\n/**\r\n * 验证指定的items\r\n */\r\nasync function validateItems(itemNodes: VarNode[]): Promise<boolean> {\r\n  const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}${config.value.validationEndpoint}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(itemValues)\r\n    })\r\n\r\n    const data = await response.json()\r\n    console.log('验证返回的数据', data)\r\n\r\n    if (data.success) {\r\n      // 更新每个item的详细信息\r\n      if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n        data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n          if (index < itemNodes.length) {\r\n            itemNodes[index].forceSetValue(breakdown)\r\n          }\r\n        })\r\n      }\r\n\r\n      // 根据badRecordIndices设置validation\r\n      if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n        // 先重置所有节点的validation\r\n        itemNodes.forEach(node => {\r\n          if (!node.config.data) {\r\n            node.config.data = {}\r\n          }\r\n          node.config.data.validation = true\r\n        })\r\n\r\n        // 设置不合法节点的validation\r\n        data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n          if (badIndex < itemNodes.length) {\r\n            if (!itemNodes[badIndex].config.data) {\r\n              itemNodes[badIndex].config.data = {}\r\n            }\r\n            itemNodes[badIndex].config.data.validation = false\r\n          }\r\n        })\r\n      }\r\n\r\n      return data.data.result.allDataLegal === 1\r\n    }\r\n\r\n    return false\r\n  } catch (error) {\r\n    console.error('验证失败:', error)\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 更新详情页面的树结构数据\r\n * @description 把editingNode.node设为正在编辑节点的一个拷贝，将itemCondition中的输入框指向这个拷贝中的节点\r\n */\r\nfunction updateItemDetailTrees() {\r\n  if (selectedItems.value.length === 0) {\r\n    isDataReady.value = false\r\n    editingNode.value.node = null\r\n    return\r\n  }\r\n\r\n  // 先设置为未准备状态\r\n  isDataReady.value = false\r\n\r\n  const currentItem = selectedItems.value[currentItemIndex.value]\r\n  editingNode.value.node = currentItem.clone() as VarNode as any\r\n  const node = editingNode.value.node\r\n\r\n  console.log('editingNode 初始值:', node!.getValue())\r\n\r\n  // 使用引用传递而不是值拷贝设置\r\n  const setNodeFromItem = (sourcePath: string[], targetPath: string[], targetTree: VarTree) => {\r\n    const sourceNode = node!.findNodeByPath(sourcePath)\r\n    if (sourceNode) {\r\n      // 使用 replaceNodeByPath 让目标树的节点引用源节点\r\n      targetTree.replaceNodeByPath(sourceNode, targetPath)\r\n    }\r\n  }\r\n\r\n  // 更新所有详细信息树\r\n  config.value.detailTrees.forEach(detailTree => {\r\n    // 更新header树（如果存在）\r\n    if (detailTree.headerTree) {\r\n      // Header 树需要的字段\r\n      setNodeFromItem(['item'], ['item'], detailTree.headerTree)\r\n      setNodeFromItem(['material'], ['material'], detailTree.headerTree)\r\n    }\r\n\r\n    // 更新详细信息树\r\n    if (detailTree.tree.root?.name === 'itemDetailSales') {\r\n      // Sales 树需要的字段\r\n      setNodeFromItem(['orderQuantity'], ['orderQuantityAndDeliveryDate', 'orderQuantity'], detailTree.tree)\r\n      setNodeFromItem(['orderQuantityUnit'], ['orderQuantityAndDeliveryDate', 'orderQuantityUnit'], detailTree.tree)\r\n      setNodeFromItem(['reqDelivDate'], ['orderQuantityAndDeliveryDate', 'reqDelivDate'], detailTree.tree)\r\n      setNodeFromItem(['netValue'], ['generalSalesData', 'netValue'], detailTree.tree)\r\n      setNodeFromItem(['netValueUnit'], ['generalSalesData', 'netValueUnit'], detailTree.tree)\r\n      setNodeFromItem(['pricingDate'], ['generalSalesData', 'pricingDate'], detailTree.tree)\r\n      setNodeFromItem(['orderProbability'], ['generalSalesData', 'orderProbability'], detailTree.tree)\r\n    } else if (detailTree.tree.root?.name === 'itemDetailConditions') {\r\n      // Conditions 树需要的字段\r\n      setNodeFromItem(['orderQuantity'], ['orderQuantity'], detailTree.tree)\r\n      setNodeFromItem(['orderQuantityUnit'], ['orderQuantityUnit'], detailTree.tree)\r\n      setNodeFromItem(['netValue'], ['netValue'], detailTree.tree)\r\n      setNodeFromItem(['netValueUnit'], ['netValueUnit'], detailTree.tree)\r\n      setNodeFromItem(['taxValue'], ['taxValue'], detailTree.tree)\r\n      setNodeFromItem(['taxValueUnit'], ['taxValueUnit'], detailTree.tree)\r\n      setNodeFromItem(['pricingElements'], ['pricingElements'], detailTree.tree)\r\n    }\r\n  })\r\n\r\n  // 数据准备完成\r\n  isDataReady.value = true\r\n}\r\n\r\n\r\n\r\n/**\r\n * 验证当前itemCondition数据并同步到原始item\r\n * @description 把editingNode.node中的数据发送给后端验证，验证成功后更新原始item的数据\r\n */\r\nasync function validateCurrentItemConditionData(): Promise<boolean> {\r\n  if (!editingNode.value.node) return false\r\n\r\n  // 如果未更改过(config.data.validation is true) 直接返回\r\n  if (editingNode.value.node.config.data?.validation) {\r\n    console.log('数据未更改，无需验证', editingNode.value.node)\r\n    return true\r\n  }\r\n\r\n  const nodeList = [editingNode.value.node]\r\n  const isValid = await validateItems(nodeList as VarNode[])\r\n\r\n  if (isValid) {\r\n    console.log('数据验证成功')\r\n    // 同步数据\r\n    const currentNode = selectedItems.value[currentItemIndex.value]\r\n    currentNode.forceSetValue(editingNode.value.node.getValue())\r\n  } else {\r\n    console.log('数据验证失败')\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\n/**\r\n * 验证当前itemCondition数据（仅验证，不同步）\r\n */\r\nasync function validateCurrentItemConditionDataOnly(): Promise<boolean> {\r\n  if (!editingNode.value.node) return false\r\n\r\n  // 如果未更改过(config.data.validation is true) 直接返回\r\n  if (editingNode.value.node.config.data?.validation) {\r\n    console.log('数据未更改，无需验证')\r\n    return true\r\n  }\r\n\r\n  const nodeList = [editingNode.value.node]\r\n  const isValid = await validateItems(nodeList as VarNode[])\r\n\r\n  if (isValid) {\r\n    console.log('数据验证成功（仅验证，未同步）')\r\n  } else {\r\n    console.log('数据验证失败')\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\n/**\r\n * 同步当前编辑数据到原始item\r\n */\r\nfunction syncCurrentDataToOriginalItem() {\r\n  if (!editingNode.value.node) return\r\n\r\n  const currentNode = selectedItems.value[currentItemIndex.value]\r\n  currentNode.forceSetValue(editingNode.value.node.getValue())\r\n  console.log('数据已同步到原始item')\r\n}\r\n\r\n/**\r\n * 处理用户输入事件\r\n */\r\nfunction handleInputFromNode(node: VarNode, value: string, data: any) {\r\n  console.log('用户输入:', node.name, '=', value)\r\n\r\n  // 标记 editingNode 为未验证\r\n  if (editingNode.value.node && !editingNode.value.node.config.data) {\r\n    editingNode.value.node.config.data = {}\r\n  }\r\n  if (editingNode.value.node) {\r\n    editingNode.value.node.config.data!.validation = false\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 处理回车事件\r\n */\r\nasync function handleEnterFromNode(_node: VarNode, value: string, data: any) {\r\n  await validateCurrentItemConditionData()\r\n}\r\n\r\n/**\r\n * 切换到指定的item\r\n */\r\nasync function switchToItem(index: number) {\r\n  if (index >= 0 && index < selectedItems.value.length) {\r\n    const isValid = await validateCurrentItemConditionData()\r\n    if (isValid) {\r\n      currentItemIndex.value = index\r\n      updateItemDetailTrees()\r\n    } else {\r\n      console.log('数据验证失败，无法切换')\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 切换到上一个item\r\n */\r\nasync function switchToPreviousItem() {\r\n  await switchToItem(currentItemIndex.value - 1)\r\n}\r\n\r\n/**\r\n * 切换到下一个item\r\n */\r\nasync function switchToNextItem() {\r\n  await switchToItem(currentItemIndex.value + 1)\r\n}\r\n\r\n/**\r\n * 处理标签页切换\r\n */\r\nfunction handleTabClick(index: number) {\r\n  currentTabIndex.value = index\r\n}\r\n\r\n/**\r\n * 保存数据\r\n */\r\nasync function save() {\r\n  const isValid = await validateCurrentItemConditionDataOnly()\r\n  if (isValid) {\r\n    // 验证成功后同步数据到原始item\r\n    syncCurrentDataToOriginalItem()\r\n    emit('save')\r\n  } else {\r\n    console.log('数据验证失败，无法保存')\r\n  }\r\n}\r\n\r\n/**\r\n * 检测teleport目标是否存在\r\n */\r\nfunction checkTeleportTarget() {\r\n  // 检查是否存在 AppContent 的 footer 插槽目标\r\n  const footerTarget = document.querySelector('.app-content-footer-content-right')\r\n  if (footerTarget) {\r\n    teleportTarget.value = '.app-content-footer-content-right'\r\n    showButtonsInline.value = false\r\n    console.log('找到teleport目标，按钮将显示在footer中')\r\n  } else {\r\n    teleportTarget.value = null\r\n    showButtonsInline.value = true\r\n    console.log('未找到teleport目标，按钮将显示在页面内')\r\n  }\r\n}\r\n\r\n/**\r\n * 初始化组件数据\r\n */\r\nasync function initializeComponent() {\r\n  if (!config.value.itemsNode) {\r\n    console.error('Items node not found')\r\n    return\r\n  }\r\n\r\n  const selectedChildren = [...config.value.itemsNode.getSelectedChildren()]\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    console.log('发现选中的items，自动初始化详细信息页面')\r\n\r\n    // 设置选中的items\r\n    selectedItems.value = selectedChildren as VarNode[]\r\n    currentItemIndex.value = 0\r\n    currentTabIndex.value = 0\r\n\r\n    // 确保数据准备完成后再更新详细信息树\r\n    await nextTick()\r\n    updateItemDetailTrees()\r\n\r\n    // 等待数据准备完成\r\n    await nextTick()\r\n    isDataReady.value = true\r\n\r\n    emit('validation-success', selectedChildren as VarNode[])\r\n  } else {\r\n    console.log('没有选中的items，等待用户选择')\r\n    isDataReady.value = false\r\n  }\r\n}\r\n\r\n// 生命周期钩子\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n  nextTick(() => {\r\n    checkTeleportTarget()\r\n    initializeComponent()\r\n  })\r\n})\r\n\r\nonUnmounted(() => {\r\n  // 清理teleport状态\r\n  teleportTarget.value = null\r\n  showButtonsInline.value = true\r\n})\r\n\r\n/**\r\n * 取消编辑\r\n */\r\nfunction cancel() {\r\n  if (selectedItems.value.length > 0) {\r\n    selectedItems.value.forEach(item => {\r\n      if (item.config.data?.validation === false) {\r\n        item.config.data.validation = undefined\r\n      }\r\n    })\r\n  }\r\n  selectedItems.value = []\r\n  editingNode.value = { node: null }\r\n  emit('cancel')\r\n}\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n  handleItemsTableClick,\r\n  save,\r\n  cancel,\r\n  switchToPreviousItem,\r\n  switchToNextItem,\r\n  selectedItems: computed(() => selectedItems.value),\r\n  hasSelectedItems: computed(() => selectedItems.value.length > 0)\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"isDataReady\" class=\"item-condition-detail\">\r\n    <!-- Item导航 -->\r\n    <div class=\"item-navigation\" v-if=\"hasMultipleItems\">\r\n      <button\r\n        class=\"item-nav-button item-prev-button\"\r\n        @click=\"switchToPreviousItem\"\r\n        :disabled=\"!canGoPrevious\"\r\n      >\r\n        {{ config.navigationLabels?.previous }}\r\n      </button>\r\n      <span class=\"item-counter\">\r\n        Item {{ currentItemIndex + 1 }} of {{ selectedItems.length }}\r\n      </span>\r\n      <button\r\n        class=\"item-nav-button item-next-button\"\r\n        @click=\"switchToNextItem\"\r\n        :disabled=\"!canGoNext\"\r\n      >\r\n        {{ config.navigationLabels?.next }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Header树 -->\r\n    <VarBox\r\n      v-if=\"currentDetailTree.headerTree && editingNode.node\"\r\n      :tree=\"currentDetailTree.headerTree\"\r\n    />\r\n\r\n    <!-- 标签页 -->\r\n    <FilterTabs\r\n      v-if=\"hasTabs\"\r\n      :tabs=\"tabsConfig\"\r\n      @tab-selected=\"handleTabClick\"\r\n      class=\"reverse middle hide-bottom-line\"\r\n      :initialActiveTab=\"0\"\r\n    />\r\n\r\n    <!-- 详细信息树 -->\r\n    <VarBox\r\n      v-if=\"editingNode.node\"\r\n      :tree=\"currentDetailTree.tree\"\r\n      @enter-from-node=\"validateCurrentItemConditionDataOnly\"\r\n      @input-from-node=\"handleInputFromNode\"\r\n    >\r\n      <!-- Sales 页面的单位字段插槽 -->\r\n      <template #[`itemDetailSales-orderQuantityAndDeliveryDate-orderQuantity--extra`]>\r\n        <VarBox\r\n          :tree=\"currentDetailTree.tree\"\r\n          :path=\"['orderQuantityAndDeliveryDate','orderQuantityUnit']\"\r\n          :hideLabel=\"true\"\r\n        />\r\n      </template>\r\n      <template #[`itemDetailSales-generalSalesData-netValue--extra`]>\r\n        <VarBox\r\n          :tree=\"currentDetailTree.tree\"\r\n          :path=\"['generalSalesData','netValueUnit']\"\r\n          :hideLabel=\"true\"\r\n        />\r\n      </template>\r\n\r\n      <!-- Conditions 页面的单位字段插槽 -->\r\n      <template #[`itemDetailConditions-orderQuantity--extra`]>\r\n        <VarBox\r\n          :tree=\"currentDetailTree.tree\"\r\n          :path=\"['orderQuantityUnit']\"\r\n          :hideLabel=\"true\"\r\n        />\r\n      </template>\r\n      <template #[`itemDetailConditions-netValue--extra`]>\r\n        <VarBox\r\n          :tree=\"currentDetailTree.tree\"\r\n          :path=\"['netValueUnit']\"\r\n          :hideLabel=\"true\"\r\n        />\r\n      </template>\r\n      <template #[`itemDetailConditions-taxValue--extra`]>\r\n        <VarBox\r\n          :tree=\"currentDetailTree.tree\"\r\n          :path=\"['taxValueUnit']\"\r\n          :hideLabel=\"true\"\r\n        />\r\n      </template>\r\n    >\r\n      <!-- 传递所有插槽 -->\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData\" />\r\n      </template>\r\n    </VarBox>\r\n\r\n    <!-- 操作按钮 - 页面内显示 -->\r\n    <div v-if=\"showButtonsInline\" class=\"item-condition-actions\">\r\n      <button class=\"cancel-button\" @click=\"cancel\">\r\n        {{ config.navigationLabels?.cancel }}\r\n      </button>\r\n      <button\r\n        v-if=\"!config.readonly\"\r\n        class=\"save-button\"\r\n        @click=\"save\"\r\n      >\r\n        {{ config.navigationLabels?.save }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 操作按钮 - Teleport到footer -->\r\n    <Teleport v-if=\"teleportTarget && !showButtonsInline\" :to=\"teleportTarget\">\r\n      <button class=\"cancel-button\" @click=\"cancel\">\r\n        {{ config.navigationLabels?.cancel }}\r\n      </button>\r\n      <button\r\n        v-if=\"!config.readonly\"\r\n        class=\"save-button\"\r\n        @click=\"save\"\r\n      >\r\n        {{ config.navigationLabels?.save }}\r\n      </button>\r\n    </Teleport>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* 复用之前的样式 */\r\n.item-condition-detail {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.item-navigation {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.item-counter {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.item-nav-button {\r\n  padding: 8px 16px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f5f5f5;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.item-nav-button:hover:not(:disabled) {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.item-nav-button:disabled {\r\n  background-color: #f9f9f9;\r\n  color: #999;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.item-prev-button {\r\n  margin-right: auto;\r\n}\r\n\r\n.item-next-button {\r\n  margin-left: auto;\r\n}\r\n\r\n.item-condition-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  padding: 15px 0;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n/* Save和Cancel按钮样式 - 与inquiry保持一致 */\r\n.save-button {\r\n  padding: 8px 20px;\r\n  margin-right: 10px;\r\n  background-color: var(--theme-color-dark);\r\n  color: var(--theme-color-contrast);\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: var(--theme-color-execute-button-hover);\r\n}\r\n\r\n.cancel-button {\r\n  padding: 8px 20px;\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n/* VarTree 详细信息页面布局样式 */\r\n:deep(.itemDetailHeader--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 40%;\r\n  grid-template-rows: auto auto;\r\n  gap: 0\r\n}\r\n\r\n/* Sales 页面布局 - 使用 flex 布局支持单位字段 */\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate--dict-leaf-section),\r\n:deep(.itemDetailSales-generalSalesData--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: auto auto;\r\n  gap: 10px;\r\n}\r\n\r\n/* Sales 页面数值字段的 flex 布局 */\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-orderQuantity--leaf-input-container),\r\n:deep(.itemDetailSales-generalSalesData-netValue--leaf-input-container) {\r\n  display: flex;\r\n  gap: 5px;\r\n  align-items: center;\r\n}\r\n\r\n/* Sales 页面 extra 插槽占据剩余空间 */\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-orderQuantity--extra),\r\n:deep(.itemDetailSales-generalSalesData-netValue--extra) {\r\n  flex: 1;\r\n}\r\n\r\n/* Conditions 页面布局 - 使用 flex 布局支持单位字段 */\r\n:deep(.itemDetailConditions--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: auto auto auto;\r\n  gap: 10px;\r\n}\r\n\r\n/* Conditions 页面数值字段的 flex 布局 */\r\n:deep(.itemDetailConditions-orderQuantity--leaf-input-container),\r\n:deep(.itemDetailConditions-netValue--leaf-input-container),\r\n:deep(.itemDetailConditions-taxValue--leaf-input-container) {\r\n  display: flex;\r\n  gap: 5px;\r\n  align-items: center;\r\n}\r\n\r\n/* Conditions 页面 extra 插槽占据剩余空间 */\r\n:deep(.itemDetailConditions-orderQuantity--extra),\r\n:deep(.itemDetailConditions-netValue--extra),\r\n:deep(.itemDetailConditions-taxValue--extra) {\r\n  flex: 1;\r\n}\r\n</style>\r\n","import script from \"./ItemConditionDetail.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ItemConditionDetail.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ItemConditionDetail.vue?vue&type=style&index=0&id=2ddff5f8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2ddff5f8\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createBlock as _createBlock, renderSlot as _renderSlot, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"manage-sales-orders-view\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"so-page-content\"\n}\nconst _hoisted_3 = { class: \"sales-order-search\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"query-results-list\",\n  style: {\"width\":\"100%\"}\n}\nconst _hoisted_5 = { class: \"sales-order-rows-container\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"row-item sales-order-id\" }\nconst _hoisted_8 = { class: \"row-item sold-to-party\" }\nconst _hoisted_9 = { class: \"row-item customer-reference\" }\nconst _hoisted_10 = { class: \"row-item req-delivery-date\" }\nconst _hoisted_11 = { class: \"row-item net-value\" }\nconst _hoisted_12 = { class: \"row-item doc-date\" }\nconst _hoisted_13 = {\n  key: 1,\n  class: \"no-results\"\n}\nconst _hoisted_14 = {\n  key: 2,\n  class: \"initial-output-message\"\n}\nconst _hoisted_15 = {\n  key: 1,\n  class: \"bottom-actions\"\n}\nconst _hoisted_16 = {\n  key: 2,\n  class: \"modal-overlay\"\n}\nconst _hoisted_17 = { class: \"modal-content\" }\nconst _hoisted_18 = {\n  key: 0,\n  class: \"modal-message\"\n}\nconst _hoisted_19 = { class: \"page-content\" }\nconst _hoisted_20 = [\"disabled\"]\n\nimport VarBox from '@/components/varbox/VarBox.vue';\r\n// FilterTabs 不再需要，ItemConditionDetail 内部处理标签页\r\nimport { ref, Ref, computed, nextTick, onMounted } from 'vue';\r\nimport { createTreeFromConfig, cns, VarTree, VarNodeValue, VarNode, createNodeFromConfig } from '@/utils/VarTree';\r\nimport { bpSearch, quotationIdSearch, salesOrderIdSearch } from '@/utils/searchMethods';\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\nimport AppContent from '@/components/applicationContent/AppContent.vue';\r\n\r\n// 创建 ItemConditionKit 实例\r\ntype State = 'create' | 'change' | 'display';\r\n\r\ninterface SalesOrderResult {\r\n  so_id: string;\r\n  soldToPartyName: string;\r\n  customer_no: string;\r\n  customer_reference: string;\r\n  req_delivery_date: string;\r\n  status: 'New' | 'Open' | 'In Progress' | 'Completed';\r\n  net_value: string;\r\n  currency: string;\r\n  doc_date: string;\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ManageSalesOrders',\n  setup(__props) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || '';\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || '';\r\n})\r\n\r\nconst itemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/sales-order/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\nconst appContentRef = ref(null) as any;\r\nconst currentAppStage = computed(() => appContentRef.value?.currentStage || 0);\r\nconst showAppContent = ref(false);\r\n\r\n// Quotation Modal related states\r\nconst showQuotationModal = ref(false);\r\nconst quotationModalMessage = ref('');\r\n\r\n// Define the structure for the quotation input\r\nconst quotationQueryStructure = cns(\r\n  \"dict\", \"dict\", \"quotationQuery\", null, false, { hideLabel: true },\r\n  [\r\n    cns(\"string\", \"leaf\", \"quotation_id\", '', false, {searchMethods: quotationIdSearch}, [], \"Quotation Number:\"),\r\n  ]\r\n);\r\nconst quotationQueryTree = createTreeFromConfig(quotationQueryStructure);\r\n\r\n\r\nconst state: Ref<State> = ref('display');\r\nconst salesOrderVarBoxKey = ref(0);\r\nconst onCreateState = computed(() => state.value === 'create');\r\nconst onChangeState = computed(() => state.value === 'change');\r\nconst onDisplayState = computed(() => state.value === 'display');\r\n\r\nfunction appToState(newState: State) {\r\n  state.value = newState;\r\n  let readonly = newState === 'display';\r\n  writableTrees.forEach(tree => {\r\n    if (tree.root) {\r\n      tree.root.readonly = readonly;\r\n    }\r\n  });\r\n}\r\n\r\nconst writableTrees: VarTree[] = [];\r\n\r\nconst salesOrderQueryStructure = cns(\r\n  \"dict\", \"dict\", \"salesOrderQuery\", null, false, { hideLabel: true },\r\n  [\r\n    cns(\"string\", \"leaf\", \"so_id\", '', false, { searchMethods: salesOrderIdSearch }, [], \"Sales Order:\"),\r\n    cns(\"selection\", \"leaf\", \"status\", '', false, {options:['New','Open','In progress','Completed']}, [], \"Overall Status:\"),\r\n    cns(\"string\", \"leaf\", \"customer_no\", '', false, { searchMethods: bpSearch }, [], \"Sold-To Party:\"),\r\n    cns(\"string\", \"leaf\", \"customer_reference\", '', false, {}, [], \"Customer Reference:\"),\r\n  ]\r\n);\r\n\r\nconst salesOrderDataTree = createTreeFromConfig(\r\n   cns('dict','dict','SOData',{},false,{hideLabel:true},[\r\n     cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n       cns('string','leaf','id','',false,{},[]),\r\n     ]),\r\n     cns('dict','dict','basicInfo',{},false,{hideLabel:true},[\r\n       cns('string','leaf','quotation_id','',false,{searchMethods: quotationIdSearch},[],\"Quotation:\"),\r\n       cns('string','leaf','so_id','',true,{},[],\"Sales Order:\"),\r\n       cns('string','leaf','soldToParty','',false,{},[],\"Sold-To Party:\"),\r\n       cns('string','leaf','shipToParty','',false,{},[],\"Ship-To Party:\"),\r\n       cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n       cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n       cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n       cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n     ]),\r\n     cns('dict','dict','itemOverview',{},false,{},[\r\n       cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n       // items节点将通过ItemConditionKit动态创建\r\n     ],'Item Overview')\r\n   ])\r\n );\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  salesOrderDataTree,\r\n  ['itemOverview', 'items']\r\n)\r\n\r\n  const salesOrderQueryTree = createTreeFromConfig(salesOrderQueryStructure);\r\n  const salesOrdersResult: Ref<SalesOrderResult[]> = ref([]);\r\n  const searchPerformed = ref(false);\r\n\r\n\r\n  const performSalesOrderSearch = async () => {\r\n    console.log('Executing sales order query...');\r\n    const fullUrl = `${API_BASE_URL}/api/so/search`;\r\n    console.log('Attempting to fetch from URL:', fullUrl);\r\n    const queryData = salesOrderQueryTree.root?.getValue();\r\n    console.log('Submitting query data:', JSON.stringify(queryData, null, 2));\r\n\r\n    searchPerformed.value = true;\r\n    salesOrdersResult.value = [];\r\n\r\n    try {\r\n      const response = await fetch(fullUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(queryData),\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (result.success && Array.isArray(result.data)) {\r\n        salesOrdersResult.value = result.data;\r\n      } else {\r\n        console.error('API call failed or returned unexpected data:', result);\r\n        salesOrdersResult.value = [];\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error during sales order search:', error);\r\n      salesOrdersResult.value = [];\r\n    }\r\n  };\r\n\r\n  const salesOrderFormPrevButtonLabel = computed(() => {\r\n    return 'Cancel';\r\n  });\r\n\r\n  const salesOrderFormNextButtonLabel = computed(() => {\r\n    if (onCreateState.value) {\r\n      return 'Create';\r\n    }\r\n    if (onChangeState.value) {\r\n      return 'Save';\r\n    }\r\n    if (onDisplayState.value) {\r\n      return 'Change';\r\n    }\r\n    return '/hide';\r\n  });\r\n\r\n  const itemDetailsPrevButtonLabel = computed(() => {\r\n    return '/hide';\r\n  });\r\n\r\n  const itemDetailsNextButtonLabel = computed(() => {\r\n    if (onCreateState.value || onChangeState.value) {\r\n      return '/hide';\r\n    }\r\n    return '/hide';\r\n  });\r\n\r\n  async function handleCancel(currentStage: number, targetStage: number) {\r\n    console.log('AppContent handleCancel: currentStage', currentStage, 'targetStage', targetStage);\r\n\r\n    // If currently in the first stage (sales order form)\r\n    if (currentStage === 0) {\r\n      // If in create or change mode, prompt for confirmation\r\n      if (onCreateState.value || onChangeState.value) {\r\n        // Using a custom modal/message box instead of confirm()\r\n        if (!await showConfirmationModal('Are you sure you want to cancel? Any unsaved changes will be lost.')) {\r\n          return false; // User chose not to cancel, prevent navigation\r\n        }\r\n      }\r\n      // For all modes (create, change, display) in stage 0, hide AppContent to return to query list\r\n      showAppContent.value = false;\r\n      appContentRef.value.goToStage(0); // Reset AppContent internal stage so it starts from 0 next time\r\n      appContentRef.value.footerMessage = ''; // Clear footer message\r\n      return false; // Prevent AppContent from trying internal navigation as we've handled external display logic\r\n    }\r\n\r\n    // If currently in the item details stage (stage 1)\r\n    if (currentStage === 1) {\r\n      // For create or change mode, prompt for confirmation before going back to the form\r\n      if (onCreateState.value || onChangeState.value) {\r\n        // Using a custom modal/message box instead of confirm()\r\n        if (!await showConfirmationModal('Are you sure you want to go back? Unsaved item changes will be lost.')) {\r\n          return false; // User chose not to go back, prevent navigation\r\n        }\r\n      }\r\n      // If confirmed or in display mode, go back to the sales order form (stage 0)\r\n      appContentRef.value.footerMessage = '';\r\n      selectedItems.value = []; // Clear selected items\r\n      currentItemIndex.value = 0; // Reset current item index\r\n      return true; // Allow AppContent to navigate back to stage 0\r\n    }\r\n    appContentRef.value.footerMessage = '';\r\n    return true;\r\n  }\r\n\r\n  async function handleExecute(currentStage: number, targetStage: number) {\r\n    console.log('AppContent handleExecute: currentStage', currentStage, 'targetStage', targetStage);\r\n    appContentRef.value.footerMessage = '';\r\n\r\n    if (currentStage === 0) {\r\n      if (onDisplayState.value) {\r\n        console.log('Switching to change state...');\r\n        appToState('change');\r\n        salesOrderVarBoxKey.value++;\r\n        appContentRef.value.footerMessage = 'Switched to Change mode.';\r\n        return false;\r\n      } else if (onCreateState.value || onChangeState.value) {\r\n        console.log('Saving/Creating sales order...');\r\n        const dataToSave = salesOrderDataTree.root?.getValue();\r\n\r\n        let endpoint = onCreateState.value ? `${API_BASE_URL}/api/so/create` : `${API_BASE_URL}/api/so/edit`;\r\n        let method = 'POST';\r\n\r\n        if (onChangeState.value && !(dataToSave as { basicInfo?: { so_id?: string } })?.basicInfo?.so_id) {\r\n         appContentRef.value.footerMessage = 'Sales Order ID is required for change operations.';\r\n         return false;\r\n       }\r\n\r\n        try {\r\n          const response = await fetch(endpoint, {\r\n            method: method,\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(dataToSave)\r\n          });\r\n\r\n          const result = await response.json();\r\n          if (result.success) {\r\n            appContentRef.value.footerMessage = result.message || (onCreateState.value ? 'Sales Order created successfully!' : 'Sales Order saved successfully!');\r\n            // After successful creation/save, stay on stage 0 (sales order form)\r\n            if (onCreateState.value && result.data?.so_id) {\r\n              salesOrderDataTree.findNodeByPath(['basicInfo', 'so_id'])?.setValue(result.data.so_id);\r\n              salesOrderDataTree.findNodeByPath(['meta', 'id'])?.setValue(result.data.so_id);\r\n            }\r\n            appToState('display'); // Switch to display mode after save/create\r\n            // No automatic navigation to item details here. User will click \"...\"\r\n            // showAppContent.value = false; // Stay on the form, don't go back to search list\r\n            // performSalesOrderSearch(); // No need to refresh search list from here\r\n            return false; // Prevent AppContent from navigating to next stage\r\n          } else {\r\n            appContentRef.value.footerMessage = result.message || 'Operation failed.';\r\n            return false;\r\n          }\r\n        } catch (error: any) {\r\n          console.error('Operation failed:', error);\r\n          appContentRef.value.footerMessage = `Operation failed: ${error.message || 'Network error'}`;\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (currentStage === 1) {\r\n      console.log('Handling item details confirmation...');\r\n      // Validate all items before confirming\r\n      const allItemsValid = await itemsTabQueryAll();\r\n      if (allItemsValid) {\r\n        appContentRef.value.footerMessage = 'All item details confirmed and saved.';\r\n        // After confirming items, switch to display mode and go back to sales order form (stage 0)\r\n        appToState('display');\r\n        appContentRef.value.goToStage(0); // Go back to sales order form\r\n        // showAppContent.value = false; // Don't go back to search list\r\n        // performSalesOrderSearch(); // No need to refresh search list from here\r\n        return false; // Prevent AppContent from navigating, we've handled it\r\n      } else {\r\n        appContentRef.value.footerMessage = 'Some item details are invalid. Please correct them.';\r\n        return false; // Prevent navigation if items are invalid\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  const viewSalesOrderDetail = async (soId: string) => {\r\n    console.log(`Navigating to sales order detail page for SO ID: ${soId}`);\r\n    showAppContent.value = true;\r\n    appToState('display');\r\n\r\n   nextTick(async () => {\r\n     if (appContentRef.value) {\r\n       appContentRef.value.goToStage(0);\r\n\r\n       appContentRef.value.footerMessage = 'Fetching sales order details...';\r\n       try {\r\n         const response = await fetch(`${API_BASE_URL}/api/so/get/${soId}`);\r\n         const result = await response.json();\r\n         if (result.success && result.data) {\r\n           salesOrderDataTree.root?.forceSetValue(result.data);\r\n           salesOrderVarBoxKey.value++;\r\n           appContentRef.value.footerMessage = 'Sales order details loaded.';\r\n\r\n           // No automatic navigation to item details here, user will click \"...\"\r\n           // The items are loaded into salesOrderDataTree, ready for selection and detail view.\r\n\r\n         } else {\r\n           appContentRef.value.footerMessage = result.message || 'Failed to load sales order details.';\r\n           showAppContent.value = false;\r\n         }\r\n       } catch (error: any) {\r\n         appContentRef.value.footerMessage = `Error fetching details: ${error.message}`;\r\n         showAppContent.value = false;\r\n       }\r\n     }\r\n   });\r\n };\r\n\r\n  const createSalesOrder = () => {\r\n    console.log('Creating sales order - showing quotation input modal');\r\n    showQuotationModal.value = true;\r\n    quotationModalMessage.value = ''; // Clear previous messages\r\n    quotationQueryTree.root?.forceSetValue({ quotation_id: '' }); // Reset input\r\n  };\r\n\r\n  const cancelQuotationInput = () => {\r\n    showQuotationModal.value = false;\r\n    quotationModalMessage.value = '';\r\n  };\r\n\r\n  const confirmQuotationInput = async () => {\r\n    const quotationId = quotationQueryTree.root?.findNodeByPath(['quotation_id'])?.getValue();\r\n    if (!quotationId) {\r\n      quotationModalMessage.value = 'Please enter a Quotation Number.';\r\n      return;\r\n    }\r\n\r\n    quotationModalMessage.value = 'Searching for quotation...';\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/quotation/details`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ quotation_id: quotationId }),\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (result.success && result.data?.quotationData) {\r\n        const quotationData = result.data.quotationData;\r\n        console.log('Quotation data fetched:', quotationData);\r\n\r\n        showQuotationModal.value = false;\r\n        showAppContent.value = true;\r\n        appToState('create');\r\n        salesOrderDataTree.root?.forceSetValue({}); // Clear existing data\r\n\r\n        // Populate basicInfo\r\n        const basicInfoNode = salesOrderDataTree.findNodeByPath(['basicInfo']);\r\n        if (basicInfoNode && quotationData.basicInfo) {\r\n          basicInfoNode.findNodeByPath(['quotation_id'])?.setValue(quotationData.basicInfo.quotation);\r\n          basicInfoNode.findNodeByPath(['soldToParty'])?.setValue(quotationData.basicInfo.soldToParty);\r\n          basicInfoNode.findNodeByPath(['shipToParty'])?.setValue(quotationData.basicInfo.shipToParty);\r\n          basicInfoNode.findNodeByPath(['customerReference'])?.setValue(quotationData.basicInfo.customerReference);\r\n          basicInfoNode.findNodeByPath(['netValue'])?.setValue(quotationData.basicInfo.netValue);\r\n          basicInfoNode.findNodeByPath(['netValueUnit'])?.setValue(quotationData.basicInfo.netValueUnit);\r\n          basicInfoNode.findNodeByPath(['customerReferenceDate'])?.setValue(quotationData.basicInfo.customerReferenceDate);\r\n        }\r\n\r\n        // Populate itemOverview and items\r\n        const itemOverviewNode = salesOrderDataTree.findNodeByPath(['itemOverview']);\r\n        if (itemOverviewNode && quotationData.itemOverview) {\r\n          itemOverviewNode.findNodeByPath(['reqDelivDate'])?.setValue(quotationData.itemOverview.reqDelivDate);\r\n\r\n          const itemsListNode = itemOverviewNode.findNodeByPath(['items']);\r\n          if (itemsListNode && quotationData.itemOverview.items) {\r\n            // Clear existing items and add new ones from quotation\r\n            itemsListNode.children = [];\r\n            quotationData.itemOverview.items.forEach((itemData: any, index: number) => {\r\n              const newItemNode = createNodeFromConfig(itemsListNode.config.childTemplate!);\r\n              newItemNode.forceSetValue({ ...itemData, item: (index + 1).toString() }); // Assign item number\r\n              itemsListNode.addChild(newItemNode);\r\n            });\r\n          }\r\n        }\r\n\r\n        salesOrderVarBoxKey.value++; // Force VarBox re-render\r\n        nextTick(() => {\r\n          if (appContentRef.value) {\r\n            appContentRef.value.goToStage(0);\r\n            appContentRef.value.footerMessage = 'Quotation data loaded. Ready to create new Sales Order.';\r\n          }\r\n        });\r\n\r\n      } else {\r\n        quotationModalMessage.value = result.message || 'Quotation not found or API error.';\r\n        console.error('Failed to fetch quotation details:', result);\r\n      }\r\n    } catch (error: any) {\r\n      quotationModalMessage.value = `Error fetching quotation: ${error.message}`;\r\n      console.error('Error during quotation fetch:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleChangeToDisplayAndSave = async () => {\r\n    appToState('display');\r\n    salesOrderVarBoxKey.value++; // Force VarBox re-render to apply readonly state change\r\n    // The actual save logic is now handled by handleExecute when currentStage is 0 and onChangeState is true\r\n    // This button just triggers the state change and re-render.\r\n  };\r\n\r\n  writableTrees.push(salesOrderDataTree);\r\n\r\n  // ItemConditionKit 已经处理了所有 item detail 相关的逻辑\r\n\r\n  const selectedItems = ref<VarNode[]>([]);\r\n  const currentItemIndex = ref(0);\r\n  // ItemConditionKit 自动处理编辑节点\r\n\r\n  // ItemConditionDetail 内部处理标签页切换\r\n\r\n  // ItemConditionDetail 内部处理按钮标签和可见性\r\n\r\n  // ItemConditionKit 自动处理所有 item detail 数据更新\r\n\r\n  // ItemConditionKit 自动处理定价元素的删除和验证\r\n\r\n  /**\r\n   * @description Pricing Element Rules\r\n   * @description Addition: Directly pass to backend for validation and return normalized data / if value is corrupted, set validation to false\r\n   * @description No need to write, just follow the validation logic of handleEnterFromNodeItemCondition\r\n   */\r\n\r\n  // ItemConditionKit 自动处理所有验证、切换、保存和取消逻辑\r\n\r\n  /**\r\n   * @description Sales order variable tree enter-from-node event handler\r\n   * @param node Node object\r\n   * @param value Value\r\n   * @param data Other data\r\n   */\r\n  async function handleEnterFromNodeSalesOrderTree(node: VarNode, value: string, data: any) {\r\n    // This function is for the main sales order form.\r\n    // If an item field is changed, we might want to trigger a re-calculation of total values.\r\n    // For now, we'll leave it simple, as item detail validation is handled separately.\r\n    if (data.nodePath.length > 2 && data.nodePath[0] === 'itemOverview' && data.nodePath[1] === 'items') {\r\n      // Trigger price query for all items in the main form if an item field is changed\r\n      await itemsTabQueryAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Encapsulate itemsTabQuery - query all\r\n   */\r\n  async function itemsTabQueryAll() {\r\n    const items = salesOrderDataTree.findNodeByPath(['itemOverview','items'])?.children || [];\r\n    return await itemsTabQuery(items);\r\n  }\r\n\r\n  /**\r\n   * @description Sales order batch query, send VarNode[] to backend, return Net Value: and Expect. Oral Val: including value and unit, and detailed information for each item\r\n   * @description This method will update the data in the input VarNode[]\r\n   * @param {Array<VarNode>} itemNodes\r\n   * Also set config.data.validation for each VarNode based on returned badRecordIndices\r\n   */\r\n  async function itemsTabQuery(itemNodes: VarNode[]) {\r\n    // Extract values from each VarNode\r\n    const itemValues = itemNodes.map(node => node.getValue());\r\n\r\n    const data = await fetch(`${API_BASE_URL}/api/app/inquiry/items-tab-query`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(itemValues)\r\n    }).then(response => {\r\n      console.log('Normal return', response);\r\n      return response.json();\r\n    }).catch(error => {\r\n      console.error('Batch query failed:', error);\r\n      return { success: false };\r\n    });\r\n\r\n    console.log('Returned data', data);\r\n\r\n    if (data.success) {\r\n      // Update overall data (if applicable, e.g., total net value for the sales order)\r\n      // For sales orders, the total net value is typically calculated from items.\r\n      // We might want to update salesOrderDataTree.basicInfo.netValue here if needed.\r\n\r\n      // Update detailed information for each item, use forceSetValue to ensure full update\r\n      if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n        data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n          if (index < itemNodes.length) {\r\n            console.log('Breakdown data for item', index, ':', breakdown);\r\n            if (breakdown.pricingElements) {\r\n              console.log('PricingElements structure:', breakdown.pricingElements);\r\n            }\r\n            // Use forceSetValue to ensure all fields including pricingElements are correctly updated\r\n            itemNodes[index].forceSetValue(breakdown);\r\n          }\r\n        });\r\n      }\r\n\r\n      // Set validation based on badRecordIndices\r\n      if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n        // First, reset validation for all nodes\r\n        itemNodes.forEach(node => {\r\n          if (!node.config.data) {\r\n            node.config.data = {};\r\n          }\r\n          node.config.data.validation = true;\r\n        });\r\n\r\n        // Set validation for invalid nodes\r\n        data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n          if (badIndex < itemNodes.length) {\r\n            if (!itemNodes[badIndex].config.data) {\r\n              itemNodes[badIndex].config.data = {};\r\n            }\r\n            itemNodes[badIndex].config.data.validation = false;\r\n          }\r\n        });\r\n      }\r\n\r\n      appContentRef.value.forceUpdate();\r\n      return data.data.result.allDataLegal === 1;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @description Handle the click event for the Items Table button\r\n   * @param selection Selected rows (not used directly, we get items from salesOrderDataTree)\r\n   */\r\n  async function handleItemsTableClick() {\r\n    const items = salesOrderDataTree.findNodeByPath(['itemOverview','items'])!;\r\n    const selectedChildren = [...items.getSelectedChildren()];\r\n\r\n    if (selectedChildren && selectedChildren.length > 0) {\r\n      // First, check if all selected items have a validation status\r\n      const itemsWithoutValidation = selectedChildren.filter(item =>\r\n        item.config.data?.validation === undefined\r\n      );\r\n\r\n      // If there are unvalidated items, validate them first\r\n      if (itemsWithoutValidation.length > 0) {\r\n        console.log('Found unvalidated items, validating...');\r\n        const result = await itemsTabQuery(itemsWithoutValidation as VarNode[]);\r\n        if (!result) {\r\n          console.log('Validation failed, cannot proceed');\r\n          return; // Validation failed, do not proceed\r\n        }\r\n      }\r\n\r\n      // Re-check if all selected items passed validation\r\n      const hasInvalidItems = selectedChildren.some(item =>\r\n        item.config.data?.validation === false\r\n      );\r\n\r\n      if (hasInvalidItems) {\r\n        console.log('There are invalid items, cannot proceed');\r\n        return; // There are invalid items, do not proceed\r\n      }\r\n\r\n      // All validations passed, proceed\r\n      selectedItems.value = selectedChildren;\r\n      currentItemIndex.value = 0;\r\n\r\n      // Switch to the detail page\r\n      appContentRef.value.goToStage(1); // Stage 1 is itemDetails\r\n\r\n      // 延迟清空items表格的选中状态，让ItemConditionDetail组件先初始化\r\n      setTimeout(() => {\r\n        items.children.forEach(child => {\r\n          child.setSelection(false);\r\n        });\r\n      }, 100);\r\n    } else {\r\n      console.log('No items selected');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ItemConditionDetail 事件处理函数\r\n   */\r\n  function handleItemConditionValidationSuccess(items: VarNode[]) {\r\n    console.log('Item condition validation success:', items)\r\n  }\r\n\r\n  function handleItemConditionValidationFailed(items: VarNode[]) {\r\n    console.log('Item condition validation failed:', items)\r\n  }\r\n\r\n  function handleItemConditionSave() {\r\n    console.log('Item condition save')\r\n    // 返回到主页面\r\n    appContentRef.value.goToStage(0)\r\n  }\r\n\r\n  function handleItemConditionCancel() {\r\n    console.log('Item condition cancel')\r\n    // 返回到主页面\r\n    appContentRef.value.goToStage(0)\r\n  }\r\n\r\n  // Custom Confirmation Modal Logic (replaces window.confirm)\r\n  const showConfirm = ref(false);\r\n  const confirmMessage = ref('');\r\n  let confirmResolve: ((value: boolean | PromiseLike<boolean>) => void) | null = null;\r\n\r\n  function showConfirmationModal(message: string): Promise<boolean> {\r\n    confirmMessage.value = message;\r\n    showConfirm.value = true;\r\n    return new Promise((resolve) => {\r\n      confirmResolve = resolve;\r\n    });\r\n  }\r\n\r\n  function handleConfirm(response: boolean) {\r\n    showConfirm.value = false;\r\n    if (confirmResolve) {\r\n      confirmResolve(response);\r\n      confirmResolve = null;\r\n    }\r\n  }\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (!showAppContent.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createVNode(VarBox, {\n              tree: _unref(salesOrderQueryTree),\n              class: \"sales-order-query-varbox\"\n            }, null, 8, [\"tree\"]),\n            _createElementVNode(\"div\", {\n              class: \"go-button-container\",\n              onClick: performSalesOrderSearch\n            }, _cache[1] || (_cache[1] = [\n              _createElementVNode(\"button\", { class: \"go-button\" }, \"Go\", -1)\n            ]))\n          ]),\n          (searchPerformed.value && salesOrdersResult.value && salesOrdersResult.value.length > 0)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _cache[3] || (_cache[3] = _createStaticVNode(\"<div class=\\\"sales-order-row-header\\\" data-v-41226678><div class=\\\"header-item sales-order-id\\\" data-v-41226678>Sales Order</div><div class=\\\"header-item sold-to-party\\\" data-v-41226678>Sold-To Party</div><div class=\\\"header-item customer-reference\\\" data-v-41226678>Customer Reference</div><div class=\\\"header-item req-delivery-date\\\" data-v-41226678>Requested Delivery Date</div><div class=\\\"header-item overall-status\\\" data-v-41226678>Overall Status</div><div class=\\\"header-item net-value\\\" data-v-41226678>Net Value</div><div class=\\\"header-item doc-date\\\" data-v-41226678>Document Date</div><div class=\\\"header-item\\\" data-v-41226678></div></div>\", 1)),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(salesOrdersResult.value, (order) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: order.so_id,\n                      class: \"sales-order-row\",\n                      onClick: ($event: any) => (viewSalesOrderDetail(order.so_id))\n                    }, [\n                      _createElementVNode(\"span\", _hoisted_7, _toDisplayString(order.so_id), 1),\n                      _createElementVNode(\"span\", _hoisted_8, _toDisplayString(order.soldToPartyName) + \" (\" + _toDisplayString(order.customer_no) + \")\", 1),\n                      _createElementVNode(\"span\", _hoisted_9, _toDisplayString(order.customer_reference), 1),\n                      _createElementVNode(\"span\", _hoisted_10, _toDisplayString(order.req_delivery_date), 1),\n                      _createElementVNode(\"span\", {\n                        class: _normalizeClass(['row-item overall-status', { 'status-open': order.status === 'Open', 'status-completed': order.status === 'Completed', 'status-in-progress': order.status === 'In Progress', 'status-new': order.status === 'New' }])\n                      }, _toDisplayString(order.status), 3),\n                      _createElementVNode(\"span\", _hoisted_11, _toDisplayString(order.net_value) + \" \" + _toDisplayString(order.currency), 1),\n                      _createElementVNode(\"span\", _hoisted_12, _toDisplayString(order.doc_date), 1),\n                      _cache[2] || (_cache[2] = _createElementVNode(\"span\", { class: \"row-item arrow-icon\" }, \"▶\", -1))\n                    ], 8, _hoisted_6))\n                  }), 128))\n                ])\n              ]))\n            : (searchPerformed.value && salesOrdersResult.value && salesOrdersResult.value.length === 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _cache[4] || (_cache[4] = [\n                  _createElementVNode(\"p\", null, \"No sales orders found matching your criteria.\", -1)\n                ])))\n              : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _cache[5] || (_cache[5] = [\n                  _createElementVNode(\"p\", null, \"Enter query criteria and click \\\"Go\\\" to see results.\", -1)\n                ])))\n        ]))\n      : _createCommentVNode(\"\", true),\n    (!showAppContent.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n          _createElementVNode(\"button\", {\n            class: \"create-sales-order-button\",\n            onClick: createSalesOrder\n          }, \"Create Sales Order\")\n        ]))\n      : _createCommentVNode(\"\", true),\n    (showQuotationModal.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n          _createElementVNode(\"div\", _hoisted_17, [\n            _cache[6] || (_cache[6] = _createElementVNode(\"h4\", null, \"Enter Quotation\", -1)),\n            _createVNode(VarBox, {\n              tree: _unref(quotationQueryTree),\n              class: \"quotation-input-varbox\"\n            }, null, 8, [\"tree\"]),\n            _createElementVNode(\"div\", { class: \"modal-actions\" }, [\n              _createElementVNode(\"button\", {\n                onClick: cancelQuotationInput,\n                class: \"cancel-button\"\n              }, \"Cancel\"),\n              _createElementVNode(\"button\", {\n                onClick: confirmQuotationInput,\n                class: \"save-button\"\n              }, \"Confirm\")\n            ]),\n            (quotationModalMessage.value)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_18, _toDisplayString(quotationModalMessage.value), 1))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (showAppContent.value)\n      ? (_openBlock(), _createBlock(AppContent, {\n          key: 3,\n          stages: ['salesOrderForm', 'itemDetails'],\n          \"before-next\": handleExecute,\n          \"before-prev\": handleCancel,\n          \"footer-config\": [\r\n        { prevText: salesOrderFormPrevButtonLabel.value, nextText: salesOrderFormNextButtonLabel.value },\r\n        { prevText: itemDetailsPrevButtonLabel.value, nextText: itemDetailsNextButtonLabel.value }\r\n      ],\n          ref_key: \"appContentRef\",\n          ref: appContentRef\n        }, {\n          \"stage-salesOrderForm\": _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_19, [\n              (_openBlock(), _createBlock(VarBox, {\n                tree: _unref(salesOrderDataTree),\n                class: _normalizeClass({\r\n             'sales-order-detail-varbox': onDisplayState.value || onChangeState.value,\r\n             'sales-order-creation-varbox': onCreateState.value\r\n           }),\n                key: salesOrderVarBoxKey.value,\n                onEnterFromNode: handleEnterFromNodeSalesOrderTree\n              }, {\n                \"SOData-itemOverview-items--extra-buttons\": _withCtx(() => [\n                  _createElementVNode(\"button\", {\n                    class: \"execute-button table-extra-button\",\n                    onClick: handleItemsTableClick,\n                    disabled: !_unref(salesOrderDataTree).findNodeByPath(['itemOverview','items'])?.getSelectedChildren().length\n                  }, \" ... \", 8, _hoisted_20)\n                ]),\n                _: 1\n              }, 8, [\"tree\", \"class\"]))\n            ])\n          ]),\n          \"stage-itemDetails\": _withCtx(() => [\n            _createVNode(ItemConditionDetail, {\n              kit: _unref(itemConditionKit),\n              config: {\r\n            navigationLabels: {\r\n              cancel: 'Cancel',\r\n              save: 'Save',\r\n              previous: '← Previous',\r\n              next: 'Next →'\r\n            }\r\n          },\n              onValidationSuccess: handleItemConditionValidationSuccess,\n              onValidationFailed: handleItemConditionValidationFailed,\n              onSave: handleItemConditionSave,\n              onCancel: handleItemConditionCancel\n            }, {\n              \"footer-content-right\": _withCtx(() => [\n                _renderSlot(_ctx.$slots, \"footer-content-right\")\n              ]),\n              _: 3\n            }, 8, [\"kit\"])\n          ]),\n          \"footer-content-right\": _withCtx(() => [\n            (currentAppStage.value === 0 && (onCreateState.value || onDisplayState.value))\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 0,\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (handleCancel(0, -1))),\n                  class: \"footer-cancel-button\"\n                }, \" Cancel \"))\n              : _createCommentVNode(\"\", true),\n            (currentAppStage.value === 0 && onChangeState.value)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 1,\n                  onClick: handleChangeToDisplayAndSave,\n                  class: \"footer-cancel-button\"\n                }, \" Save and Display \"))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 3\n        }, 8, [\"footer-config\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"manage-sales-orders-view\">\r\n    <div class=\"so-page-content\" v-if=\"!showAppContent\">\r\n      <div class=\"sales-order-search\">\r\n        <VarBox\r\n          :tree=\"salesOrderQueryTree\"\r\n          class=\"sales-order-query-varbox\"\r\n        />\r\n        <div class=\"go-button-container\" @click=\"performSalesOrderSearch\">\r\n          <button class=\"go-button\">Go</button>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"searchPerformed && salesOrdersResult && salesOrdersResult.length > 0\" class=\"query-results-list\" style=\"width: 100%;\">\r\n        <div class=\"sales-order-rows-container\">\r\n          <div class=\"sales-order-row-header\">\r\n              <div class=\"header-item sales-order-id\">Sales Order</div>\r\n              <div class=\"header-item sold-to-party\">Sold-To Party</div>\r\n              <div class=\"header-item customer-reference\">Customer Reference</div>\r\n              <div class=\"header-item req-delivery-date\">Requested Delivery Date</div>\r\n              <div class=\"header-item overall-status\">Overall Status</div>\r\n              <div class=\"header-item net-value\">Net Value</div>\r\n              <div class=\"header-item doc-date \">Document Date</div>\r\n              <div class=\"header-item\"></div> </div>\r\n          <div v-for=\"order in salesOrdersResult\" :key=\"order.so_id\" class=\"sales-order-row\" @click=\"viewSalesOrderDetail(order.so_id)\">\r\n            <span class=\"row-item sales-order-id\">{{ order.so_id }}</span>\r\n            <span class=\"row-item sold-to-party\">{{ order.soldToPartyName }} ({{ order.customer_no }})</span>\r\n            <span class=\"row-item customer-reference\">{{ order.customer_reference }}</span>\r\n            <span class=\"row-item req-delivery-date\">{{ order.req_delivery_date }}</span>\r\n            <span :class=\"['row-item overall-status', { 'status-open': order.status === 'Open', 'status-completed': order.status === 'Completed', 'status-in-progress': order.status === 'In Progress', 'status-new': order.status === 'New' }]\">\r\n              {{ order.status }}\r\n            </span>\r\n            <span class=\"row-item net-value\">{{ order.net_value }} {{ order.currency }}</span>\r\n            <span class=\"row-item doc-date\">{{ order.doc_date }}</span>\r\n            <span class=\"row-item arrow-icon\">▶</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"searchPerformed && salesOrdersResult && salesOrdersResult.length === 0\" class=\"no-results\">\r\n        <p>No sales orders found matching your criteria.</p>\r\n      </div>\r\n      <div v-else class=\"initial-output-message\">\r\n        <p>Enter query criteria and click \"Go\" to see results.</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom-actions\" v-if=\"!showAppContent\">\r\n      <button class=\"create-sales-order-button\" @click=\"createSalesOrder\">Create Sales Order</button>\r\n    </div>\r\n\r\n    <!-- Quotation Input Modal -->\r\n    <div v-if=\"showQuotationModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <h4>Enter Quotation</h4>\r\n        <VarBox :tree=\"quotationQueryTree\" class=\"quotation-input-varbox\" />\r\n        <div class=\"modal-actions\">\r\n          <button @click=\"cancelQuotationInput\" class=\"cancel-button\">Cancel</button>\r\n          <button @click=\"confirmQuotationInput\" class=\"save-button\">Confirm</button>\r\n        </div>\r\n        <p v-if=\"quotationModalMessage\" class=\"modal-message\">{{ quotationModalMessage }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <AppContent\r\n      v-if=\"showAppContent\"\r\n      :stages=\"['salesOrderForm', 'itemDetails']\"\r\n      :before-next=\"handleExecute\"\r\n      :before-prev=\"handleCancel\"\r\n      :footer-config=\"[\r\n        { prevText: salesOrderFormPrevButtonLabel, nextText: salesOrderFormNextButtonLabel },\r\n        { prevText: itemDetailsPrevButtonLabel, nextText: itemDetailsNextButtonLabel }\r\n      ]\"\r\n      ref=\"appContentRef\"\r\n    >\r\n      <template #stage-salesOrderForm>\r\n        <div class=\"page-content\">\r\n          <VarBox\r\n           :tree=\"salesOrderDataTree\"\r\n           :class=\"{\r\n             'sales-order-detail-varbox': onDisplayState || onChangeState,\r\n             'sales-order-creation-varbox': onCreateState\r\n           }\"\r\n           :key=\"salesOrderVarBoxKey\"\r\n           @enter-from-node=\"handleEnterFromNodeSalesOrderTree\"\r\n           >\r\n            <!-- Add the \"...\" button for ItemOverview table -->\r\n            <template #SOData-itemOverview-items--extra-buttons>\r\n              <button\r\n                class = \"execute-button table-extra-button\"\r\n                @click=\"handleItemsTableClick\"\r\n                :disabled=\"!salesOrderDataTree.findNodeByPath(['itemOverview','items'])?.getSelectedChildren().length\"\r\n              >\r\n                ...\r\n              </button>\r\n            </template>\r\n           </VarBox>\r\n        </div>\r\n      </template>\r\n\r\n      <template #stage-itemDetails>\r\n        <ItemConditionDetail\r\n          :kit=\"itemConditionKit\"\r\n          :config=\"{\r\n            navigationLabels: {\r\n              cancel: 'Cancel',\r\n              save: 'Save',\r\n              previous: '← Previous',\r\n              next: 'Next →'\r\n            }\r\n          }\"\r\n          @validation-success=\"handleItemConditionValidationSuccess\"\r\n          @validation-failed=\"handleItemConditionValidationFailed\"\r\n          @save=\"handleItemConditionSave\"\r\n          @cancel=\"handleItemConditionCancel\"\r\n        >\r\n          <!-- teleport目标插槽 -->\r\n          <template #footer-content-right>\r\n            <slot name=\"footer-content-right\"></slot>\r\n          </template>\r\n        </ItemConditionDetail>\r\n      </template>\r\n\r\n      <template #footer-content-right>\r\n        <button\r\n         v-if=\"currentAppStage === 0 && (onCreateState || onDisplayState)\"\r\n         @click=\"handleCancel(0, -1)\"\r\n         class=\"footer-cancel-button\">\r\n         Cancel\r\n        </button>\r\n        <button\r\n          v-if=\"currentAppStage === 0 && onChangeState\"\r\n          @click=\"handleChangeToDisplayAndSave\"\r\n          class=\"footer-cancel-button\">\r\n          Save and Display\r\n        </button>\r\n        <!-- ItemConditionDetail 组件会自动处理 Cancel 和 Save 按钮 -->\r\n      </template>\r\n\r\n    </AppContent>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\n// FilterTabs 不再需要，ItemConditionDetail 内部处理标签页\r\nimport { ref, Ref, computed, nextTick, onMounted } from 'vue';\r\nimport { createTreeFromConfig, cns, VarTree, VarNodeValue, VarNode, createNodeFromConfig } from '@/utils/VarTree';\r\nimport { bpSearch, quotationIdSearch, salesOrderIdSearch } from '@/utils/searchMethods';\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\nlet API_BASE_URL = window.API_BASE_URL || '';\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || '';\r\n})\r\n\r\nimport AppContent from '@/components/applicationContent/AppContent.vue';\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/sales-order/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\nconst appContentRef = ref(null) as any;\r\nconst currentAppStage = computed(() => appContentRef.value?.currentStage || 0);\r\nconst showAppContent = ref(false);\r\n\r\n// Quotation Modal related states\r\nconst showQuotationModal = ref(false);\r\nconst quotationModalMessage = ref('');\r\n\r\n// Define the structure for the quotation input\r\nconst quotationQueryStructure = cns(\r\n  \"dict\", \"dict\", \"quotationQuery\", null, false, { hideLabel: true },\r\n  [\r\n    cns(\"string\", \"leaf\", \"quotation_id\", '', false, {searchMethods: quotationIdSearch}, [], \"Quotation Number:\"),\r\n  ]\r\n);\r\nconst quotationQueryTree = createTreeFromConfig(quotationQueryStructure);\r\n\r\n\r\ntype State = 'create' | 'change' | 'display';\r\n\r\nconst state: Ref<State> = ref('display');\r\nconst salesOrderVarBoxKey = ref(0);\r\nconst onCreateState = computed(() => state.value === 'create');\r\nconst onChangeState = computed(() => state.value === 'change');\r\nconst onDisplayState = computed(() => state.value === 'display');\r\n\r\nfunction appToState(newState: State) {\r\n  state.value = newState;\r\n  let readonly = newState === 'display';\r\n  writableTrees.forEach(tree => {\r\n    if (tree.root) {\r\n      tree.root.readonly = readonly;\r\n    }\r\n  });\r\n}\r\n\r\nconst writableTrees: VarTree[] = [];\r\n\r\ninterface SalesOrderResult {\r\n  so_id: string;\r\n  soldToPartyName: string;\r\n  customer_no: string;\r\n  customer_reference: string;\r\n  req_delivery_date: string;\r\n  status: 'New' | 'Open' | 'In Progress' | 'Completed';\r\n  net_value: string;\r\n  currency: string;\r\n  doc_date: string;\r\n}\r\n\r\nconst salesOrderQueryStructure = cns(\r\n  \"dict\", \"dict\", \"salesOrderQuery\", null, false, { hideLabel: true },\r\n  [\r\n    cns(\"string\", \"leaf\", \"so_id\", '', false, { searchMethods: salesOrderIdSearch }, [], \"Sales Order:\"),\r\n    cns(\"selection\", \"leaf\", \"status\", '', false, {options:['New','Open','In progress','Completed']}, [], \"Overall Status:\"),\r\n    cns(\"string\", \"leaf\", \"customer_no\", '', false, { searchMethods: bpSearch }, [], \"Sold-To Party:\"),\r\n    cns(\"string\", \"leaf\", \"customer_reference\", '', false, {}, [], \"Customer Reference:\"),\r\n  ]\r\n);\r\n\r\nconst salesOrderDataTree = createTreeFromConfig(\r\n   cns('dict','dict','SOData',{},false,{hideLabel:true},[\r\n     cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n       cns('string','leaf','id','',false,{},[]),\r\n     ]),\r\n     cns('dict','dict','basicInfo',{},false,{hideLabel:true},[\r\n       cns('string','leaf','quotation_id','',false,{searchMethods: quotationIdSearch},[],\"Quotation:\"),\r\n       cns('string','leaf','so_id','',true,{},[],\"Sales Order:\"),\r\n       cns('string','leaf','soldToParty','',false,{},[],\"Sold-To Party:\"),\r\n       cns('string','leaf','shipToParty','',false,{},[],\"Ship-To Party:\"),\r\n       cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n       cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n       cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n       cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n     ]),\r\n     cns('dict','dict','itemOverview',{},false,{},[\r\n       cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n       // items节点将通过ItemConditionKit动态创建\r\n     ],'Item Overview')\r\n   ])\r\n );\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  salesOrderDataTree,\r\n  ['itemOverview', 'items']\r\n)\r\n\r\n  const salesOrderQueryTree = createTreeFromConfig(salesOrderQueryStructure);\r\n  const salesOrdersResult: Ref<SalesOrderResult[]> = ref([]);\r\n  const searchPerformed = ref(false);\r\n\r\n\r\n  const performSalesOrderSearch = async () => {\r\n    console.log('Executing sales order query...');\r\n    const fullUrl = `${API_BASE_URL}/api/so/search`;\r\n    console.log('Attempting to fetch from URL:', fullUrl);\r\n    const queryData = salesOrderQueryTree.root?.getValue();\r\n    console.log('Submitting query data:', JSON.stringify(queryData, null, 2));\r\n\r\n    searchPerformed.value = true;\r\n    salesOrdersResult.value = [];\r\n\r\n    try {\r\n      const response = await fetch(fullUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(queryData),\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (result.success && Array.isArray(result.data)) {\r\n        salesOrdersResult.value = result.data;\r\n      } else {\r\n        console.error('API call failed or returned unexpected data:', result);\r\n        salesOrdersResult.value = [];\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error during sales order search:', error);\r\n      salesOrdersResult.value = [];\r\n    }\r\n  };\r\n\r\n  const salesOrderFormPrevButtonLabel = computed(() => {\r\n    return 'Cancel';\r\n  });\r\n\r\n  const salesOrderFormNextButtonLabel = computed(() => {\r\n    if (onCreateState.value) {\r\n      return 'Create';\r\n    }\r\n    if (onChangeState.value) {\r\n      return 'Save';\r\n    }\r\n    if (onDisplayState.value) {\r\n      return 'Change';\r\n    }\r\n    return '/hide';\r\n  });\r\n\r\n  const itemDetailsPrevButtonLabel = computed(() => {\r\n    return '/hide';\r\n  });\r\n\r\n  const itemDetailsNextButtonLabel = computed(() => {\r\n    if (onCreateState.value || onChangeState.value) {\r\n      return '/hide';\r\n    }\r\n    return '/hide';\r\n  });\r\n\r\n  async function handleCancel(currentStage: number, targetStage: number) {\r\n    console.log('AppContent handleCancel: currentStage', currentStage, 'targetStage', targetStage);\r\n\r\n    // If currently in the first stage (sales order form)\r\n    if (currentStage === 0) {\r\n      // If in create or change mode, prompt for confirmation\r\n      if (onCreateState.value || onChangeState.value) {\r\n        // Using a custom modal/message box instead of confirm()\r\n        if (!await showConfirmationModal('Are you sure you want to cancel? Any unsaved changes will be lost.')) {\r\n          return false; // User chose not to cancel, prevent navigation\r\n        }\r\n      }\r\n      // For all modes (create, change, display) in stage 0, hide AppContent to return to query list\r\n      showAppContent.value = false;\r\n      appContentRef.value.goToStage(0); // Reset AppContent internal stage so it starts from 0 next time\r\n      appContentRef.value.footerMessage = ''; // Clear footer message\r\n      return false; // Prevent AppContent from trying internal navigation as we've handled external display logic\r\n    }\r\n\r\n    // If currently in the item details stage (stage 1)\r\n    if (currentStage === 1) {\r\n      // For create or change mode, prompt for confirmation before going back to the form\r\n      if (onCreateState.value || onChangeState.value) {\r\n        // Using a custom modal/message box instead of confirm()\r\n        if (!await showConfirmationModal('Are you sure you want to go back? Unsaved item changes will be lost.')) {\r\n          return false; // User chose not to go back, prevent navigation\r\n        }\r\n      }\r\n      // If confirmed or in display mode, go back to the sales order form (stage 0)\r\n      appContentRef.value.footerMessage = '';\r\n      selectedItems.value = []; // Clear selected items\r\n      currentItemIndex.value = 0; // Reset current item index\r\n      return true; // Allow AppContent to navigate back to stage 0\r\n    }\r\n    appContentRef.value.footerMessage = '';\r\n    return true;\r\n  }\r\n\r\n  async function handleExecute(currentStage: number, targetStage: number) {\r\n    console.log('AppContent handleExecute: currentStage', currentStage, 'targetStage', targetStage);\r\n    appContentRef.value.footerMessage = '';\r\n\r\n    if (currentStage === 0) {\r\n      if (onDisplayState.value) {\r\n        console.log('Switching to change state...');\r\n        appToState('change');\r\n        salesOrderVarBoxKey.value++;\r\n        appContentRef.value.footerMessage = 'Switched to Change mode.';\r\n        return false;\r\n      } else if (onCreateState.value || onChangeState.value) {\r\n        console.log('Saving/Creating sales order...');\r\n        const dataToSave = salesOrderDataTree.root?.getValue();\r\n\r\n        let endpoint = onCreateState.value ? `${API_BASE_URL}/api/so/create` : `${API_BASE_URL}/api/so/edit`;\r\n        let method = 'POST';\r\n\r\n        if (onChangeState.value && !(dataToSave as { basicInfo?: { so_id?: string } })?.basicInfo?.so_id) {\r\n         appContentRef.value.footerMessage = 'Sales Order ID is required for change operations.';\r\n         return false;\r\n       }\r\n\r\n        try {\r\n          const response = await fetch(endpoint, {\r\n            method: method,\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(dataToSave)\r\n          });\r\n\r\n          const result = await response.json();\r\n          if (result.success) {\r\n            appContentRef.value.footerMessage = result.message || (onCreateState.value ? 'Sales Order created successfully!' : 'Sales Order saved successfully!');\r\n            // After successful creation/save, stay on stage 0 (sales order form)\r\n            if (onCreateState.value && result.data?.so_id) {\r\n              salesOrderDataTree.findNodeByPath(['basicInfo', 'so_id'])?.setValue(result.data.so_id);\r\n              salesOrderDataTree.findNodeByPath(['meta', 'id'])?.setValue(result.data.so_id);\r\n            }\r\n            appToState('display'); // Switch to display mode after save/create\r\n            // No automatic navigation to item details here. User will click \"...\"\r\n            // showAppContent.value = false; // Stay on the form, don't go back to search list\r\n            // performSalesOrderSearch(); // No need to refresh search list from here\r\n            return false; // Prevent AppContent from navigating to next stage\r\n          } else {\r\n            appContentRef.value.footerMessage = result.message || 'Operation failed.';\r\n            return false;\r\n          }\r\n        } catch (error: any) {\r\n          console.error('Operation failed:', error);\r\n          appContentRef.value.footerMessage = `Operation failed: ${error.message || 'Network error'}`;\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (currentStage === 1) {\r\n      console.log('Handling item details confirmation...');\r\n      // Validate all items before confirming\r\n      const allItemsValid = await itemsTabQueryAll();\r\n      if (allItemsValid) {\r\n        appContentRef.value.footerMessage = 'All item details confirmed and saved.';\r\n        // After confirming items, switch to display mode and go back to sales order form (stage 0)\r\n        appToState('display');\r\n        appContentRef.value.goToStage(0); // Go back to sales order form\r\n        // showAppContent.value = false; // Don't go back to search list\r\n        // performSalesOrderSearch(); // No need to refresh search list from here\r\n        return false; // Prevent AppContent from navigating, we've handled it\r\n      } else {\r\n        appContentRef.value.footerMessage = 'Some item details are invalid. Please correct them.';\r\n        return false; // Prevent navigation if items are invalid\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  const viewSalesOrderDetail = async (soId: string) => {\r\n    console.log(`Navigating to sales order detail page for SO ID: ${soId}`);\r\n    showAppContent.value = true;\r\n    appToState('display');\r\n\r\n   nextTick(async () => {\r\n     if (appContentRef.value) {\r\n       appContentRef.value.goToStage(0);\r\n\r\n       appContentRef.value.footerMessage = 'Fetching sales order details...';\r\n       try {\r\n         const response = await fetch(`${API_BASE_URL}/api/so/get/${soId}`);\r\n         const result = await response.json();\r\n         if (result.success && result.data) {\r\n           salesOrderDataTree.root?.forceSetValue(result.data);\r\n           salesOrderVarBoxKey.value++;\r\n           appContentRef.value.footerMessage = 'Sales order details loaded.';\r\n\r\n           // No automatic navigation to item details here, user will click \"...\"\r\n           // The items are loaded into salesOrderDataTree, ready for selection and detail view.\r\n\r\n         } else {\r\n           appContentRef.value.footerMessage = result.message || 'Failed to load sales order details.';\r\n           showAppContent.value = false;\r\n         }\r\n       } catch (error: any) {\r\n         appContentRef.value.footerMessage = `Error fetching details: ${error.message}`;\r\n         showAppContent.value = false;\r\n       }\r\n     }\r\n   });\r\n };\r\n\r\n  const createSalesOrder = () => {\r\n    console.log('Creating sales order - showing quotation input modal');\r\n    showQuotationModal.value = true;\r\n    quotationModalMessage.value = ''; // Clear previous messages\r\n    quotationQueryTree.root?.forceSetValue({ quotation_id: '' }); // Reset input\r\n  };\r\n\r\n  const cancelQuotationInput = () => {\r\n    showQuotationModal.value = false;\r\n    quotationModalMessage.value = '';\r\n  };\r\n\r\n  const confirmQuotationInput = async () => {\r\n    const quotationId = quotationQueryTree.root?.findNodeByPath(['quotation_id'])?.getValue();\r\n    if (!quotationId) {\r\n      quotationModalMessage.value = 'Please enter a Quotation Number.';\r\n      return;\r\n    }\r\n\r\n    quotationModalMessage.value = 'Searching for quotation...';\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/quotation/details`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ quotation_id: quotationId }),\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (result.success && result.data?.quotationData) {\r\n        const quotationData = result.data.quotationData;\r\n        console.log('Quotation data fetched:', quotationData);\r\n\r\n        showQuotationModal.value = false;\r\n        showAppContent.value = true;\r\n        appToState('create');\r\n        salesOrderDataTree.root?.forceSetValue({}); // Clear existing data\r\n\r\n        // Populate basicInfo\r\n        const basicInfoNode = salesOrderDataTree.findNodeByPath(['basicInfo']);\r\n        if (basicInfoNode && quotationData.basicInfo) {\r\n          basicInfoNode.findNodeByPath(['quotation_id'])?.setValue(quotationData.basicInfo.quotation);\r\n          basicInfoNode.findNodeByPath(['soldToParty'])?.setValue(quotationData.basicInfo.soldToParty);\r\n          basicInfoNode.findNodeByPath(['shipToParty'])?.setValue(quotationData.basicInfo.shipToParty);\r\n          basicInfoNode.findNodeByPath(['customerReference'])?.setValue(quotationData.basicInfo.customerReference);\r\n          basicInfoNode.findNodeByPath(['netValue'])?.setValue(quotationData.basicInfo.netValue);\r\n          basicInfoNode.findNodeByPath(['netValueUnit'])?.setValue(quotationData.basicInfo.netValueUnit);\r\n          basicInfoNode.findNodeByPath(['customerReferenceDate'])?.setValue(quotationData.basicInfo.customerReferenceDate);\r\n        }\r\n\r\n        // Populate itemOverview and items\r\n        const itemOverviewNode = salesOrderDataTree.findNodeByPath(['itemOverview']);\r\n        if (itemOverviewNode && quotationData.itemOverview) {\r\n          itemOverviewNode.findNodeByPath(['reqDelivDate'])?.setValue(quotationData.itemOverview.reqDelivDate);\r\n\r\n          const itemsListNode = itemOverviewNode.findNodeByPath(['items']);\r\n          if (itemsListNode && quotationData.itemOverview.items) {\r\n            // Clear existing items and add new ones from quotation\r\n            itemsListNode.children = [];\r\n            quotationData.itemOverview.items.forEach((itemData: any, index: number) => {\r\n              const newItemNode = createNodeFromConfig(itemsListNode.config.childTemplate!);\r\n              newItemNode.forceSetValue({ ...itemData, item: (index + 1).toString() }); // Assign item number\r\n              itemsListNode.addChild(newItemNode);\r\n            });\r\n          }\r\n        }\r\n\r\n        salesOrderVarBoxKey.value++; // Force VarBox re-render\r\n        nextTick(() => {\r\n          if (appContentRef.value) {\r\n            appContentRef.value.goToStage(0);\r\n            appContentRef.value.footerMessage = 'Quotation data loaded. Ready to create new Sales Order.';\r\n          }\r\n        });\r\n\r\n      } else {\r\n        quotationModalMessage.value = result.message || 'Quotation not found or API error.';\r\n        console.error('Failed to fetch quotation details:', result);\r\n      }\r\n    } catch (error: any) {\r\n      quotationModalMessage.value = `Error fetching quotation: ${error.message}`;\r\n      console.error('Error during quotation fetch:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleChangeToDisplayAndSave = async () => {\r\n    appToState('display');\r\n    salesOrderVarBoxKey.value++; // Force VarBox re-render to apply readonly state change\r\n    // The actual save logic is now handled by handleExecute when currentStage is 0 and onChangeState is true\r\n    // This button just triggers the state change and re-render.\r\n  };\r\n\r\n  writableTrees.push(salesOrderDataTree);\r\n\r\n  // ItemConditionKit 已经处理了所有 item detail 相关的逻辑\r\n\r\n  const selectedItems = ref<VarNode[]>([]);\r\n  const currentItemIndex = ref(0);\r\n  // ItemConditionKit 自动处理编辑节点\r\n\r\n  // ItemConditionDetail 内部处理标签页切换\r\n\r\n  // ItemConditionDetail 内部处理按钮标签和可见性\r\n\r\n  // ItemConditionKit 自动处理所有 item detail 数据更新\r\n\r\n  // ItemConditionKit 自动处理定价元素的删除和验证\r\n\r\n  /**\r\n   * @description Pricing Element Rules\r\n   * @description Addition: Directly pass to backend for validation and return normalized data / if value is corrupted, set validation to false\r\n   * @description No need to write, just follow the validation logic of handleEnterFromNodeItemCondition\r\n   */\r\n\r\n  // ItemConditionKit 自动处理所有验证、切换、保存和取消逻辑\r\n\r\n  /**\r\n   * @description Sales order variable tree enter-from-node event handler\r\n   * @param node Node object\r\n   * @param value Value\r\n   * @param data Other data\r\n   */\r\n  async function handleEnterFromNodeSalesOrderTree(node: VarNode, value: string, data: any) {\r\n    // This function is for the main sales order form.\r\n    // If an item field is changed, we might want to trigger a re-calculation of total values.\r\n    // For now, we'll leave it simple, as item detail validation is handled separately.\r\n    if (data.nodePath.length > 2 && data.nodePath[0] === 'itemOverview' && data.nodePath[1] === 'items') {\r\n      // Trigger price query for all items in the main form if an item field is changed\r\n      await itemsTabQueryAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Encapsulate itemsTabQuery - query all\r\n   */\r\n  async function itemsTabQueryAll() {\r\n    const items = salesOrderDataTree.findNodeByPath(['itemOverview','items'])?.children || [];\r\n    return await itemsTabQuery(items);\r\n  }\r\n\r\n  /**\r\n   * @description Sales order batch query, send VarNode[] to backend, return Net Value: and Expect. Oral Val: including value and unit, and detailed information for each item\r\n   * @description This method will update the data in the input VarNode[]\r\n   * @param {Array<VarNode>} itemNodes\r\n   * Also set config.data.validation for each VarNode based on returned badRecordIndices\r\n   */\r\n  async function itemsTabQuery(itemNodes: VarNode[]) {\r\n    // Extract values from each VarNode\r\n    const itemValues = itemNodes.map(node => node.getValue());\r\n\r\n    const data = await fetch(`${API_BASE_URL}/api/app/inquiry/items-tab-query`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(itemValues)\r\n    }).then(response => {\r\n      console.log('Normal return', response);\r\n      return response.json();\r\n    }).catch(error => {\r\n      console.error('Batch query failed:', error);\r\n      return { success: false };\r\n    });\r\n\r\n    console.log('Returned data', data);\r\n\r\n    if (data.success) {\r\n      // Update overall data (if applicable, e.g., total net value for the sales order)\r\n      // For sales orders, the total net value is typically calculated from items.\r\n      // We might want to update salesOrderDataTree.basicInfo.netValue here if needed.\r\n\r\n      // Update detailed information for each item, use forceSetValue to ensure full update\r\n      if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n        data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n          if (index < itemNodes.length) {\r\n            console.log('Breakdown data for item', index, ':', breakdown);\r\n            if (breakdown.pricingElements) {\r\n              console.log('PricingElements structure:', breakdown.pricingElements);\r\n            }\r\n            // Use forceSetValue to ensure all fields including pricingElements are correctly updated\r\n            itemNodes[index].forceSetValue(breakdown);\r\n          }\r\n        });\r\n      }\r\n\r\n      // Set validation based on badRecordIndices\r\n      if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n        // First, reset validation for all nodes\r\n        itemNodes.forEach(node => {\r\n          if (!node.config.data) {\r\n            node.config.data = {};\r\n          }\r\n          node.config.data.validation = true;\r\n        });\r\n\r\n        // Set validation for invalid nodes\r\n        data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n          if (badIndex < itemNodes.length) {\r\n            if (!itemNodes[badIndex].config.data) {\r\n              itemNodes[badIndex].config.data = {};\r\n            }\r\n            itemNodes[badIndex].config.data.validation = false;\r\n          }\r\n        });\r\n      }\r\n\r\n      appContentRef.value.forceUpdate();\r\n      return data.data.result.allDataLegal === 1;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @description Handle the click event for the Items Table button\r\n   * @param selection Selected rows (not used directly, we get items from salesOrderDataTree)\r\n   */\r\n  async function handleItemsTableClick() {\r\n    const items = salesOrderDataTree.findNodeByPath(['itemOverview','items'])!;\r\n    const selectedChildren = [...items.getSelectedChildren()];\r\n\r\n    if (selectedChildren && selectedChildren.length > 0) {\r\n      // First, check if all selected items have a validation status\r\n      const itemsWithoutValidation = selectedChildren.filter(item =>\r\n        item.config.data?.validation === undefined\r\n      );\r\n\r\n      // If there are unvalidated items, validate them first\r\n      if (itemsWithoutValidation.length > 0) {\r\n        console.log('Found unvalidated items, validating...');\r\n        const result = await itemsTabQuery(itemsWithoutValidation as VarNode[]);\r\n        if (!result) {\r\n          console.log('Validation failed, cannot proceed');\r\n          return; // Validation failed, do not proceed\r\n        }\r\n      }\r\n\r\n      // Re-check if all selected items passed validation\r\n      const hasInvalidItems = selectedChildren.some(item =>\r\n        item.config.data?.validation === false\r\n      );\r\n\r\n      if (hasInvalidItems) {\r\n        console.log('There are invalid items, cannot proceed');\r\n        return; // There are invalid items, do not proceed\r\n      }\r\n\r\n      // All validations passed, proceed\r\n      selectedItems.value = selectedChildren;\r\n      currentItemIndex.value = 0;\r\n\r\n      // Switch to the detail page\r\n      appContentRef.value.goToStage(1); // Stage 1 is itemDetails\r\n\r\n      // 延迟清空items表格的选中状态，让ItemConditionDetail组件先初始化\r\n      setTimeout(() => {\r\n        items.children.forEach(child => {\r\n          child.setSelection(false);\r\n        });\r\n      }, 100);\r\n    } else {\r\n      console.log('No items selected');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ItemConditionDetail 事件处理函数\r\n   */\r\n  function handleItemConditionValidationSuccess(items: VarNode[]) {\r\n    console.log('Item condition validation success:', items)\r\n  }\r\n\r\n  function handleItemConditionValidationFailed(items: VarNode[]) {\r\n    console.log('Item condition validation failed:', items)\r\n  }\r\n\r\n  function handleItemConditionSave() {\r\n    console.log('Item condition save')\r\n    // 返回到主页面\r\n    appContentRef.value.goToStage(0)\r\n  }\r\n\r\n  function handleItemConditionCancel() {\r\n    console.log('Item condition cancel')\r\n    // 返回到主页面\r\n    appContentRef.value.goToStage(0)\r\n  }\r\n\r\n  // Custom Confirmation Modal Logic (replaces window.confirm)\r\n  const showConfirm = ref(false);\r\n  const confirmMessage = ref('');\r\n  let confirmResolve: ((value: boolean | PromiseLike<boolean>) => void) | null = null;\r\n\r\n  function showConfirmationModal(message: string): Promise<boolean> {\r\n    confirmMessage.value = message;\r\n    showConfirm.value = true;\r\n    return new Promise((resolve) => {\r\n      confirmResolve = resolve;\r\n    });\r\n  }\r\n\r\n  function handleConfirm(response: boolean) {\r\n    showConfirm.value = false;\r\n    if (confirmResolve) {\r\n      confirmResolve(response);\r\n      confirmResolve = null;\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  /* Inherited general layout and colors from _base.css and MaintainBusinessPartnerView.vue */\r\n  .manage-sales-orders-view {\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n    background-color: var(--theme-color-dark);\r\n    width: 100%;\r\n  }\r\n\r\n  .so-page-content {\r\n    flex-grow: 1;\r\n    background-color: var(--theme-color-page);\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    margin: 20px;\r\n  }\r\n\r\n  /* Sales order query area style, adjusted based on business-partner-search */\r\n  .sales-order-search {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: transparent;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    padding: 30px;\r\n  }\r\n\r\n  /* Reuse input-with-icon style from MaintainBusinessPartnerView */\r\n  .input-with-icon {\r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    border: 1px solid #dcdfe6;\r\n    overflow: hidden;\r\n    background-color: #ffffff;\r\n    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);\r\n    transition: border-color 0.3s, box-shadow 0.3s;\r\n  }\r\n\r\n  .input-with-icon:focus-within {\r\n    border-color: #409eff;\r\n    box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2);\r\n  }\r\n\r\n  /* Reuse bp-input style, applied to the actual input inside VarBox */\r\n  /* Relying on _base.css for font-family, font-size, line-height, color, border, background, outline */\r\n  .sales-order-query-varbox :deep(.var-input--main input) {\r\n    flex-grow: 1;\r\n    padding: 12px 15px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  /* Reuse bp-search-button style, applied to the search button inside VarBox */\r\n  .sales-order-query-varbox :deep(.bp-search-button) {\r\n    background-color: transparent;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .sales-order-query-varbox :deep(.bp-search-button:hover) {\r\n    background-color: #f5f7fa;\r\n  }\r\n\r\n  .sales-order-query-varbox :deep(.search-icon) {\r\n    width: 16px;\r\n    height: 16px;\r\n    object-fit: contain;\r\n  }\r\n\r\n  /* Go button container */\r\n  .go-button-container {\r\n    width: 80px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-self:flex-end;\r\n    background-color: var(--theme-color-dark);\r\n    margin-top: 10px;\r\n    transition: background-color 0.3s ease;\r\n    color: var(--theme-color-text);\r\n    font-weight: bold;\r\n    justify-content: center;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .go-button-container:hover {\r\n      background-color: var(--theme-color-execute-button-hover);\r\n  }\r\n\r\n  .go-button {\r\n    font-size: 1.0em;\r\n    text-align: center;\r\n  }\r\n\r\n  /* Output area style */\r\n  .sales-order-output {\r\n    min-height: 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: var(--theme-color-dark);\r\n    font-size: 1.6em;\r\n    font-weight: bold;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .sales-order-output .query-results-list {\r\n    width: 100%;\r\n    font-size: 1em;\r\n    color: var(--color-text-primary);\r\n  }\r\n\r\n  .sales-order-rows-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .sales-order-row-header,\r\n  .sales-order-row {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid var(--theme-color-lighter);\r\n  }\r\n\r\n  .sales-order-row-header {\r\n    background-color: var(--theme-color-table-header-bg);\r\n    font-weight: bold;\r\n    color: var(--theme-color-table-header-text);\r\n  }\r\n\r\n  .sales-order-row {\r\n    background-color: transparent;\r\n    transition: background-color 0.2s ease-in-out;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .sales-order-row:hover {\r\n    background-color: var(--theme-color-lighter);\r\n  }\r\n\r\n  .sales-order-row:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  .header-item, .row-item {\r\n    align-self: center;\r\n  }\r\n\r\n  .sales-order-id { flex-basis: 10%; text-align: center;}\r\n  .sold-to-party { flex-basis: 10%; text-align: center;}\r\n  .customer-reference { flex-basis: 15%; text-align: center;}\r\n  .req-delivery-date { flex-basis: 15%; text-align: center;}\r\n  .overall-status { flex-basis: 10%; text-align: center;}\r\n  .net-value { flex-basis: 15%; text-align: center;}\r\n  .doc-date { flex-basis: 15%; text-align: center;}\r\n  .arrow-icon { flex: 0 0 20px; text-align: right; }\r\n\r\n\r\n  /* Status specific styling */\r\n  .overall-status {\r\n    padding: 4px 8px;\r\n    font-weight: bold;\r\n    font-size: 1em;\r\n    color: #ffffff;\r\n    display: inline-block;\r\n    text-align: center;\r\n  }\r\n  :deep(.salesOrderQuery-so_id--wrapper) {\r\n      grid-row: 1;\r\n      max-width: 300px;\r\n  }\r\n  :deep(.salesOrderQuery-status--wrapper) {\r\n      grid-row: 1;\r\n      max-width: 300px;\r\n  }\r\n  :deep(.salesOrderQuery-customer_no--wrapper) {\r\n      grid-row: 1;\r\n      max-width: 300px;\r\n  }\r\n  :deep(.salesOrderQuery-customer_reference--wrapper) {\r\n      grid-row: 1;\r\n      max-width: 300px;\r\n  }\r\n\r\n  :deep(.SOData-basicInfo--dict-leaf-section) {\r\n    display: grid;\r\n    grid-template-columns: 50% 35% 15%;\r\n    grid-template-rows: auto auto auto auto;\r\n  }\r\n\r\n  :deep(.SOData-basicInfo-so_id--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n  }\r\n  :deep(.SOData-basicInfo-netValue--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 1;\r\n  }\r\n  :deep(.SOData-basicInfo-netValueUnit--wrapper) {\r\n    grid-column: 3;\r\n    grid-row: 1;\r\n  }\r\n  :deep(.SOData-basicInfo-soldToParty--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n  }\r\n  :deep(.SOData-basicInfo-shipToParty--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 3;\r\n  }\r\n  :deep(.SOData-basicInfo-customerReference--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 4;\r\n  }\r\n  :deep(.SOData-basicInfo-customerReferenceDate--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 4;\r\n  }\r\n\r\n  :deep(.SOData-itemOverview--dict-leaf-section) {\r\n    display: grid;\r\n    grid-template-columns: 50% 35% 15%;\r\n    grid-template-rows: auto auto;\r\n  }\r\n  :deep(.SOData-itemOverview-validTo--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 1;\r\n  }\r\n  :deep(.SOData-itemOverview-reqDelivDate--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n  }\r\n  :deep(.SOData-itemOverview-expectOralVal--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 2;\r\n  }\r\n  :deep(.SOData-itemOverview-expectOralValUnit--wrapper) {\r\n    grid-column: 3;\r\n    grid-row: 2;\r\n  }\r\n  .status-open {\r\n    background-color: #f0ad4e;\r\n  }\r\n\r\n  .status-completed {\r\n    background-color: var(--theme-color-dark);\r\n  }\r\n\r\n  .status-in-progress {\r\n    background-color: #5bc0de;\r\n  }\r\n\r\n  .status-new {\r\n    background-color: #409eff;\r\n  }\r\n\r\n  .arrow-icon {\r\n    font-size: 0.8em;\r\n    color: #666;\r\n  }\r\n\r\n  .sales-order-output .no-results,\r\n  .sales-order-output .initial-output-message {\r\n    font-size: 1em;\r\n    color: #666;\r\n    font-weight: normal;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  /* Bottom action buttons area, reusing MaintainBusinessPartnerView styles */\r\n  .bottom-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 40px 20px;\r\n    background-color: var(--theme-color-dark);\r\n  }\r\n\r\n  /* Bottom create button, reusing search-enter-button style */\r\n  .create-sales-order-button {\r\n    background-color: var(--btn-default-bg);\r\n    color: var(--btn-default-text);\r\n    font-weight: bold;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .create-sales-order-button:hover {\r\n    background-color: var(--btn-hover-bg);\r\n    color: var(--btn-hover-text);\r\n  }\r\n\r\n  .footer-cancel-button {\r\n  background-color: var(--btn-default-bg); /* Or other color */\r\n  color: var(--btn-default-text);\r\n  font-weight: bold;\r\n  padding: 2px 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  margin-left: 10px; /* Keep some spacing from other buttons */\r\n}\r\n\r\n.footer-cancel-button:hover {\r\n  background-color: var(--btn-hover-bg); /* Or other hover color */\r\n  color: var(--btn-hover-text);\r\n}\r\n\r\n/* Item navigation styles (copied from Main.vue) */\r\n.item-navigation {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.item-counter {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.item-nav-button {\r\n  padding: 8px 16px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f5f5f5;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.item-nav-button:hover:not(:disabled) {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.item-nav-button:disabled {\r\n  background-color: #f9f9f9;\r\n  color: #999;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.item-prev-button {\r\n  margin-right: auto;\r\n}\r\n\r\n.item-next-button {\r\n  margin-left: auto;\r\n}\r\n\r\n/* Save and Cancel button styles (copied from Main.vue) */\r\n.save-button {\r\n  padding: 4px 10px;\r\n  margin-right: -10px;\r\n  background-color: var(--theme-color-dark);\r\n  color: var(--theme-color-page);\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: var(--theme-color-execute-button-hover);\r\n}\r\n\r\n.cancel-button {\r\n  padding: 4px 10px;\r\n  margin-left: -10px;\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n/* Pricing conditions table styles (copied from Main.vue) */\r\n:deep(.itemDetailConditions--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 30% 10% 10% 30% 10%;\r\n  grid-template-rows: auto auto;\r\n  gap: 0\r\n}\r\n:deep(.itemDetailConditions-orderQuantity--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-orderQuantityUnit--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-netValue--wrapper) {\r\n  grid-column: 4;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-netValueUnit--wrapper) {\r\n  grid-column: 5;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-taxValue--wrapper) {\r\n  grid-column: 4;\r\n  grid-row: 2;\r\n}\r\n:deep(.itemDetailConditions-taxValueUnit--wrapper) {\r\n  grid-column: 5;\r\n  grid-row: 2;\r\n}\r\n\r\n:deep(.itemDetailHeader--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 40%;\r\n  grid-template-rows: auto auto;\r\n  gap: 0\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate--dict-leaf-section),\r\n:deep(.itemDetailSales-generalSalesData--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 30% 30% 100px;\r\n  grid-template-rows: auto auto;\r\n  gap: 0\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-orderQuantity--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-orderQuantityUnit--wrapper) {\r\n  grid-column: 3;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-reqDelivDate--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n\r\n:deep(.itemDetailSales-generalSalesData-netValue--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-generalSalesData-netValueUnit--wrapper) {\r\n  grid-column: 3;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-generalSalesData-pricingDate--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n:deep(.itemDetailSales-generalSalesData-orderProbability--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 3;\r\n}\r\n\r\n:deep(.SOData-itemOverview-items--extra-table-buttons) {\r\n  display: flex;\r\n  padding-left: 10px;\r\n  gap: 8px;\r\n}\r\n\r\n.table-extra-button {\r\n  width: inherit;\r\n  padding: 0 6px;\r\n  min-width: 20px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.table-extra-button:disabled {\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Modal styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: var(--theme-color-page);\r\n  padding: 30px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  width: 90%;\r\n  max-width: 400px;\r\n  text-align: center;\r\n}\r\n\r\n.modal-content h4 {\r\n  margin-top: 0;\r\n  color: var(--theme-color-dark);\r\n  font-size: 1.5em;\r\n}\r\n\r\n.quotation-input-varbox {\r\n  width: 100%;\r\n}\r\n\r\n.quotation-input-varbox :deep(.var-input--main input) {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 15px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.modal-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n</style>\r\n","import script from \"./ManageSalesOrders.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ManageSalesOrders.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ManageSalesOrders.vue?vue&type=style&index=0&id=41226678&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-41226678\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"app-content-footer-content-right\" }\n\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport FilterTabs from '@/components/FilterTabs.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  inquiryTypeSearch,\r\n  salesOrgSearch,\r\n  distributionChannelSearch,\r\n  divisionSearch,\r\n  inquiryIdSearch,\r\n} from '@/utils/searchMethods'\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\n\r\ntype State = 'create' | 'change' | 'display'\r\n\r\n// 创建 ItemConditionKit 实例\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Main',\n  setup(__props, { expose: __expose }) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\nconst itemConditionKit: ItemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/inquiry/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n/**\r\n * @description 应用模式-创建/修改/查看\r\n */\r\nconst state: Ref<State> = ref('create')\r\nconst onCreateState = computed(() => state.value === 'create')\r\nconst onChangeState = computed(() => state.value === 'change')\r\nconst onDisplayState = computed(() => state.value === 'display')\r\nfunction appToState(newState: State) {\r\n  state.value = newState\r\n  let readonly = newState === 'display'\r\n  writableTrees.forEach(tree => {\r\n    tree.root!.readonly = readonly\r\n  })\r\n  appContentRef.value.forceUpdate()\r\n}\r\n\r\nconst initializeStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Continue'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Execute'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Execute'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStagePrevButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Cancel'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Create'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Save'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Switch to Change'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst itemDetailStageCancelButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Back'\r\n  }\r\n  return 'Back'\r\n})\r\n\r\nconst itemDetailStageExecuteButtonVisible = computed(() => {\r\n  return onCreateState.value || onChangeState.value\r\n})\r\n\r\n__expose({\r\n  appToState,\r\n})\r\n\r\n/**\r\n * @description 初始阶段-创建-初始化询价单\r\n */\r\nconst initialCreationTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('dict','dict','inquiryType',{},false,{hideLabel:true},[\r\n      cns('string','leaf','inquiryType','',false,{searchMethods:inquiryTypeSearch},[],\"Inquiry Type:\"),\r\n    ]),\r\n    cns('dict','dict','salesOrg',{},false,{},[\r\n      cns('string','leaf','salesOrganization','',false,{searchMethods:salesOrgSearch},[],\"Sales Organization:\"),\r\n      cns('string','leaf','distributionChannel','',false,{searchMethods:distributionChannelSearch},[],\"Distribution Channel:\"),\r\n      cns('string','leaf','division','',false,{searchMethods:divisionSearch},[],\"Division:\"),\r\n    ],\"Organizational Data\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 初始阶段-查询/修改-搜索询价单\r\n */\r\nconst initialSearchTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','inquiryId','',false,{searchMethods:inquiryIdSearch},[],\"Inquiry Id:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 主信息-询价单信息主树\r\n */\r\nconst inquiryDataTree = createTreeFromConfig(\r\n  cns('dict','dict','inquiryData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n    ]),\r\n    cns('dict','dict','basicInfo',{},false,{hideLabel:true},[\r\n      cns('string','leaf','inquiry','',false,{},[],\"Inquiry:\"),\r\n      cns('string','leaf','soldToParty','',false,{},[],\"Sold-To Party:\"),\r\n      cns('string','leaf','shipToParty','',false,{},[],\"Ship-To Party:\"),\r\n      cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n      cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n      cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n      cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n    ]),\r\n    cns('dict','dict','itemOverview',{},false,{},[\r\n      cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n      cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n      cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n      cns('string','leaf','expectOralVal','0.0',true,{},[],\"Expect. Oral Val:\"),\r\n      cns('string','leaf','expectOralValUnit','',true,{hideLabel:true},[],\"Expect. Oral Val Unit:\"),\r\n      // items 节点将通过 itemConditionKit.summonItemsNode 添加\r\n    ],'Item Overview')\r\n  ])\r\n)\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  inquiryDataTree,\r\n  ['itemOverview', 'items']\r\n  // 不传递自定义模板，使用默认模板\r\n)\r\n\r\n/**\r\n * @description 询价单物品的可写树，即stage1 stage2，用于显示状态和编辑状态的切换\r\n * @description 现在只包含主数据树，item detail由ItemConditionKit管理\r\n */\r\nconst writableTrees = [inquiryDataTree]\r\n\r\nconst initializeResult = ref(false)\r\n/**\r\n * @description 创建-初始化\r\n */\r\nasync function initializeByCreation() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/inquiry/initialize`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialCreationTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  initializeResult.value = data.success\r\n  if(!data.success) return false\r\n  // inquiryData-itemOverview-reqDelivDate\r\n  if(data.data.content) {\r\n    inquiryDataTree.forceSetValue(data.data.content)\r\n  }\r\n  if (initializeResult.value) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 查询/修改-初始化\r\n */\r\nasync function initializeByGet() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/inquiry/get`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialSearchTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n  if(!data.data.content) {\r\n    return false\r\n  }\r\n  const inquiryData: VarNodeValue = data.data.content\r\n  inquiryDataTree.forceSetValue(inquiryData)\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 封装itemsTabQuery-查询所有\r\n */\r\nasync function itemsTabQueryAll() {\r\n  const items = inquiryDataTree.findNodeByPath(['itemOverview','items'])?.children || []\r\n  return await itemsTabQuery(items)\r\n}\r\n/**\r\n * @description 询价单批量查询，向后端发送VarNode[]，返回Net Value: 和 Expect. Oral Val: 包括值和单位，还有每个item的详细信息\r\n * @description 该方法会更新入参VarNode[]中的数据\r\n * @param {Array<VarNode>} itemNodes \r\n * 同时根据返回的badRecordIndices设置每个VarNode的config.data.validation\r\n */\r\nasync function itemsTabQuery(itemNodes: VarNode[]) {\r\n  // 提取每个VarNode的值\r\n  const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/inquiry/items-tab-query`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(itemValues)\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('批量查询失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success) {\r\n    // 更新总体数据\r\n    inquiryDataTree.findNodeByPath(['basicInfo','netValue'])?.setValue(data.data.generalData?.netValue)\r\n    inquiryDataTree.findNodeByPath(['basicInfo','netValueUnit'])?.setValue(data.data.generalData?.netValueUnit)\r\n    inquiryDataTree.findNodeByPath(['itemOverview','expectOralVal'])?.setValue(data.data.generalData?.expectOralVal)\r\n    inquiryDataTree.findNodeByPath(['itemOverview','expectOralValUnit'])?.setValue(data.data.generalData?.expectOralValUnit)\r\n\r\n    // 更新每个item的详细信息，使用forceSetValue确保完整更新\r\n    if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n      data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n        if (index < itemNodes.length) {\r\n          // 调试：打印breakdown数据结构\r\n          console.log('Breakdown data for item', index, ':', breakdown)\r\n          if (breakdown.pricingElements) {\r\n            console.log('PricingElements structure:', breakdown.pricingElements)\r\n          }\r\n          // 使用forceSetValue确保包括pricingElements在内的所有字段都被正确更新\r\n          itemNodes[index].forceSetValue(breakdown)\r\n        }\r\n      })\r\n    }\r\n\r\n    // 根据badRecordIndices设置validation\r\n    if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n      // 先重置所有节点的validation\r\n      itemNodes.forEach(node => {\r\n        if (!node.config.data) {\r\n          node.config.data = {}\r\n        }\r\n        node.config.data.validation = true\r\n      })\r\n\r\n      // 设置不合法节点的validation\r\n      data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n        if (badIndex < itemNodes.length) {\r\n          if (!itemNodes[badIndex].config.data) {\r\n            itemNodes[badIndex].config.data = {}\r\n          }\r\n          itemNodes[badIndex].config.data.validation = false\r\n        }\r\n      })\r\n    }\r\n\r\n    writableTrees.map(tree => tree.forceUpdate())\r\n    return data.data.result.allDataLegal === 1\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n// ItemConditionKit 相关的事件处理函数\r\nfunction handleSave() {\r\n  console.log('保存数据')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1)\r\n}\r\n\r\nfunction handleItemConditionCancel() {\r\n  console.log('取消编辑')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1)\r\n}\r\n\r\nfunction handleValidationFailed() {\r\n  console.log('验证失败')\r\n}\r\n\r\nfunction handleValidationSuccess() {\r\n  console.log('验证成功')\r\n}\r\n/**\r\n * @descrition 处理Items Table的按钮点击事件\r\n * @param selection 选中的行\r\n */\r\nasync function handleItemsTableClick() {\r\n  // 获取items节点\r\n  const items = inquiryDataTree.findNodeByPath(['itemOverview','items'])!\r\n  const selectedChildren = [...items.getSelectedChildren()]\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 先检查所有选中的item是否有validation状态\r\n    const itemsWithoutValidation = selectedChildren.filter(item =>\r\n      item.config.data?.validation === undefined\r\n    )\r\n\r\n    // 如果有未验证的item，先进行验证\r\n    if (itemsWithoutValidation.length > 0) {\r\n      console.log('发现未验证的item，进行验证...')\r\n      const result = await itemsTabQuery(itemsWithoutValidation as VarNode[])\r\n      if (!result) {\r\n        console.log('验证失败，无法继续')\r\n        return // 验证失败，不继续执行\r\n      }\r\n    }\r\n\r\n    // 再次检查所有选中的item是否都验证通过\r\n    const hasInvalidItems = selectedChildren.some(item =>\r\n      item.config.data?.validation === false\r\n    )\r\n\r\n    if (hasInvalidItems) {\r\n      console.log('存在验证未通过的item，无法继续')\r\n      return // 有验证未通过的item，不继续执行\r\n    }\r\n\r\n    // 所有验证都通过，切换到详情页面\r\n    appContentRef.value.goToStage(2)\r\n\r\n    // 延迟清空items表格的选中状态，让ItemConditionDetail组件先初始化\r\n    setTimeout(() => {\r\n      items.children.forEach(child => {\r\n        child.setSelection(false)\r\n      })\r\n    }, 100)\r\n  } else {\r\n    console.log('No items selected')\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @description 询价单变量树的enter-from-node事件处理\r\n * @param node 节点对象\r\n * @param value 值\r\n * @param data 其他数据\r\n */\r\nasync function handleEnterFromNodeInquiryTree(node: VarNode, value: string, data: any) {\r\n  if (data.nodePath.length > 2 && data.nodePath[0] === 'itemOverview' && data.nodePath[1] === 'items') {\r\n    // 执行价格查询\r\n    await itemsTabQueryAll()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n * @param currentStage \r\n * @param targetStage \r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {    \r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n * @param currentStage \r\n * @param targetStage \r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  if (currentStage === 0) {\r\n    if (onCreateState.value) {\r\n      return await initializeByCreation()\r\n    }\r\n    if (onChangeState.value || onDisplayState.value) {\r\n      const r = await initializeByGet()\r\n      console.log('初始化结果',r)\r\n      return r\r\n    }\r\n    return false\r\n  }\r\n\r\n  if (currentStage === 1) {\r\n    if (onDisplayState.value) {\r\n      console.log('切换到修改状态')\r\n      appToState('change')\r\n      return false\r\n    }\r\n    if (onCreateState.value || onChangeState.value) {\r\n      console.log(inquiryDataTree.getValue())\r\n      // 向后端发送stage 1的所有树，创建inquiry\r\n      const data = await fetch(`${API_BASE_URL}/api/app/inquiry/edit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(inquiryDataTree.getValue())\r\n      }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n      }).catch(error => {\r\n        console.error('创建询价单失败:', error)\r\n        return { success: false }\r\n      })\r\n      console.log('返回的数据',data)\r\n      // footer\r\n      if (data.success){\r\n        appContentRef.value.footerMessage = data.data.message\r\n        if (data.data.content?.id) {\r\n          inquiryDataTree.findNodeByPath(['meta','id'])!.setValue(data.data.content?.id)\r\n        }\r\n        appToState('display')\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n  return false\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(AppContent, {\n    stages: ['initialScreen','information','itemCondition'],\n    \"before-next\": handleExecute,\n    \"before-prev\": handleCancel,\n    \"footer-config\": [\r\n      { nextText:initializeStageNextButtonLabel.value }, // 使用插槽自定义第一步的按钮\r\n      { prevText:informationStagePrevButtonLabel.value, nextText:informationStageNextButtonLabel.value },\r\n      { prevText:'/hide', nextText:'/hide'}\r\n    ],\n    ref_key: \"appContentRef\",\n    ref: appContentRef\n  }, {\n    [`stage-initialScreen`]: _withCtx(() => [\n      (onCreateState.value)\n        ? (_openBlock(), _createBlock(VarBox, {\n            key: 0,\n            tree: _unref(initialCreationTree)\n          }, null, 8, [\"tree\"]))\n        : _createCommentVNode(\"\", true),\n      (onDisplayState.value || onChangeState.value)\n        ? (_openBlock(), _createBlock(VarBox, {\n            key: 1,\n            tree: _unref(initialSearchTree)\n          }, null, 8, [\"tree\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    [`stage-information`]: _withCtx(() => [\n      _createVNode(VarBox, {\n        tree: _unref(inquiryDataTree),\n        onEnterFromNode: handleEnterFromNodeInquiryTree\n      }, {\n        [`inquiryData-itemOverview-items--extra-buttons`]: _withCtx(() => [\n          _createElementVNode(\"button\", {\n            class: \"execute-button table-extra-button\",\n            onClick: handleItemsTableClick\n          }, \" ... \")\n        ]),\n        _: 2\n      }, 1032, [\"tree\"])\n    ]),\n    [`stage-itemCondition`]: _withCtx(() => [\n      _cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Item 详细信息 (使用 ItemConditionKit)\", -1)),\n      _createVNode(ItemConditionDetail, {\n        kit: _unref(itemConditionKit),\n        onSave: handleSave,\n        onCancel: handleItemConditionCancel,\n        onValidationFailed: handleValidationFailed,\n        onValidationSuccess: handleValidationSuccess\n      }, {\n        [`itemDetailConditions-pricingElements--extra-buttons`]: _withCtx(() => _cache[0] || (_cache[0] = [\n          _createElementVNode(\"button\", {\n            class: \"execute-button table-extra-button item-condition-button\",\n            onClick: () => {}\n          }, \" New \", -1),\n          _createElementVNode(\"button\", {\n            class: \"execute-button table-extra-button item-condition-button\",\n            onClick: () => {}\n          }, \" Delete \", -1)\n        ])),\n        _: 2\n      }, 1032, [\"kit\"])\n    ]),\n    [`footer-content-right`]: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, _toDisplayString(appContentRef.value?.getCurrentStageName()), 1)\n    ]),\n    _: 2\n  }, 1032, [\"footer-config\"]))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport FilterTabs from '@/components/FilterTabs.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  inquiryTypeSearch,\r\n  salesOrgSearch,\r\n  distributionChannelSearch,\r\n  divisionSearch,\r\n  inquiryIdSearch,\r\n} from '@/utils/searchMethods'\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\ntype State = 'create' | 'change' | 'display'\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit: ItemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/inquiry/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n/**\r\n * @description 应用模式-创建/修改/查看\r\n */\r\nconst state: Ref<State> = ref('create')\r\nconst onCreateState = computed(() => state.value === 'create')\r\nconst onChangeState = computed(() => state.value === 'change')\r\nconst onDisplayState = computed(() => state.value === 'display')\r\nfunction appToState(newState: State) {\r\n  state.value = newState\r\n  let readonly = newState === 'display'\r\n  writableTrees.forEach(tree => {\r\n    tree.root!.readonly = readonly\r\n  })\r\n  appContentRef.value.forceUpdate()\r\n}\r\n\r\nconst initializeStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Continue'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Execute'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Execute'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStagePrevButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Cancel'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Create'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Save'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Switch to Change'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst itemDetailStageCancelButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Back'\r\n  }\r\n  return 'Back'\r\n})\r\n\r\nconst itemDetailStageExecuteButtonVisible = computed(() => {\r\n  return onCreateState.value || onChangeState.value\r\n})\r\n\r\ndefineExpose({\r\n  appToState,\r\n})\r\n\r\n/**\r\n * @description 初始阶段-创建-初始化询价单\r\n */\r\nconst initialCreationTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('dict','dict','inquiryType',{},false,{hideLabel:true},[\r\n      cns('string','leaf','inquiryType','',false,{searchMethods:inquiryTypeSearch},[],\"Inquiry Type:\"),\r\n    ]),\r\n    cns('dict','dict','salesOrg',{},false,{},[\r\n      cns('string','leaf','salesOrganization','',false,{searchMethods:salesOrgSearch},[],\"Sales Organization:\"),\r\n      cns('string','leaf','distributionChannel','',false,{searchMethods:distributionChannelSearch},[],\"Distribution Channel:\"),\r\n      cns('string','leaf','division','',false,{searchMethods:divisionSearch},[],\"Division:\"),\r\n    ],\"Organizational Data\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 初始阶段-查询/修改-搜索询价单\r\n */\r\nconst initialSearchTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','inquiryId','',false,{searchMethods:inquiryIdSearch},[],\"Inquiry Id:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 主信息-询价单信息主树\r\n */\r\nconst inquiryDataTree = createTreeFromConfig(\r\n  cns('dict','dict','inquiryData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n    ]),\r\n    cns('dict','dict','basicInfo',{},false,{hideLabel:true},[\r\n      cns('string','leaf','inquiry','',false,{},[],\"Inquiry:\"),\r\n      cns('string','leaf','soldToParty','',false,{},[],\"Sold-To Party:\"),\r\n      cns('string','leaf','shipToParty','',false,{},[],\"Ship-To Party:\"),\r\n      cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n      cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n      cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n      cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n    ]),\r\n    cns('dict','dict','itemOverview',{},false,{},[\r\n      cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n      cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n      cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n      cns('string','leaf','expectOralVal','0.0',true,{},[],\"Expect. Oral Val:\"),\r\n      cns('string','leaf','expectOralValUnit','',true,{hideLabel:true},[],\"Expect. Oral Val Unit:\"),\r\n      // items 节点将通过 itemConditionKit.summonItemsNode 添加\r\n    ],'Item Overview')\r\n  ])\r\n)\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  inquiryDataTree,\r\n  ['itemOverview', 'items']\r\n  // 不传递自定义模板，使用默认模板\r\n)\r\n\r\n/**\r\n * @description 询价单物品的可写树，即stage1 stage2，用于显示状态和编辑状态的切换\r\n * @description 现在只包含主数据树，item detail由ItemConditionKit管理\r\n */\r\nconst writableTrees = [inquiryDataTree]\r\n\r\nconst initializeResult = ref(false)\r\n/**\r\n * @description 创建-初始化\r\n */\r\nasync function initializeByCreation() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/inquiry/initialize`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialCreationTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  initializeResult.value = data.success\r\n  if(!data.success) return false\r\n  // inquiryData-itemOverview-reqDelivDate\r\n  if(data.data.content) {\r\n    inquiryDataTree.forceSetValue(data.data.content)\r\n  }\r\n  if (initializeResult.value) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 查询/修改-初始化\r\n */\r\nasync function initializeByGet() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/inquiry/get`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialSearchTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n  if(!data.data.content) {\r\n    return false\r\n  }\r\n  const inquiryData: VarNodeValue = data.data.content\r\n  inquiryDataTree.forceSetValue(inquiryData)\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 封装itemsTabQuery-查询所有\r\n */\r\nasync function itemsTabQueryAll() {\r\n  const items = inquiryDataTree.findNodeByPath(['itemOverview','items'])?.children || []\r\n  return await itemsTabQuery(items)\r\n}\r\n/**\r\n * @description 询价单批量查询，向后端发送VarNode[]，返回Net Value: 和 Expect. Oral Val: 包括值和单位，还有每个item的详细信息\r\n * @description 该方法会更新入参VarNode[]中的数据\r\n * @param {Array<VarNode>} itemNodes \r\n * 同时根据返回的badRecordIndices设置每个VarNode的config.data.validation\r\n */\r\nasync function itemsTabQuery(itemNodes: VarNode[]) {\r\n  // 提取每个VarNode的值\r\n  const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/inquiry/items-tab-query`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(itemValues)\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('批量查询失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success) {\r\n    // 更新总体数据\r\n    inquiryDataTree.findNodeByPath(['basicInfo','netValue'])?.setValue(data.data.generalData?.netValue)\r\n    inquiryDataTree.findNodeByPath(['basicInfo','netValueUnit'])?.setValue(data.data.generalData?.netValueUnit)\r\n    inquiryDataTree.findNodeByPath(['itemOverview','expectOralVal'])?.setValue(data.data.generalData?.expectOralVal)\r\n    inquiryDataTree.findNodeByPath(['itemOverview','expectOralValUnit'])?.setValue(data.data.generalData?.expectOralValUnit)\r\n\r\n    // 更新每个item的详细信息，使用forceSetValue确保完整更新\r\n    if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n      data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n        if (index < itemNodes.length) {\r\n          // 调试：打印breakdown数据结构\r\n          console.log('Breakdown data for item', index, ':', breakdown)\r\n          if (breakdown.pricingElements) {\r\n            console.log('PricingElements structure:', breakdown.pricingElements)\r\n          }\r\n          // 使用forceSetValue确保包括pricingElements在内的所有字段都被正确更新\r\n          itemNodes[index].forceSetValue(breakdown)\r\n        }\r\n      })\r\n    }\r\n\r\n    // 根据badRecordIndices设置validation\r\n    if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n      // 先重置所有节点的validation\r\n      itemNodes.forEach(node => {\r\n        if (!node.config.data) {\r\n          node.config.data = {}\r\n        }\r\n        node.config.data.validation = true\r\n      })\r\n\r\n      // 设置不合法节点的validation\r\n      data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n        if (badIndex < itemNodes.length) {\r\n          if (!itemNodes[badIndex].config.data) {\r\n            itemNodes[badIndex].config.data = {}\r\n          }\r\n          itemNodes[badIndex].config.data.validation = false\r\n        }\r\n      })\r\n    }\r\n\r\n    writableTrees.map(tree => tree.forceUpdate())\r\n    return data.data.result.allDataLegal === 1\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n// ItemConditionKit 相关的事件处理函数\r\nfunction handleSave() {\r\n  console.log('保存数据')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1)\r\n}\r\n\r\nfunction handleItemConditionCancel() {\r\n  console.log('取消编辑')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1)\r\n}\r\n\r\nfunction handleValidationFailed() {\r\n  console.log('验证失败')\r\n}\r\n\r\nfunction handleValidationSuccess() {\r\n  console.log('验证成功')\r\n}\r\n/**\r\n * @descrition 处理Items Table的按钮点击事件\r\n * @param selection 选中的行\r\n */\r\nasync function handleItemsTableClick() {\r\n  // 获取items节点\r\n  const items = inquiryDataTree.findNodeByPath(['itemOverview','items'])!\r\n  const selectedChildren = [...items.getSelectedChildren()]\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 先检查所有选中的item是否有validation状态\r\n    const itemsWithoutValidation = selectedChildren.filter(item =>\r\n      item.config.data?.validation === undefined\r\n    )\r\n\r\n    // 如果有未验证的item，先进行验证\r\n    if (itemsWithoutValidation.length > 0) {\r\n      console.log('发现未验证的item，进行验证...')\r\n      const result = await itemsTabQuery(itemsWithoutValidation as VarNode[])\r\n      if (!result) {\r\n        console.log('验证失败，无法继续')\r\n        return // 验证失败，不继续执行\r\n      }\r\n    }\r\n\r\n    // 再次检查所有选中的item是否都验证通过\r\n    const hasInvalidItems = selectedChildren.some(item =>\r\n      item.config.data?.validation === false\r\n    )\r\n\r\n    if (hasInvalidItems) {\r\n      console.log('存在验证未通过的item，无法继续')\r\n      return // 有验证未通过的item，不继续执行\r\n    }\r\n\r\n    // 所有验证都通过，切换到详情页面\r\n    appContentRef.value.goToStage(2)\r\n\r\n    // 延迟清空items表格的选中状态，让ItemConditionDetail组件先初始化\r\n    setTimeout(() => {\r\n      items.children.forEach(child => {\r\n        child.setSelection(false)\r\n      })\r\n    }, 100)\r\n  } else {\r\n    console.log('No items selected')\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @description 询价单变量树的enter-from-node事件处理\r\n * @param node 节点对象\r\n * @param value 值\r\n * @param data 其他数据\r\n */\r\nasync function handleEnterFromNodeInquiryTree(node: VarNode, value: string, data: any) {\r\n  if (data.nodePath.length > 2 && data.nodePath[0] === 'itemOverview' && data.nodePath[1] === 'items') {\r\n    // 执行价格查询\r\n    await itemsTabQueryAll()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n * @param currentStage \r\n * @param targetStage \r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {    \r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n * @param currentStage \r\n * @param targetStage \r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  if (currentStage === 0) {\r\n    if (onCreateState.value) {\r\n      return await initializeByCreation()\r\n    }\r\n    if (onChangeState.value || onDisplayState.value) {\r\n      const r = await initializeByGet()\r\n      console.log('初始化结果',r)\r\n      return r\r\n    }\r\n    return false\r\n  }\r\n\r\n  if (currentStage === 1) {\r\n    if (onDisplayState.value) {\r\n      console.log('切换到修改状态')\r\n      appToState('change')\r\n      return false\r\n    }\r\n    if (onCreateState.value || onChangeState.value) {\r\n      console.log(inquiryDataTree.getValue())\r\n      // 向后端发送stage 1的所有树，创建inquiry\r\n      const data = await fetch(`${API_BASE_URL}/api/app/inquiry/edit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(inquiryDataTree.getValue())\r\n      }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n      }).catch(error => {\r\n        console.error('创建询价单失败:', error)\r\n        return { success: false }\r\n      })\r\n      console.log('返回的数据',data)\r\n      // footer\r\n      if (data.success){\r\n        appContentRef.value.footerMessage = data.data.message\r\n        if (data.data.content?.id) {\r\n          inquiryDataTree.findNodeByPath(['meta','id'])!.setValue(data.data.content?.id)\r\n        }\r\n        appToState('display')\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n  return false\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <AppContent\r\n    :stages=\"['initialScreen','information','itemCondition']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel\"\r\n    :footer-config=\"[\r\n      { nextText:initializeStageNextButtonLabel }, // 使用插槽自定义第一步的按钮\r\n      { prevText:informationStagePrevButtonLabel, nextText:informationStageNextButtonLabel },\r\n      { prevText:'/hide', nextText:'/hide'}\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <template #[`stage-initialScreen`]>\r\n      <VarBox\r\n        :tree=\"initialCreationTree\"\r\n        v-if=\"onCreateState\"\r\n      ></VarBox>\r\n      <VarBox\r\n        :tree=\"initialSearchTree\"\r\n        v-if=\"onDisplayState || onChangeState\"\r\n      ></VarBox>\r\n    </template>\r\n    <template #[`stage-information`]>\r\n      <VarBox\r\n        :tree=\"inquiryDataTree\"\r\n        @enter-from-node=\"handleEnterFromNodeInquiryTree\"\r\n      >\r\n        <template #[`inquiryData-itemOverview-items--extra-buttons`]>\r\n          <button\r\n            class = \"execute-button table-extra-button\"\r\n            @click=\"handleItemsTableClick\"\r\n          >\r\n            ...\r\n          </button>\r\n        </template>\r\n      </VarBox>\r\n    </template>\r\n    <template #[`stage-itemCondition`]>\r\n      <h2>Item 详细信息 (使用 ItemConditionKit)</h2>\r\n      <ItemConditionDetail\r\n        :kit=\"itemConditionKit\"\r\n        @save=\"handleSave\"\r\n        @cancel=\"handleItemConditionCancel\"\r\n        @validation-failed=\"handleValidationFailed\"\r\n        @validation-success=\"handleValidationSuccess\"\r\n      >\r\n        <!-- 传递 pricing elements 的额外按钮 -->\r\n        <template #[`itemDetailConditions-pricingElements--extra-buttons`]>\r\n          <button\r\n            class=\"execute-button table-extra-button item-condition-button\"\r\n            @click=\"() => {}\"\r\n          >\r\n            New\r\n          </button>\r\n          <button\r\n            class=\"execute-button table-extra-button item-condition-button\"\r\n            @click=\"() => {}\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </template>\r\n      </ItemConditionDetail>\r\n    </template>\r\n\r\n    <template #[`footer-content-right`]>\r\n      <div class=\"app-content-footer-content-right\">\r\n        {{ appContentRef?.getCurrentStageName() }}\r\n        <!-- ItemConditionDetail 组件会使用 teleport 将按钮显示在这里 -->\r\n      </div>\r\n    </template>\r\n\r\n  </AppContent>\r\n</template>\r\n\r\n<style scoped>\r\n:deep(.inquiryData-basicInfo--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 50% 35% 15%;\r\n  grid-template-rows: auto auto auto auto;\r\n}\r\n\r\n:deep(.inquiryData-basicInfo-inquiry--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 1;\r\n}\r\n:deep(.inquiryData-basicInfo-netValue--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.inquiryData-basicInfo-netValueUnit--wrapper) {\r\n  grid-column: 3;\r\n  grid-row: 1;\r\n}\r\n:deep(.inquiryData-basicInfo-soldToParty--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 2;\r\n}\r\n:deep(.inquiryData-basicInfo-shipToParty--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 3;\r\n}\r\n:deep(.inquiryData-basicInfo-customerReference--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 4;\r\n}\r\n:deep(.inquiryData-basicInfo-customerReferenceDate--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 4;\r\n}\r\n\r\n:deep(.inquiryData-itemOverview--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 50% 35% 15%;\r\n  grid-template-rows: auto auto;\r\n}\r\n:deep(.inquiryData-itemOverview-validTo--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.inquiryData-itemOverview-reqDelivDate--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 2;\r\n}\r\n:deep(.inquiryData-itemOverview-expectOralVal--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n:deep(.inquiryData-itemOverview-expectOralValUnit--wrapper) {\r\n  grid-column: 3;\r\n  grid-row: 2;\r\n}\r\n\r\n:deep(.itemDetailHeader--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 40%;\r\n  grid-template-rows: auto auto;\r\n  gap: 0\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate--dict-leaf-section),\r\n:deep(.itemDetailSales-generalSalesData--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 30% 30% 100px;\r\n  grid-template-rows: auto auto;\r\n  gap: 0\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-orderQuantity--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-orderQuantityUnit--wrapper) {\r\n  grid-column: 3;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate-reqDelivDate--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n\r\n:deep(.itemDetailSales-generalSalesData-netValue--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-generalSalesData-netValueUnit--wrapper) {\r\n  grid-column: 3;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailSales-generalSalesData-pricingDate--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n:deep(.itemDetailSales-generalSalesData-orderProbability--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 3;\r\n}\r\n\r\n\r\n:deep(.inquiryData-itemOverview-items--extra-table-buttons) {\r\n  display: flex;\r\n  padding-left: 10px;\r\n  gap: 8px;\r\n}\r\n\r\n.table-extra-button {\r\n  width: inherit;\r\n  padding: 0 6px;\r\n  min-width: 20px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.table-extra-button:disabled {\r\n  cursor: not-allowed;\r\n}\r\n\r\n.item-condition-button {\r\n  margin-right: 4px;\r\n}\r\n\r\n/* 定价条件表格样式 */\r\n:deep(.itemDetailConditions--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 30% 10% 10% 30% 10%;\r\n  grid-template-rows: auto auto;\r\n  gap: 0\r\n}\r\n:deep(.itemDetailConditions-orderQuantity--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-orderQuantityUnit--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-netValue--wrapper) {\r\n  grid-column: 4;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-netValueUnit--wrapper) {\r\n  grid-column: 5;\r\n  grid-row: 1;\r\n}\r\n:deep(.itemDetailConditions-taxValue--wrapper) {\r\n  grid-column: 4;\r\n  grid-row: 2;\r\n}\r\n:deep(.itemDetailConditions-taxValueUnit--wrapper) {\r\n  grid-column: 5;\r\n  grid-row: 2;\r\n}\r\n\r\n/* Item导航样式 */\r\n.item-navigation {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.item-counter {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.item-nav-button {\r\n  padding: 8px 16px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f5f5f5;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.item-nav-button:hover:not(:disabled) {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.item-nav-button:disabled {\r\n  background-color: #f9f9f9;\r\n  color: #999;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.item-prev-button {\r\n  margin-right: auto;\r\n}\r\n\r\n.item-next-button {\r\n  margin-left: auto;\r\n}\r\n\r\n/* Save和Cancel按钮样式 */\r\n.save-button {\r\n  padding: 8px 20px;\r\n  margin-right: 10px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.cancel-button {\r\n  padding: 8px 20px;\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n</style>","import script from \"./Main.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Main.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Main.vue?vue&type=style&index=0&id=95d5f132&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-95d5f132\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Create',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('create')\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('create')\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main\r\n    ref=\"mainRef\"\r\n  />\r\n</template>\r\n","import script from \"./Create.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Change',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('change')\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('change')\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main\r\n    ref=\"mainRef\"\r\n  />\r\n</template>\r\n","import script from \"./Change.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Change.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Display',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('display')\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Main from './Main.vue';\r\nconst mainRef = ref(null) as any;\r\nonMounted(() => {\r\n  mainRef.value.appToState('display')\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main\r\n    ref=\"mainRef\"\r\n  />\r\n</template>\r\n","import script from \"./Display.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Display.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  customerSearch\r\n} from '@/utils/searchMethods'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'CreateMain',\n  setup(__props, { expose: __expose }) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\n__expose({})\r\n\r\n/**\r\n * @description 初始阶段-输入创建参数\r\n */\r\nconst initialInputTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','shipToParty','',false,{searchMethods:customerSearch},[],\"Ship-To Party:\"),\r\n    cns('date','leaf','plannedCreationDate','',false,{},[],\"Planned Creation Date:\"),\r\n    cns('selection','leaf','relevantForTM','',false,{options:['Yes','No']},[],\"Relevant For TM:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 销售订单列表树\r\n */\r\nconst salesOrdersTree = createTreeFromConfig(\r\n  cns('dict','dict','salesOrders',{},true,{},[\r\n    cns('dynamiclist','list','orders',null,false,{\r\n      hideLabel:true,\r\n      rowProvided: 1,\r\n      childTemplate:cns('dict','dict','order',null,false,{},[\r\n        cns('string','leaf','id','',true,{hideSelf:true},[],\"Sales Order\"),\r\n        cns('date','leaf','plannedCreationDate','',true,{},[],\"Planned Creation Date\"),\r\n        cns('date','leaf','plannedGIDate','',true,{},[],\"Planned GI Date\"),\r\n        cns('string','leaf','shippingPoint','',true,{},[],\"Shipping Point\"),\r\n        cns('string','leaf','shipToParty','',true,{},[],\"Ship-To Party\"),\r\n        cns('string','leaf','grossWeight','',true,{},[],\"Gross Weight\"),\r\n      ]),\r\n    },[])\r\n  ],\"Sales Orders\")\r\n)\r\n\r\n/**\r\n * @description 获取销售订单列表\r\n */\r\nasync function loadSalesOrders() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/get-sales-orders`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialInputTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('获取销售订单失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n\r\n  if(data.success && data.data.orders) {\r\n    salesOrdersTree.forceSetValue({orders: data.data.orders})\r\n    salesOrdersTree.forceUpdate()\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 处理Go按钮点击事件\r\n */\r\nasync function handleGoClick() {\r\n  appContentRef.value.footerMessage = ''\r\n  appContentRef.value.forceUpdate()\r\n  const success = await loadSalesOrders()\r\n}\r\n\r\n/**\r\n * @description 处理Execute按钮点击事件 - 创建出库交货单\r\n */\r\nasync function handleExecuteClick() {\r\n  const orders = salesOrdersTree.findNodeByPath(['orders'])\r\n  if (!orders) return false\r\n  const selectedOrders = [...orders.getSelectedChildren()]\r\n\r\n  if (selectedOrders && selectedOrders.length > 0) {\r\n    console.log('Selected orders for delivery creation:', selectedOrders.length)\r\n\r\n    // 提取选中订单的值\r\n    const orderValues = selectedOrders.map(order => order.getValue())\r\n\r\n    const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/create-from-orders`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        selectedOrders: orderValues\r\n      })\r\n    }).then(response => {\r\n      console.log('正常返回', response)\r\n      return response.json()\r\n    }).catch(error => {\r\n      console.error('创建出库交货单失败:', error)\r\n      return { success: false }\r\n    })\r\n\r\n    console.log('返回的数据',data)\r\n\r\n    if (data.success) {\r\n      appContentRef.value.footerMessage = data.data.message\r\n      appContentRef.value.forceUpdate()\r\n      // 重新加载销售订单列表以反映更新\r\n      await loadSalesOrders()\r\n    }\r\n  } else {\r\n    console.log('No orders selected')\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {\r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  if (currentStage === 0 && targetStage === 1) {\r\n    return await handleExecuteClick()\r\n  }\r\n  return false\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(AppContent, {\n    stages: ['createDelivery'],\n    \"before-next\": handleExecute,\n    \"before-prev\": handleCancel,\n    \"footer-config\": [\r\n      { nextText:'Create Deliveries' }\r\n    ],\n    ref_key: \"appContentRef\",\n    ref: appContentRef\n  }, {\n    [`stage-createDelivery`]: _withCtx(() => [\n      _createVNode(VarBox, { tree: _unref(initialInputTree) }, null, 8, [\"tree\"]),\n      _createElementVNode(\"div\", { class: \"stage-buttons\" }, [\n        _createElementVNode(\"button\", {\n          class: \"go-button\",\n          onClick: handleGoClick\n        }, \"Go\")\n      ]),\n      _createVNode(VarBox, { tree: _unref(salesOrdersTree) }, null, 8, [\"tree\"])\n    ]),\n    [`footer-content-right`]: _withCtx(() => [\n      _createTextVNode(_toDisplayString(appContentRef.value?.getCurrentStageName()), 1)\n    ]),\n    _: 2\n  }, 1536))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  customerSearch\r\n} from '@/utils/searchMethods'\r\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\ndefineExpose({})\r\n\r\n/**\r\n * @description 初始阶段-输入创建参数\r\n */\r\nconst initialInputTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','shipToParty','',false,{searchMethods:customerSearch},[],\"Ship-To Party:\"),\r\n    cns('date','leaf','plannedCreationDate','',false,{},[],\"Planned Creation Date:\"),\r\n    cns('selection','leaf','relevantForTM','',false,{options:['Yes','No']},[],\"Relevant For TM:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 销售订单列表树\r\n */\r\nconst salesOrdersTree = createTreeFromConfig(\r\n  cns('dict','dict','salesOrders',{},true,{},[\r\n    cns('dynamiclist','list','orders',null,false,{\r\n      hideLabel:true,\r\n      rowProvided: 1,\r\n      childTemplate:cns('dict','dict','order',null,false,{},[\r\n        cns('string','leaf','id','',true,{hideSelf:true},[],\"Sales Order\"),\r\n        cns('date','leaf','plannedCreationDate','',true,{},[],\"Planned Creation Date\"),\r\n        cns('date','leaf','plannedGIDate','',true,{},[],\"Planned GI Date\"),\r\n        cns('string','leaf','shippingPoint','',true,{},[],\"Shipping Point\"),\r\n        cns('string','leaf','shipToParty','',true,{},[],\"Ship-To Party\"),\r\n        cns('string','leaf','grossWeight','',true,{},[],\"Gross Weight\"),\r\n      ]),\r\n    },[])\r\n  ],\"Sales Orders\")\r\n)\r\n\r\n/**\r\n * @description 获取销售订单列表\r\n */\r\nasync function loadSalesOrders() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/get-sales-orders`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialInputTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('获取销售订单失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n\r\n  if(data.success && data.data.orders) {\r\n    salesOrdersTree.forceSetValue({orders: data.data.orders})\r\n    salesOrdersTree.forceUpdate()\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 处理Go按钮点击事件\r\n */\r\nasync function handleGoClick() {\r\n  appContentRef.value.footerMessage = ''\r\n  appContentRef.value.forceUpdate()\r\n  const success = await loadSalesOrders()\r\n}\r\n\r\n/**\r\n * @description 处理Execute按钮点击事件 - 创建出库交货单\r\n */\r\nasync function handleExecuteClick() {\r\n  const orders = salesOrdersTree.findNodeByPath(['orders'])\r\n  if (!orders) return false\r\n  const selectedOrders = [...orders.getSelectedChildren()]\r\n\r\n  if (selectedOrders && selectedOrders.length > 0) {\r\n    console.log('Selected orders for delivery creation:', selectedOrders.length)\r\n\r\n    // 提取选中订单的值\r\n    const orderValues = selectedOrders.map(order => order.getValue())\r\n\r\n    const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/create-from-orders`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        selectedOrders: orderValues\r\n      })\r\n    }).then(response => {\r\n      console.log('正常返回', response)\r\n      return response.json()\r\n    }).catch(error => {\r\n      console.error('创建出库交货单失败:', error)\r\n      return { success: false }\r\n    })\r\n\r\n    console.log('返回的数据',data)\r\n\r\n    if (data.success) {\r\n      appContentRef.value.footerMessage = data.data.message\r\n      appContentRef.value.forceUpdate()\r\n      // 重新加载销售订单列表以反映更新\r\n      await loadSalesOrders()\r\n    }\r\n  } else {\r\n    console.log('No orders selected')\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {\r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  if (currentStage === 0 && targetStage === 1) {\r\n    return await handleExecuteClick()\r\n  }\r\n  return false\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <AppContent\r\n    :stages=\"['createDelivery']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel\"\r\n    :footer-config=\"[\r\n      { nextText:'Create Deliveries' }\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <template #[`stage-createDelivery`]>\r\n      <!-- 输入参数部分 -->\r\n      <VarBox\r\n        :tree=\"initialInputTree\"\r\n      ></VarBox>\r\n      <div class=\"stage-buttons\">\r\n        <button class=\"go-button\" @click=\"handleGoClick\">Go</button>\r\n      </div>\r\n\r\n      <!-- 销售订单表格部分 -->\r\n      <VarBox\r\n        :tree=\"salesOrdersTree\"\r\n      >\r\n      </VarBox>\r\n    </template>\r\n\r\n    <template #[`footer-content-right`]>\r\n      {{ appContentRef?.getCurrentStageName() }}\r\n    </template>\r\n\r\n  </AppContent>\r\n</template>\r\n\r\n<style scoped>\r\n.stage-buttons {\r\n  display: flex;\r\n  justify-content: right;\r\n  margin-top: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.go-button {\r\n  padding: 4px 10px;\r\n  background-color: var(--theme-color-dark);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.go-button:hover {\r\n  background-color: var(--theme-color-darker);\r\n}\r\n.go-button:active {\r\n  background-color: var(--theme-color-light);\r\n}\r\n\r\n:deep(.salesOrders-orders--extra-table-buttons) {\r\n  display: flex;\r\n  padding-left: 10px;\r\n  gap: 8px;\r\n}\r\n\r\n.table-extra-button:disabled {\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 输入框布局调整 */\r\n:deep(.initialScreen--dict-leaf-section) {\r\n  grid-template-columns: 50% 50%;\r\n  grid-template-rows: auto auto;\r\n}\r\n:deep(.initialScreen-shipToParty--wrapper) { grid-row: 1; grid-column: 1; }\r\n:deep(.initialScreen-plannedCreationDate--wrapper) { grid-row: 1; grid-column: 2; }\r\n:deep(.initialScreen-relevantForTM--wrapper) { grid-row: 2; grid-column: 2; }\r\n</style>\r\n","import script from \"./CreateMain.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./CreateMain.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./CreateMain.vue?vue&type=style&index=0&id=f1f9cd8e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f1f9cd8e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Main from './CreateMain.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Create',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport Main from './CreateMain.vue';\r\n</script>\r\n\r\n<template>\r\n  <Main />\r\n</template>\r\n","import script from \"./Create.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock, renderSlot as _renderSlot } from \"vue\"\n\nconst _hoisted_1 = [\"onClick\"]\nconst _hoisted_2 = { class: \"gi-summary-table\" }\nconst _hoisted_3 = { class: \"gi-summary-value\" }\nconst _hoisted_4 = { class: \"gi-summary-value\" }\nconst _hoisted_5 = { class: \"gi-summary-value\" }\nconst _hoisted_6 = { class: \"gi-summary-value\" }\nconst _hoisted_7 = { class: \"gi-summary-value\" }\nconst _hoisted_8 = { class: \"gi-summary-value\" }\nconst _hoisted_9 = { class: \"gi-summary-value\" }\nconst _hoisted_10 = { class: \"gi-summary-value\" }\nconst _hoisted_11 = { class: \"item-detail-container\" }\nconst _hoisted_12 = { class: \"detail-header\" }\nconst _hoisted_13 = { class: \"item-info\" }\nconst _hoisted_14 = {\n  key: 1,\n  class: \"detail-buttons\"\n}\n\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport FilterTabs from '@/components/FilterTabs.vue';\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  customerSearch\r\n} from '@/utils/searchMethods'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'PickMain',\n  props: {\r\n  pickingId: {\r\n    type: String,\r\n    default: '',\r\n  }\r\n},\n  setup(__props, { expose: __expose }) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\n__expose({\r\n  appContentRef,\r\n})\r\n\r\nconst props = __props\r\n\r\n/**\r\n * @description 开始时，自动初始化一个outbound-delivery的数据\r\n */\r\nonMounted(async () => {\r\n  if (!props.pickingId) {\r\n    return\r\n  }\r\n  console.log('props.pickingId', props.pickingId)\r\n  initialInputTree.findNodeByPath(['id'])?.setValue(props.pickingId)\r\n  await handleGoClick()\r\n  appContentRef?.value.forceUpdate()\r\n})\r\n\r\n\r\n/**\r\n * @description 初始阶段-输入id\r\n */ \r\nconst initialInputTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','id','',false,{},[],\"Delivery:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 单子的头部数据\r\n */\r\nconst deliveryDetailTree = createTreeFromConfig(\r\n  cns('dict','dict','deliveryDetail',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},true,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n      cns('boolean','leaf','posted',false,false,{},[]),\r\n      cns('boolean','leaf','readyToPost',false,false,{},[]),\r\n    ]),\r\n    cns('date','leaf','actualGIDate','',true,{},[],\"Actual GI Date: \"), // col: 1, row: 1\r\n    cns('date','leaf','plannedGIDate','',true,{},[],\"Planned GI Date: \"), // 1 2\r\n    cns('date','leaf','actualDate','',true,{},[],\"Actual Date: \"), // 1 3\r\n    cns('date','leaf','loadingDate','',true,{},[],\"Loading Date: \"), // 1 4\r\n    cns('date','leaf','deliveryDate','',true,{},[],\"Delivery Date: \"), // 1 5\r\n    cns('string','leaf','pickingStatus','',true,{},[],\"Picking Status: \"), // 1 7\r\n    cns('string','leaf','overallStatus','',true,{},[],\"Overall Status: \"), // 1 8\r\n    cns('string','leaf','giStatus','',true,{},[],\"GI Status: \"), // 1 9\r\n    cns('string','leaf','shipToParty','',true,{},[],\"Ship-To Party: \"), // 1 10\r\n    cns('string','leaf','address','',true,{},[],\"Address: \"), // 1 11\r\n    \r\n    cns('string','leaf','grossWeight','',true,{},[],\"Gross Wgt: \"), // 2 1\r\n    cns('string','leaf','grossWeightUnit','',true,{hideLabel:true},[],\"Gross Wgt Unit: \"), // 3 1\r\n    cns('string','leaf','netWeight','',true,{},[],\"Net Wgt: \"), // 2 2\r\n    cns('string','leaf','netWeightUnit','',true,{hideLabel:true},[],\"Net Wgt Unit: \"), // 3 2\r\n    cns('string','leaf','volume','',true,{},[],\"Volume: \"), // 2 3\r\n    cns('string','leaf','volumeUnit','',true,{hideLabel:true},[],\"Volume Unit: \"), // 3 3\r\n    cns('string','leaf','priority','',true,{},[],\"Priority: \"), // 2 4\r\n    cns('string','leaf','shippingPoint','',true,{},[],\"Shipping Point: \"), // 2 5\r\n  ])\r\n)\r\n/** @description 交货单详情树的可写路径 */\r\nconst deliveryDetailTreeWritablePaths = [\r\n  ['actualGIDate'],\r\n  ['grossWeight'], ['netWeight'], ['volume'],\r\n  ['grossWeightUnit'], ['netWeightUnit'], ['volumeUnit'],\r\n]\r\n\r\n\r\n/** \r\n * @description 根据GI是否完成设置树的可写性\r\n * @param {boolean} isGIComplete GI是否完成\r\n */\r\nfunction setDeliveryDetailTreeWritable(isGIComplete: boolean) {\r\n  console.log('设置可写性', isGIComplete)\r\n  deliveryDetailTreeWritablePaths.forEach(path => {\r\n    const node = deliveryDetailTree.findNodeByPath(path)\r\n    if (node) {\r\n      node.readonly = !isGIComplete\r\n    }\r\n  })\r\n  deliveryDetailTree.forceUpdate()\r\n  itemDetailTree.root!.readonly = !isGIComplete\r\n  itemDetailTree.forceUpdate()\r\n}\r\n\r\n/**\r\n * @description 交货单物品列表树 - 最外层只读的动态列表\r\n */\r\nconst deliveryItemsTree = createTreeFromConfig(\r\n  cns('dict','dict','deliveryItems',{},false,{hideLabel:true},[\r\n    cns('dynamiclist','list','items',null,true,{\r\n      hideLabel:true,\r\n      rowProvided: 1,\r\n      showWhiteList:[\r\n        'item',\r\n        'material',\r\n        'deliveryQuantity',\r\n        'deliveryQuantityUnit',\r\n        'pickedQuantity',\r\n        'pickedQuantityUnit',\r\n        'pickingStatus',\r\n        'confirmationStatus',\r\n        'details',\r\n      ],\r\n      childTemplate:cns('dict','dict','item',null,false,{},[\r\n        cns('string','leaf','item','',true,{},[],\"Item\"),\r\n        cns('string','leaf','material','',true,{},[],\"Material\"),\r\n        cns('string','leaf','deliveryQuantity','',false,{},[],\"Delivery Quantity\"),\r\n        cns('string','leaf','deliveryQuantityUnit','',false,{},[],\" \"),\r\n        cns('string','leaf','pickingQuantity','',true,{},[],\"Picking Quantity\"),\r\n        cns('string','leaf','pickingQuantityUnit','',true,{},[],\" \"),\r\n        cns('string','leaf','pickingStatus','',true,{},[],\"Picking Status\"),\r\n        cns('string','leaf','confirmationStatus','',true,{},[],\"Confirmation Status\"),\r\n\r\n        // detailsInfo\r\n        // col left\r\n        cns('string','leaf','salesOrder','',true,{},[],\"Sales Order: \"),\r\n        // item -> Sales Order Item\r\n        cns('string','leaf','itemType','',true,{},[],\"Item Type: \"),\r\n        // empty 4th row\r\n        cns('string','leaf','originalDelivertyQuantity','',true,{},[],\"Original Delivery Quantity: \"),\r\n        // pickingQuantity, unit (above)\r\n        // deliveryQuantiry, unit (above): writable\r\n        cns('string','leaf','conversionRate','',true,{},[],\"Conversion Rate: \"),\r\n        cns('string','leaf','baseUnitDeliveryQuantity','',true,{},[],\"Base Unit Delivery Quantity: \"),\r\n        // col right\r\n        // material (above)\r\n        cns('string','leaf','grossWeight','',true,{},[],\"Gross Weight: \"),\r\n        cns('string','leaf','netWeight','',true,{},[],\"Net Weight: \"),\r\n        cns('string','leaf','volume','',true,{},[],\"Volume: \"),\r\n        cns('string','leaf','plant','',true,{},[],\"Plant: \"),\r\n        cns('string','leaf','storageLocation','',false,{},[],\"Storage Location: \"), // writable\r\n        cns('string','leaf','storageLocationDescription','',true,{},[],\" \"),\r\n        cns('string','leaf','storageBin','',true,{},[],\"Storage Bin: \"),\r\n        cns('date','leaf','materialAvailability','',true,{},[],\"Material Availability: \"),\r\n\r\n        cns('string','leaf','details','',false,{},[],\" \"),\r\n      ]),\r\n    },[])\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 物品详情页面的信息树\r\n * ```\r\n * createTreeFromConfig(\r\n *   cns('dict','dict','itemDetail',{},false,{hideLabel:true},[\r\n *     // col left\r\n *     cns('string','leaf','salesOrder','',true,{},[],\"Sales Order: \"),\r\n *     cns('string','leaf','item','',true,{},[],\"Item\"),\r\n *     cns('string','leaf','itemType','',true,{},[],\"Item Type: \"),\r\n *     // empty 4th row\r\n *     cns('string','leaf','originalDelivertyQuantity','',true,{},[],\"Original Delivery Quantity: \"),\r\n *     cns('string','leaf','pickingQuantity','',true,{},[],\"Picking Quantity\"),\r\n *     cns('string','leaf','pickingQuantityUnit','',true,{},[],\"\"), // col unit1\r\n *     cns('string','leaf','deliveryQuantity','',false,{},[],\"Delivery Quantity\"),\r\n *     cns('string','leaf','deliveryQuantityUnit','',false,{},[],\"\"), // col unit1\r\n *     cns('string','leaf','conversionRate','',true,{},[],\"Conversion Rate: \"),\r\n *     cns('string','leaf','baseUnitDeliveryQuantity','',true,{},[],\"Base Unit Delivery Quantity: \"),\r\n *     // col right\r\n *     cns('string','leaf','material','',true,{},[],\"Material\"),\r\n *     cns('string','leaf','grossWeight','',true,{},[],\"Gross Weight: \"),\r\n *     cns('string','leaf','netWeight','',true,{},[],\"Net Weight: \"),\r\n *     cns('string','leaf','volume','',true,{},[],\"Volume: \"),\r\n *     cns('string','leaf','plant','',true,{},[],\"Plant: \"),\r\n *     cns('string','leaf','storageLocation','',false,{},[],\"Storage Location: \"),\r\n *     cns('string','leaf','storageLocationDescription','',true,{},[],\"\"),\r\n *     cns('string','leaf','storageBin','',true,{},[],\"Storage Bin: \"),\r\n *     cns('date','leaf','materialAvailability','',true,{},[],\"Material Availability: \"),\r\n *   ])\r\n * )\r\n * ```\r\n */\r\nconst itemDetailTree = createTreeFromConfig(\r\n  cns('dict','dict','displayController',null,true,{\r\n    hideLabel:true,\r\n  },[\r\n    (()=>{\r\n      const ns =  deliveryItemsTree.findNodeByPath(['items'])!.config.childTemplate!\r\n      ns.config!.hideLabel = true\r\n      ns.config!.showWhiteList = [\r\n        'salesOrder',\r\n        'item',\r\n        'itemType',\r\n        'originalDelivertyQuantity',\r\n        'pickingQuantity',\r\n        'pickingQuantityUnit',\r\n        'deliveryQuantity',\r\n        'deliveryQuantityUnit',\r\n        'conversionRate',\r\n        'baseUnitDeliveryQuantity',\r\n        'material',\r\n        'grossWeight',\r\n        'netWeight',\r\n        'volume',\r\n        'plant',\r\n        'storageLocation',\r\n        'storageLocationDescription',\r\n        'storageBin',\r\n        'materialAvailability',\r\n      ]\r\n      return ns\r\n    })()\r\n  ]),\r\n)\r\n\r\n/**\r\n * @description 获取全部数据 - 包含deliveryDetail和deliveryItems\r\n */\r\nfunction getAllData() {\r\n  return {\r\n    deliveryDetail: deliveryDetailTree.getValue(),\r\n    items: deliveryItemsTree.findNodeByPath(['items'])?.getValue() || []\r\n  }\r\n}\r\n\r\n/** \r\n * @description 设置物品详情页显示的节点 - 拷贝传递\r\n * @param {VarNode} [node] 要显示的节点\r\n */\r\nfunction setItemDetailNode(node: VarNode) {\r\n  itemDetailTree.replaceNodeByPath(node.clone(), ['item'])\r\n}\r\n\r\n/**\r\n * 物品的详细信息\r\n */\r\nconst selectedItems = ref<VarNode[]>([])\r\nconst currentItemIndex = ref(0)\r\n\r\n/**\r\n * @description 处理Items Table的详情按钮点击事件\r\n * @param node 当前节点\r\n * @param path 节点路径\r\n * @param tree 树对象\r\n */\r\nasync function handleItemDetailsClick(node: VarNode, path: string[], tree: VarTree) {\r\n  console.log('path:', path)\r\n  const l = path.length\r\n  if (!(l>1 && path[l-1]=='details')) {\r\n    return\r\n  }\r\n  const itemNode = tree.findNodeByPath(path.slice(0, l-1))!\r\n\r\n  // 验证当前节点数据\r\n  const isValid = await itemsTabQuery([itemNode])\r\n  if (!isValid) {\r\n    console.log('数据验证失败，无法进入详情页面')\r\n    return\r\n  }\r\n\r\n  // 验证通过，设置选中的物品并进入详情页面\r\n  selectedItems.value = [itemNode]\r\n  currentItemIndex.value = 0\r\n\r\n  setItemDetailNode(itemNode)\r\n\r\n  // 切换到详情页面\r\n  appContentRef.value.goToStage(1)\r\n}\r\n\r\n/**\r\n * @description 验证+补全物品数据\r\n */\r\nasync function itemsTabQuery(itemNodes: VarNode[]) {\r\n  // 提取每个VarNode的值\r\n  const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/items-tab-query`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(itemValues)\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('批量查询失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success) {\r\n    // 更新每个item的详细信息，使用forceSetValue确保完整更新\r\n    if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n      data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n        if (index < itemNodes.length) {\r\n          itemNodes[index].forceSetValue(breakdown)\r\n        }\r\n      })\r\n    }\r\n\r\n    // 根据badRecordIndices设置validation\r\n    if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n      // 先重置所有节点的validation\r\n      itemNodes.forEach(node => {\r\n        if (!node.config.data) {\r\n          node.config.data = {}\r\n        }\r\n        node.config.data.validation = true\r\n      })\r\n\r\n      // 设置不合法节点的validation\r\n      data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n        if (badIndex < itemNodes.length) {\r\n          if (!itemNodes[badIndex].config.data) {\r\n            itemNodes[badIndex].config.data = {}\r\n          }\r\n          itemNodes[badIndex].config.data.validation = false\r\n        }\r\n      })\r\n    }\r\n\r\n    itemDetailTree.forceUpdate()\r\n    deliveryItemsTree.forceUpdate()\r\n    return data.data.result.allDataLegal === 1\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * 验证当前itemDetail数据并同步到原始item\r\n * @description 把正在编辑节点中的数据发送给后端验证，验证成功后更新原始item的数据\r\n * @param force 默认为true，控制validation通过之后是否重新检验\r\n */\r\nasync function updateCurrentItemDetailData(force: boolean = false) {\r\n  // 如果未更改过(config.data.validation is true) 直接返回\r\n  const node = itemDetailTree.findNodeByPath(['item'])!\r\n  let isValidate = true\r\n  if (!force &&node.config.data?.validation) {\r\n    console.log('数据未更改，无需验证', node)\r\n  } else {\r\n    isValidate = await itemsTabQuery([node])\r\n  }\r\n\r\n  if (isValidate) {\r\n    console.log('数据验证成功')\r\n    // 同步数据\r\n    const currentNode = selectedItems.value[currentItemIndex.value]\r\n    currentNode.forceSetValue(node.getValue())\r\n  } else {\r\n    console.log('数据验证失败')\r\n  }\r\n  return isValidate\r\n}\r\n\r\n/**\r\n * @description 处理Go按钮 - 向后端获取单子的具体信息\r\n */\r\nasync function handleGoClick() {\r\n  const deliveryId = initialInputTree.findNodeByPath(['id'])?.getValue()\r\n  if (!deliveryId) {\r\n    appContentRef.value.footerMessage = '请输入Delivery ID'\r\n    return\r\n  }\r\n  appContentRef.value.footerMessage = ''\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/get-detail`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ deliveryId })\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('获取交货单详情失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success && data.data) {\r\n    // 填充deliveryDetailTree\r\n    if (data.data.detail) {\r\n      deliveryDetailTree.forceSetValue(data.data.detail)\r\n    }\r\n\r\n    // 填充deliveryItemsTree\r\n    if (data.data.items) {\r\n      deliveryItemsTree.forceSetValue(data.data.items)\r\n    }\r\n\r\n    // 根据状态设置可写性\r\n    const isPosted = deliveryDetailTree.findNodeByPath(['meta','posted'])?.getValue()\r\n    setDeliveryDetailTreeWritable(!isPosted)\r\n\r\n    appContentRef.value.forceUpdate()\r\n  \r\n    giSummaryKey.value++\r\n  } else {\r\n    appContentRef.value.footerMessage = '获取交货单详情失败: ' + (data.message || '未知错误')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 处理Post GIs按钮 - 提交GI数据\r\n */\r\nasync function handlePostGIs() {\r\n  // 获取所有数据\r\n  const allData = getAllData()\r\n\r\n  // 形成单元素列表作为post GIs的输入\r\n  const postData = [allData]\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/post-gis`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(postData)\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('Post GIs失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('Post GIs返回的数据', data)\r\n\r\n  if (data.success && data.data && data.data.breakdowns) {\r\n    // 使用breakdown数据结构更新树\r\n    if (data.data.breakdowns.length > 0) {\r\n      const breakdown = data.data.breakdowns[0]\r\n\r\n      // 更新deliveryDetailTree\r\n      if (breakdown.detail) {\r\n        deliveryDetailTree.forceSetValue(breakdown.detail)\r\n      }\r\n\r\n      // 更新deliveryItemsTree\r\n      if (breakdown.items) {\r\n        deliveryItemsTree.forceSetValue({ items: breakdown.items })\r\n      }\r\n\r\n      deliveryDetailTree.forceUpdate()\r\n      deliveryItemsTree.forceUpdate()\r\n\r\n      appContentRef.value.footerMessage = 'Post GIs成功'\r\n    }\r\n  } else {\r\n    appContentRef.value.footerMessage = 'Post GIs失败: ' + (data.message || '未知错误')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 处理详情页面的enter事件\r\n */\r\nasync function handleEnterFromNodeItemDetail(_node: VarNode, _value: string, _data: any) {\r\n  // 标记数据已更改，需要验证\r\n  const node = itemDetailTree.findNodeByPath(['item'])!\r\n  if (node.config.data?.validation) {\r\n    return\r\n  }\r\n  await itemsTabQuery([node])\r\n}\r\n\r\n/**\r\n * @description 处理详情页面的input事件\r\n */\r\nasync function handleInputFromNodeItemDetail(_node: VarNode, _value: string, _data: any) {\r\n  // 标记数据已更改，需要验证\r\n  const node = itemDetailTree.findNodeByPath(['item'])!\r\n  if (node.config.data) {\r\n    node.config.data.validation = false\r\n  } else {\r\n    node.config.data = {\r\n      validation: false\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description 保存详情页面数据\r\n */\r\nasync function saveItemDetail() {\r\n  const isValid = await updateCurrentItemDetailData()\r\n  if (isValid) {\r\n    // 返回列表页面\r\n    appContentRef.value.goToStage(0)\r\n  }\r\n}\r\n\r\n/**\r\n * @description 取消详情页面编辑\r\n */\r\nfunction cancelItemDetail() {\r\n  appContentRef.value.goToStage(0)\r\n}\r\n\r\nconst selectedTab = ref(0)\r\n/**\r\n * @description 切换显示\r\n */\r\nfunction selectTab(index: number) {\r\n  selectedTab.value = index\r\n}\r\n\r\n/**\r\n * @description GI tab的信息\r\n */\r\nconst giSummaryContent = computed(() => {\r\n  giSummaryKey.value; // 强制依赖 giSummaryKey\r\n\r\n  const posted = deliveryDetailTree.findNodeByPath(['meta','posted'])?.getValue() as boolean || false\r\n  const readyToPost = deliveryDetailTree.findNodeByPath(['meta','readyToPost'])?.getValue() as boolean || false\r\n  const status = posted ? 'Posted' : readyToPost ? 'Ready to Post' : 'Not Ready to Post'\r\n  const plannedGIDate = deliveryDetailTree.findNodeByPath(['plannedGIDate'])?.getValue() as string ?? ''\r\n  const grossWeight = `${deliveryDetailTree.findNodeByPath(['grossWeight'])?.getValue() as string ?? ''}${deliveryDetailTree.findNodeByPath(['grossWeightUnit'])?.getValue() as string ?? ''}`\r\n  const netWeight = `${deliveryDetailTree.findNodeByPath(['netWeight'])?.getValue() as string ?? ''}${deliveryDetailTree.findNodeByPath(['netWeightUnit'])?.getValue() as string ?? ''}`\r\n  const volume = `${deliveryDetailTree.findNodeByPath(['volume'])?.getValue() as string ?? ''}${deliveryDetailTree.findNodeByPath(['volumeUnit'])?.getValue() as string ?? ''}`\r\n  const priority = deliveryDetailTree.findNodeByPath(['priority'])?.getValue() as string ?? ''\r\n  const shipToParty = deliveryDetailTree.findNodeByPath(['shipToParty'])?.getValue() as string ?? ''\r\n  const address = deliveryDetailTree.findNodeByPath(['address'])?.getValue() as string ?? ''\r\n  const result = {\r\n    status,\r\n    plannedGIDate,\r\n    grossWeight,\r\n    netWeight,\r\n    volume,\r\n    priority,\r\n    shipToParty,\r\n    address\r\n  }\r\n  console.log('giSummaryContent 重新计算:', result)\r\n  return result\r\n})\r\nconst giSummaryKey = ref(0)\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {\r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  return false // 阻止自动切换，使用自定义按钮控制\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(AppContent, {\n    stages: ['picking', 'itemDetail'],\n    \"before-next\": handleExecute,\n    \"before-prev\": handleCancel,\n    \"footer-config\": [\r\n      { nextText:'/hide' },\r\n      { prevText:'/hide', nextText:'/hide' }\r\n    ],\n    ref_key: \"appContentRef\",\n    ref: appContentRef\n  }, {\n    [`stage-picking`]: _withCtx(() => [\n      _createVNode(VarBox, { tree: _unref(initialInputTree) }, null, 8, [\"tree\"]),\n      _createElementVNode(\"div\", { class: \"stage-buttons\" }, [\n        _createElementVNode(\"button\", {\n          class: \"go-button\",\n          onClick: handleGoClick\n        }, \"Go\")\n      ]),\n      _createVNode(VarBox, { tree: _unref(deliveryDetailTree) }, null, 8, [\"tree\"]),\n      _createVNode(FilterTabs, {\n        tabs: [{label:'Picking',value:0},{label:'GI',value:1}],\n        \"initial-active-tab\": 1,\n        onTabSelected: selectTab,\n        class: \"reverse hide-bottom-line\"\n      }),\n      (selectedTab.value == 0)\n        ? (_openBlock(), _createBlock(VarBox, {\n            key: 0,\n            tree: _unref(deliveryItemsTree)\n          }, _createSlots({ _: 2 }, [\n            _renderList(_unref(deliveryItemsTree).findNodeByPath(['items'])?.children?.length || 0, (index) => {\n              return {\n                name: `deliveryItems-items-${index-1}-details--wrapper`,\n                fn: _withCtx(({ currentNode, allProps }) => [\n                  _createElementVNode(\"button\", {\n                    class: \"details-button\",\n                    onClick: ($event: any) => (handleItemDetailsClick(currentNode, allProps.nodePath, allProps.varTree))\n                  }, \" > \", 8, _hoisted_1)\n                ])\n              }\n            })\n          ]), 1032, [\"tree\"]))\n        : (_openBlock(), _createElementBlock(\"div\", {\n            key: giSummaryKey.value,\n            class: \"gi-summary-table-container\"\n          }, [\n            _createElementVNode(\"table\", _hoisted_2, [\n              _createElementVNode(\"tbody\", null, [\n                _createElementVNode(\"tr\", null, [\n                  _createElementVNode(\"td\", null, [\n                    _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Status:\", -1)),\n                    _cache[1] || (_cache[1] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_3, _toDisplayString(giSummaryContent.value.status), 1)\n                  ]),\n                  _createElementVNode(\"td\", null, [\n                    _cache[2] || (_cache[2] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Planned GI Date:\", -1)),\n                    _cache[3] || (_cache[3] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_4, _toDisplayString(giSummaryContent.value.plannedGIDate), 1)\n                  ]),\n                  _createElementVNode(\"td\", null, [\n                    _cache[4] || (_cache[4] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Ship-To Party:\", -1)),\n                    _cache[5] || (_cache[5] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_5, _toDisplayString(giSummaryContent.value.shipToParty), 1)\n                  ])\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _cache[10] || (_cache[10] = _createElementVNode(\"td\", null, null, -1)),\n                  _createElementVNode(\"td\", null, [\n                    _cache[6] || (_cache[6] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Gross Weight:\", -1)),\n                    _cache[7] || (_cache[7] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_6, _toDisplayString(giSummaryContent.value.grossWeight), 1)\n                  ]),\n                  _createElementVNode(\"td\", null, [\n                    _cache[8] || (_cache[8] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Address:\", -1)),\n                    _cache[9] || (_cache[9] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_7, _toDisplayString(giSummaryContent.value.address), 1)\n                  ])\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _cache[13] || (_cache[13] = _createElementVNode(\"td\", null, null, -1)),\n                  _createElementVNode(\"td\", null, [\n                    _cache[11] || (_cache[11] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Net Weight:\", -1)),\n                    _cache[12] || (_cache[12] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_8, _toDisplayString(giSummaryContent.value.netWeight), 1)\n                  ])\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _cache[16] || (_cache[16] = _createElementVNode(\"td\", null, null, -1)),\n                  _createElementVNode(\"td\", null, [\n                    _cache[14] || (_cache[14] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Volume:\", -1)),\n                    _cache[15] || (_cache[15] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_9, _toDisplayString(giSummaryContent.value.volume), 1)\n                  ])\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _cache[19] || (_cache[19] = _createElementVNode(\"td\", null, null, -1)),\n                  _createElementVNode(\"td\", null, [\n                    _cache[17] || (_cache[17] = _createElementVNode(\"span\", { class: \"gi-summary-key\" }, \"Priority:\", -1)),\n                    _cache[18] || (_cache[18] = _createTextVNode()),\n                    _createElementVNode(\"span\", _hoisted_10, _toDisplayString(giSummaryContent.value.priority), 1)\n                  ])\n                ])\n              ])\n            ])\n          ]))\n    ]),\n    [`stage-itemDetail`]: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_11, [\n        _createElementVNode(\"div\", _hoisted_12, [\n          _cache[20] || (_cache[20] = _createElementVNode(\"h2\", null, \"Item Detail\", -1)),\n          _createElementVNode(\"div\", _hoisted_13, \"Item: \" + _toDisplayString((selectedItems.value[currentItemIndex.value]?.getValue() as any)?.item || ''), 1)\n        ]),\n        _createVNode(VarBox, {\n          tree: _unref(itemDetailTree),\n          onEnterFromNode: handleEnterFromNodeItemDetail,\n          onInputFromNode: handleInputFromNodeItemDetail\n        }, null, 8, [\"tree\"])\n      ])\n    ]),\n    [`footer-content-right`]: _withCtx(() => [\n      _createTextVNode(_toDisplayString(appContentRef.value?.getCurrentStageName()) + \" \", 1),\n      (appContentRef.value?.currentStage == 0)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            class: \"next-button\",\n            onClick: handlePostGIs\n          }, \" Post \"))\n        : _createCommentVNode(\"\", true),\n      _renderSlot(_ctx.$slots, `extra-bottom-elements`),\n      (appContentRef.value?.currentStage == 1)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n            _createElementVNode(\"button\", {\n              class: \"cancel-button\",\n              onClick: cancelItemDetail\n            }, \"Cancel\"),\n            _createElementVNode(\"button\", {\n              class: \"save-button\",\n              onClick: saveItemDetail\n            }, \"Save\")\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _: 2\n  }, 1536))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport FilterTabs from '@/components/FilterTabs.vue';\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\nimport {\r\n  customerSearch\r\n} from '@/utils/searchMethods'\r\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\ndefineExpose({\r\n  appContentRef,\r\n})\r\n\r\nconst props = defineProps({\r\n  pickingId: {\r\n    type: String,\r\n    default: '',\r\n  }\r\n})\r\n\r\n/**\r\n * @description 开始时，自动初始化一个outbound-delivery的数据\r\n */\r\nonMounted(async () => {\r\n  if (!props.pickingId) {\r\n    return\r\n  }\r\n  console.log('props.pickingId', props.pickingId)\r\n  initialInputTree.findNodeByPath(['id'])?.setValue(props.pickingId)\r\n  await handleGoClick()\r\n  appContentRef?.value.forceUpdate()\r\n})\r\n\r\n\r\n/**\r\n * @description 初始阶段-输入id\r\n */ \r\nconst initialInputTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','id','',false,{},[],\"Delivery:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 单子的头部数据\r\n */\r\nconst deliveryDetailTree = createTreeFromConfig(\r\n  cns('dict','dict','deliveryDetail',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},true,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n      cns('boolean','leaf','posted',false,false,{},[]),\r\n      cns('boolean','leaf','readyToPost',false,false,{},[]),\r\n    ]),\r\n    cns('date','leaf','actualGIDate','',true,{},[],\"Actual GI Date: \"), // col: 1, row: 1\r\n    cns('date','leaf','plannedGIDate','',true,{},[],\"Planned GI Date: \"), // 1 2\r\n    cns('date','leaf','actualDate','',true,{},[],\"Actual Date: \"), // 1 3\r\n    cns('date','leaf','loadingDate','',true,{},[],\"Loading Date: \"), // 1 4\r\n    cns('date','leaf','deliveryDate','',true,{},[],\"Delivery Date: \"), // 1 5\r\n    cns('string','leaf','pickingStatus','',true,{},[],\"Picking Status: \"), // 1 7\r\n    cns('string','leaf','overallStatus','',true,{},[],\"Overall Status: \"), // 1 8\r\n    cns('string','leaf','giStatus','',true,{},[],\"GI Status: \"), // 1 9\r\n    cns('string','leaf','shipToParty','',true,{},[],\"Ship-To Party: \"), // 1 10\r\n    cns('string','leaf','address','',true,{},[],\"Address: \"), // 1 11\r\n    \r\n    cns('string','leaf','grossWeight','',true,{},[],\"Gross Wgt: \"), // 2 1\r\n    cns('string','leaf','grossWeightUnit','',true,{hideLabel:true},[],\"Gross Wgt Unit: \"), // 3 1\r\n    cns('string','leaf','netWeight','',true,{},[],\"Net Wgt: \"), // 2 2\r\n    cns('string','leaf','netWeightUnit','',true,{hideLabel:true},[],\"Net Wgt Unit: \"), // 3 2\r\n    cns('string','leaf','volume','',true,{},[],\"Volume: \"), // 2 3\r\n    cns('string','leaf','volumeUnit','',true,{hideLabel:true},[],\"Volume Unit: \"), // 3 3\r\n    cns('string','leaf','priority','',true,{},[],\"Priority: \"), // 2 4\r\n    cns('string','leaf','shippingPoint','',true,{},[],\"Shipping Point: \"), // 2 5\r\n  ])\r\n)\r\n/** @description 交货单详情树的可写路径 */\r\nconst deliveryDetailTreeWritablePaths = [\r\n  ['actualGIDate'],\r\n  ['grossWeight'], ['netWeight'], ['volume'],\r\n  ['grossWeightUnit'], ['netWeightUnit'], ['volumeUnit'],\r\n]\r\n\r\n\r\n/** \r\n * @description 根据GI是否完成设置树的可写性\r\n * @param {boolean} isGIComplete GI是否完成\r\n */\r\nfunction setDeliveryDetailTreeWritable(isGIComplete: boolean) {\r\n  console.log('设置可写性', isGIComplete)\r\n  deliveryDetailTreeWritablePaths.forEach(path => {\r\n    const node = deliveryDetailTree.findNodeByPath(path)\r\n    if (node) {\r\n      node.readonly = !isGIComplete\r\n    }\r\n  })\r\n  deliveryDetailTree.forceUpdate()\r\n  itemDetailTree.root!.readonly = !isGIComplete\r\n  itemDetailTree.forceUpdate()\r\n}\r\n\r\n/**\r\n * @description 交货单物品列表树 - 最外层只读的动态列表\r\n */\r\nconst deliveryItemsTree = createTreeFromConfig(\r\n  cns('dict','dict','deliveryItems',{},false,{hideLabel:true},[\r\n    cns('dynamiclist','list','items',null,true,{\r\n      hideLabel:true,\r\n      rowProvided: 1,\r\n      showWhiteList:[\r\n        'item',\r\n        'material',\r\n        'deliveryQuantity',\r\n        'deliveryQuantityUnit',\r\n        'pickedQuantity',\r\n        'pickedQuantityUnit',\r\n        'pickingStatus',\r\n        'confirmationStatus',\r\n        'details',\r\n      ],\r\n      childTemplate:cns('dict','dict','item',null,false,{},[\r\n        cns('string','leaf','item','',true,{},[],\"Item\"),\r\n        cns('string','leaf','material','',true,{},[],\"Material\"),\r\n        cns('string','leaf','deliveryQuantity','',false,{},[],\"Delivery Quantity\"),\r\n        cns('string','leaf','deliveryQuantityUnit','',false,{},[],\" \"),\r\n        cns('string','leaf','pickingQuantity','',true,{},[],\"Picking Quantity\"),\r\n        cns('string','leaf','pickingQuantityUnit','',true,{},[],\" \"),\r\n        cns('string','leaf','pickingStatus','',true,{},[],\"Picking Status\"),\r\n        cns('string','leaf','confirmationStatus','',true,{},[],\"Confirmation Status\"),\r\n\r\n        // detailsInfo\r\n        // col left\r\n        cns('string','leaf','salesOrder','',true,{},[],\"Sales Order: \"),\r\n        // item -> Sales Order Item\r\n        cns('string','leaf','itemType','',true,{},[],\"Item Type: \"),\r\n        // empty 4th row\r\n        cns('string','leaf','originalDelivertyQuantity','',true,{},[],\"Original Delivery Quantity: \"),\r\n        // pickingQuantity, unit (above)\r\n        // deliveryQuantiry, unit (above): writable\r\n        cns('string','leaf','conversionRate','',true,{},[],\"Conversion Rate: \"),\r\n        cns('string','leaf','baseUnitDeliveryQuantity','',true,{},[],\"Base Unit Delivery Quantity: \"),\r\n        // col right\r\n        // material (above)\r\n        cns('string','leaf','grossWeight','',true,{},[],\"Gross Weight: \"),\r\n        cns('string','leaf','netWeight','',true,{},[],\"Net Weight: \"),\r\n        cns('string','leaf','volume','',true,{},[],\"Volume: \"),\r\n        cns('string','leaf','plant','',true,{},[],\"Plant: \"),\r\n        cns('string','leaf','storageLocation','',false,{},[],\"Storage Location: \"), // writable\r\n        cns('string','leaf','storageLocationDescription','',true,{},[],\" \"),\r\n        cns('string','leaf','storageBin','',true,{},[],\"Storage Bin: \"),\r\n        cns('date','leaf','materialAvailability','',true,{},[],\"Material Availability: \"),\r\n\r\n        cns('string','leaf','details','',false,{},[],\" \"),\r\n      ]),\r\n    },[])\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 物品详情页面的信息树\r\n * ```\r\n * createTreeFromConfig(\r\n *   cns('dict','dict','itemDetail',{},false,{hideLabel:true},[\r\n *     // col left\r\n *     cns('string','leaf','salesOrder','',true,{},[],\"Sales Order: \"),\r\n *     cns('string','leaf','item','',true,{},[],\"Item\"),\r\n *     cns('string','leaf','itemType','',true,{},[],\"Item Type: \"),\r\n *     // empty 4th row\r\n *     cns('string','leaf','originalDelivertyQuantity','',true,{},[],\"Original Delivery Quantity: \"),\r\n *     cns('string','leaf','pickingQuantity','',true,{},[],\"Picking Quantity\"),\r\n *     cns('string','leaf','pickingQuantityUnit','',true,{},[],\"\"), // col unit1\r\n *     cns('string','leaf','deliveryQuantity','',false,{},[],\"Delivery Quantity\"),\r\n *     cns('string','leaf','deliveryQuantityUnit','',false,{},[],\"\"), // col unit1\r\n *     cns('string','leaf','conversionRate','',true,{},[],\"Conversion Rate: \"),\r\n *     cns('string','leaf','baseUnitDeliveryQuantity','',true,{},[],\"Base Unit Delivery Quantity: \"),\r\n *     // col right\r\n *     cns('string','leaf','material','',true,{},[],\"Material\"),\r\n *     cns('string','leaf','grossWeight','',true,{},[],\"Gross Weight: \"),\r\n *     cns('string','leaf','netWeight','',true,{},[],\"Net Weight: \"),\r\n *     cns('string','leaf','volume','',true,{},[],\"Volume: \"),\r\n *     cns('string','leaf','plant','',true,{},[],\"Plant: \"),\r\n *     cns('string','leaf','storageLocation','',false,{},[],\"Storage Location: \"),\r\n *     cns('string','leaf','storageLocationDescription','',true,{},[],\"\"),\r\n *     cns('string','leaf','storageBin','',true,{},[],\"Storage Bin: \"),\r\n *     cns('date','leaf','materialAvailability','',true,{},[],\"Material Availability: \"),\r\n *   ])\r\n * )\r\n * ```\r\n */\r\nconst itemDetailTree = createTreeFromConfig(\r\n  cns('dict','dict','displayController',null,true,{\r\n    hideLabel:true,\r\n  },[\r\n    (()=>{\r\n      const ns =  deliveryItemsTree.findNodeByPath(['items'])!.config.childTemplate!\r\n      ns.config!.hideLabel = true\r\n      ns.config!.showWhiteList = [\r\n        'salesOrder',\r\n        'item',\r\n        'itemType',\r\n        'originalDelivertyQuantity',\r\n        'pickingQuantity',\r\n        'pickingQuantityUnit',\r\n        'deliveryQuantity',\r\n        'deliveryQuantityUnit',\r\n        'conversionRate',\r\n        'baseUnitDeliveryQuantity',\r\n        'material',\r\n        'grossWeight',\r\n        'netWeight',\r\n        'volume',\r\n        'plant',\r\n        'storageLocation',\r\n        'storageLocationDescription',\r\n        'storageBin',\r\n        'materialAvailability',\r\n      ]\r\n      return ns\r\n    })()\r\n  ]),\r\n)\r\n\r\n/**\r\n * @description 获取全部数据 - 包含deliveryDetail和deliveryItems\r\n */\r\nfunction getAllData() {\r\n  return {\r\n    deliveryDetail: deliveryDetailTree.getValue(),\r\n    items: deliveryItemsTree.findNodeByPath(['items'])?.getValue() || []\r\n  }\r\n}\r\n\r\n/** \r\n * @description 设置物品详情页显示的节点 - 拷贝传递\r\n * @param {VarNode} [node] 要显示的节点\r\n */\r\nfunction setItemDetailNode(node: VarNode) {\r\n  itemDetailTree.replaceNodeByPath(node.clone(), ['item'])\r\n}\r\n\r\n/**\r\n * 物品的详细信息\r\n */\r\nconst selectedItems = ref<VarNode[]>([])\r\nconst currentItemIndex = ref(0)\r\n\r\n/**\r\n * @description 处理Items Table的详情按钮点击事件\r\n * @param node 当前节点\r\n * @param path 节点路径\r\n * @param tree 树对象\r\n */\r\nasync function handleItemDetailsClick(node: VarNode, path: string[], tree: VarTree) {\r\n  console.log('path:', path)\r\n  const l = path.length\r\n  if (!(l>1 && path[l-1]=='details')) {\r\n    return\r\n  }\r\n  const itemNode = tree.findNodeByPath(path.slice(0, l-1))!\r\n\r\n  // 验证当前节点数据\r\n  const isValid = await itemsTabQuery([itemNode])\r\n  if (!isValid) {\r\n    console.log('数据验证失败，无法进入详情页面')\r\n    return\r\n  }\r\n\r\n  // 验证通过，设置选中的物品并进入详情页面\r\n  selectedItems.value = [itemNode]\r\n  currentItemIndex.value = 0\r\n\r\n  setItemDetailNode(itemNode)\r\n\r\n  // 切换到详情页面\r\n  appContentRef.value.goToStage(1)\r\n}\r\n\r\n/**\r\n * @description 验证+补全物品数据\r\n */\r\nasync function itemsTabQuery(itemNodes: VarNode[]) {\r\n  // 提取每个VarNode的值\r\n  const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/items-tab-query`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(itemValues)\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('批量查询失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success) {\r\n    // 更新每个item的详细信息，使用forceSetValue确保完整更新\r\n    if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n      data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n        if (index < itemNodes.length) {\r\n          itemNodes[index].forceSetValue(breakdown)\r\n        }\r\n      })\r\n    }\r\n\r\n    // 根据badRecordIndices设置validation\r\n    if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n      // 先重置所有节点的validation\r\n      itemNodes.forEach(node => {\r\n        if (!node.config.data) {\r\n          node.config.data = {}\r\n        }\r\n        node.config.data.validation = true\r\n      })\r\n\r\n      // 设置不合法节点的validation\r\n      data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n        if (badIndex < itemNodes.length) {\r\n          if (!itemNodes[badIndex].config.data) {\r\n            itemNodes[badIndex].config.data = {}\r\n          }\r\n          itemNodes[badIndex].config.data.validation = false\r\n        }\r\n      })\r\n    }\r\n\r\n    itemDetailTree.forceUpdate()\r\n    deliveryItemsTree.forceUpdate()\r\n    return data.data.result.allDataLegal === 1\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * 验证当前itemDetail数据并同步到原始item\r\n * @description 把正在编辑节点中的数据发送给后端验证，验证成功后更新原始item的数据\r\n * @param force 默认为true，控制validation通过之后是否重新检验\r\n */\r\nasync function updateCurrentItemDetailData(force: boolean = false) {\r\n  // 如果未更改过(config.data.validation is true) 直接返回\r\n  const node = itemDetailTree.findNodeByPath(['item'])!\r\n  let isValidate = true\r\n  if (!force &&node.config.data?.validation) {\r\n    console.log('数据未更改，无需验证', node)\r\n  } else {\r\n    isValidate = await itemsTabQuery([node])\r\n  }\r\n\r\n  if (isValidate) {\r\n    console.log('数据验证成功')\r\n    // 同步数据\r\n    const currentNode = selectedItems.value[currentItemIndex.value]\r\n    currentNode.forceSetValue(node.getValue())\r\n  } else {\r\n    console.log('数据验证失败')\r\n  }\r\n  return isValidate\r\n}\r\n\r\n/**\r\n * @description 处理Go按钮 - 向后端获取单子的具体信息\r\n */\r\nasync function handleGoClick() {\r\n  const deliveryId = initialInputTree.findNodeByPath(['id'])?.getValue()\r\n  if (!deliveryId) {\r\n    appContentRef.value.footerMessage = '请输入Delivery ID'\r\n    return\r\n  }\r\n  appContentRef.value.footerMessage = ''\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/get-detail`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ deliveryId })\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('获取交货单详情失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success && data.data) {\r\n    // 填充deliveryDetailTree\r\n    if (data.data.detail) {\r\n      deliveryDetailTree.forceSetValue(data.data.detail)\r\n    }\r\n\r\n    // 填充deliveryItemsTree\r\n    if (data.data.items) {\r\n      deliveryItemsTree.forceSetValue(data.data.items)\r\n    }\r\n\r\n    // 根据状态设置可写性\r\n    const isPosted = deliveryDetailTree.findNodeByPath(['meta','posted'])?.getValue()\r\n    setDeliveryDetailTreeWritable(!isPosted)\r\n\r\n    appContentRef.value.forceUpdate()\r\n  \r\n    giSummaryKey.value++\r\n  } else {\r\n    appContentRef.value.footerMessage = '获取交货单详情失败: ' + (data.message || '未知错误')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 处理Post GIs按钮 - 提交GI数据\r\n */\r\nasync function handlePostGIs() {\r\n  // 获取所有数据\r\n  const allData = getAllData()\r\n\r\n  // 形成单元素列表作为post GIs的输入\r\n  const postData = [allData]\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/post-gis`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(postData)\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('Post GIs失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('Post GIs返回的数据', data)\r\n\r\n  if (data.success && data.data && data.data.breakdowns) {\r\n    // 使用breakdown数据结构更新树\r\n    if (data.data.breakdowns.length > 0) {\r\n      const breakdown = data.data.breakdowns[0]\r\n\r\n      // 更新deliveryDetailTree\r\n      if (breakdown.detail) {\r\n        deliveryDetailTree.forceSetValue(breakdown.detail)\r\n      }\r\n\r\n      // 更新deliveryItemsTree\r\n      if (breakdown.items) {\r\n        deliveryItemsTree.forceSetValue({ items: breakdown.items })\r\n      }\r\n\r\n      deliveryDetailTree.forceUpdate()\r\n      deliveryItemsTree.forceUpdate()\r\n\r\n      appContentRef.value.footerMessage = 'Post GIs成功'\r\n    }\r\n  } else {\r\n    appContentRef.value.footerMessage = 'Post GIs失败: ' + (data.message || '未知错误')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 处理详情页面的enter事件\r\n */\r\nasync function handleEnterFromNodeItemDetail(_node: VarNode, _value: string, _data: any) {\r\n  // 标记数据已更改，需要验证\r\n  const node = itemDetailTree.findNodeByPath(['item'])!\r\n  if (node.config.data?.validation) {\r\n    return\r\n  }\r\n  await itemsTabQuery([node])\r\n}\r\n\r\n/**\r\n * @description 处理详情页面的input事件\r\n */\r\nasync function handleInputFromNodeItemDetail(_node: VarNode, _value: string, _data: any) {\r\n  // 标记数据已更改，需要验证\r\n  const node = itemDetailTree.findNodeByPath(['item'])!\r\n  if (node.config.data) {\r\n    node.config.data.validation = false\r\n  } else {\r\n    node.config.data = {\r\n      validation: false\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @description 保存详情页面数据\r\n */\r\nasync function saveItemDetail() {\r\n  const isValid = await updateCurrentItemDetailData()\r\n  if (isValid) {\r\n    // 返回列表页面\r\n    appContentRef.value.goToStage(0)\r\n  }\r\n}\r\n\r\n/**\r\n * @description 取消详情页面编辑\r\n */\r\nfunction cancelItemDetail() {\r\n  appContentRef.value.goToStage(0)\r\n}\r\n\r\nconst selectedTab = ref(0)\r\n/**\r\n * @description 切换显示\r\n */\r\nfunction selectTab(index: number) {\r\n  selectedTab.value = index\r\n}\r\n\r\n/**\r\n * @description GI tab的信息\r\n */\r\nconst giSummaryContent = computed(() => {\r\n  giSummaryKey.value; // 强制依赖 giSummaryKey\r\n\r\n  const posted = deliveryDetailTree.findNodeByPath(['meta','posted'])?.getValue() as boolean || false\r\n  const readyToPost = deliveryDetailTree.findNodeByPath(['meta','readyToPost'])?.getValue() as boolean || false\r\n  const status = posted ? 'Posted' : readyToPost ? 'Ready to Post' : 'Not Ready to Post'\r\n  const plannedGIDate = deliveryDetailTree.findNodeByPath(['plannedGIDate'])?.getValue() as string ?? ''\r\n  const grossWeight = `${deliveryDetailTree.findNodeByPath(['grossWeight'])?.getValue() as string ?? ''}${deliveryDetailTree.findNodeByPath(['grossWeightUnit'])?.getValue() as string ?? ''}`\r\n  const netWeight = `${deliveryDetailTree.findNodeByPath(['netWeight'])?.getValue() as string ?? ''}${deliveryDetailTree.findNodeByPath(['netWeightUnit'])?.getValue() as string ?? ''}`\r\n  const volume = `${deliveryDetailTree.findNodeByPath(['volume'])?.getValue() as string ?? ''}${deliveryDetailTree.findNodeByPath(['volumeUnit'])?.getValue() as string ?? ''}`\r\n  const priority = deliveryDetailTree.findNodeByPath(['priority'])?.getValue() as string ?? ''\r\n  const shipToParty = deliveryDetailTree.findNodeByPath(['shipToParty'])?.getValue() as string ?? ''\r\n  const address = deliveryDetailTree.findNodeByPath(['address'])?.getValue() as string ?? ''\r\n  const result = {\r\n    status,\r\n    plannedGIDate,\r\n    grossWeight,\r\n    netWeight,\r\n    volume,\r\n    priority,\r\n    shipToParty,\r\n    address\r\n  }\r\n  console.log('giSummaryContent 重新计算:', result)\r\n  return result\r\n})\r\nconst giSummaryKey = ref(0)\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {\r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  return false // 阻止自动切换，使用自定义按钮控制\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <AppContent\r\n    :stages=\"['picking', 'itemDetail']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel\"\r\n    :footer-config=\"[\r\n      { nextText:'/hide' },\r\n      { prevText:'/hide', nextText:'/hide' }\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <template #[`stage-picking`]>\r\n      <!-- 输入参数部分 -->\r\n      <VarBox\r\n        :tree=\"initialInputTree\"\r\n      ></VarBox>\r\n      <div class=\"stage-buttons\">\r\n        <button class=\"go-button\" @click=\"handleGoClick\">Go</button>\r\n      </div>\r\n\r\n      <!-- HeaderTree -->\r\n      <VarBox\r\n        :tree=\"deliveryDetailTree\"\r\n      >\r\n      </VarBox>\r\n      <FilterTabs\r\n        :tabs=\"[{label:'Picking',value:0},{label:'GI',value:1}]\"\r\n        :initial-active-tab=\"1\"\r\n        @tab-selected=\"selectTab\"\r\n        class=\"reverse hide-bottom-line\"\r\n      />\r\n      <VarBox\r\n        :tree=\"deliveryItemsTree\"\r\n        v-if=\"selectedTab == 0\"\r\n      >\r\n        <template v-for=\"index in deliveryItemsTree.findNodeByPath(['items'])?.children?.length || 0\" #[`deliveryItems-items-${index-1}-details--wrapper`]=\"{ currentNode, allProps }\">\r\n          <button\r\n            class=\"details-button\"\r\n            @click=\"handleItemDetailsClick(currentNode, allProps.nodePath, allProps.varTree)\"\r\n          >\r\n            >\r\n          </button>\r\n        </template>\r\n      </VarBox>\r\n      <div \r\n        v-else\r\n        :key=\"giSummaryKey\"\r\n        class = \"gi-summary-table-container\"\r\n      >\r\n        <table class=\"gi-summary-table\">\r\n          <tbody>\r\n            <tr>\r\n              <td><span class=\"gi-summary-key\">Status:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.status }}</span></td>\r\n              <td><span class=\"gi-summary-key\">Planned GI Date:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.plannedGIDate }}</span></td>\r\n              <td><span class=\"gi-summary-key\">Ship-To Party:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.shipToParty }}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td><span class=\"gi-summary-key\">Gross Weight:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.grossWeight }}</span></td>\r\n              <td><span class=\"gi-summary-key\">Address:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.address }}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td></td> \r\n              <td><span class=\"gi-summary-key\">Net Weight:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.netWeight }}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td></td> \r\n              <td><span class=\"gi-summary-key\">Volume:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.volume }}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td></td> \r\n              <td><span class=\"gi-summary-key\">Priority:</span> <span class=\"gi-summary-value\">{{ giSummaryContent.priority }}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </template>\r\n\r\n    <template #[`stage-itemDetail`]>\r\n      <div class=\"item-detail-container\">\r\n        <!-- 标题栏 -->\r\n        <div class=\"detail-header\">\r\n          <h2>Item Detail</h2>\r\n          <div class=\"item-info\">Item: {{ (selectedItems[currentItemIndex]?.getValue() as any)?.item || '' }}</div>\r\n        </div>\r\n\r\n        <VarBox\r\n          :tree=\"itemDetailTree\"\r\n          @enter-from-node=\"handleEnterFromNodeItemDetail\"\r\n          @input-from-node=\"handleInputFromNodeItemDetail\"\r\n        ></VarBox>\r\n      </div>\r\n    </template>\r\n\r\n    <template #[`footer-content-right`]>\r\n      {{ appContentRef?.getCurrentStageName() }}\r\n\r\n      <!-- 操作按钮 -->\r\n       \r\n      <button\r\n        class=\"next-button\"\r\n        @click=\"handlePostGIs\"\r\n        v-if=\"appContentRef?.currentStage == 0\"\r\n      >\r\n        Post\r\n      </button>\r\n      <slot :name=\"`extra-bottom-elements`\"></slot>\r\n      <div class=\"detail-buttons\" v-if=\"appContentRef?.currentStage == 1\">\r\n        <button class=\"cancel-button\" @click=\"cancelItemDetail\">Cancel</button>\r\n        <button class=\"save-button\" @click=\"saveItemDetail\">Save</button>\r\n      </div>\r\n    </template>\r\n\r\n  </AppContent>\r\n</template>\r\n\r\n<style scoped>\r\n.stage-buttons {\r\n  display: flex;\r\n  justify-content: right;\r\n  margin-top: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.go-button {\r\n  padding: 4px 10px;\r\n  background-color: var(--theme-color-dark);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.go-button:hover {\r\n  background-color: var(--theme-color-darker);\r\n}\r\n.go-button:active {\r\n  background-color: var(--theme-color-light);\r\n}\r\n\r\n/* Tree Grid */\r\n:deep(.deliveryDetail--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 18% 25% 14% 25% 5% 13%;\r\n  column-gap: 0;\r\n  grid-template-rows: auto auto auto auto auto 50px auto auto auto auto;\r\n  --deliveryDetail-left-col-index: 2;\r\n  --deliveryDetail-right-col-index: 4;\r\n  --deliveryDetail-unit-col-index: 5;\r\n}\r\n\r\n:deep(.deliveryDetail-actualGIDate--wrapper) { grid-row: 1; }\r\n:deep(.deliveryDetail-plannedGIDate--wrapper) { grid-row: 2; }\r\n:deep(.deliveryDetail-actualDate--wrapper) { grid-row: 3; }\r\n:deep(.deliveryDetail-loadingDate--wrapper) { grid-row: 4; }\r\n:deep(.deliveryDetail-deliveryDate--wrapper) { grid-row: 5; }\r\n:deep(.deliveryDetail-pickingStatus--wrapper) { grid-row: 7; }\r\n:deep(.deliveryDetail-overallStatus--wrapper) { grid-row: 8; }\r\n:deep(.deliveryDetail-giStatus--wrapper) { grid-row: 9; }\r\n:deep(.deliveryDetail-shipToParty--wrapper) { grid-row: 10; }\r\n:deep(.deliveryDetail-address--wrapper) { grid-row: 11; }\r\n:deep(.deliveryDetail-actualGIDate--wrapper),:deep(.deliveryDetail-plannedGIDate--wrapper),:deep(.deliveryDetail-actualDate--wrapper),:deep(.deliveryDetail-loadingDate--wrapper),:deep(.deliveryDetail-deliveryDate--wrapper),:deep(.deliveryDetail-pickingStatus--wrapper),:deep(.deliveryDetail-overallStatus--wrapper),:deep(.deliveryDetail-giStatus--wrapper),:deep(.deliveryDetail-shipToParty--wrapper),:deep(.deliveryDetail-address--wrapper) { grid-column: var(--deliveryDetail-left-col-index); }\r\n\r\n:deep(.deliveryDetail-grossWeight--wrapper) { grid-row: 1; }\r\n:deep(.deliveryDetail-netWeight--wrapper) { grid-row: 2; }\r\n:deep(.deliveryDetail-volume--wrapper) { grid-row: 3; }\r\n:deep(.deliveryDetail-priority--wrapper) { grid-row: 4; }\r\n:deep(.deliveryDetail-shippingPoint--wrapper) { grid-row: 5; }\r\n:deep(.deliveryDetail-grossWeight--wrapper),:deep(.deliveryDetail-netWeight--wrapper),:deep(.deliveryDetail-volume--wrapper),:deep(.deliveryDetail-priority--wrapper),:deep(.deliveryDetail-shippingPoint--wrapper) { grid-column: var(--deliveryDetail-right-col-index); }\r\n\r\n:deep(.deliveryDetail-grossWeightUnit--wrapper) { grid-row: 1; }\r\n:deep(.deliveryDetail-netWeightUnit--wrapper) { grid-row: 2; }\r\n:deep(.deliveryDetail-volumeUnit--wrapper) { grid-row: 3; }\r\n:deep(.deliveryDetail-grossWeightUnit--wrapper),:deep(.deliveryDetail-netWeightUnit--wrapper),:deep(.deliveryDetail-volumeUnit--wrapper) { grid-column: var(--deliveryDetail-unit-col-index); }\r\n\r\n/* 详情按钮样式 */\r\n.details-button {\r\n  padding: 2px 8px;\r\n  background-color: var(--theme-color-dark);\r\n  color: var(--theme-color-page);\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n}\r\n\r\n.details-button:hover {\r\n  background-color: var(--theme-color-darker);\r\n}\r\n\r\n/* 物品详情页面样式 */\r\n.item-detail-container {\r\n  padding: 20px;\r\n}\r\n\r\n:deep(.displayController-item--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 18% 25% 5% 9% 25% 18%;\r\n  column-gap: 0;\r\n  grid-template-rows: auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto auto;\r\n  --itemDetail-left-col-index: 2;\r\n  --itemDetail-right-col-index: 5;\r\n  --itemDetail-unit-col-index: 3;\r\n}\r\n\r\n/* col left - 左列字段 */\r\n:deep(.displayController-item-salesOrder--wrapper) { grid-row: 1; grid-column: var(--itemDetail-left-col-index); }\r\n:deep(.displayController-item-item--wrapper) { grid-row: 2; grid-column: var(--itemDetail-left-col-index); }\r\n:deep(.displayController-item-itemType--wrapper) { grid-row: 3; grid-column: var(--itemDetail-left-col-index); }\r\n/* empty 4th row */\r\n:deep(.displayController-item-originalDelivertyQuantity--wrapper) { grid-row: 5; grid-column: var(--itemDetail-left-col-index); }\r\n:deep(.displayController-item-pickingQuantity--wrapper) { grid-row: 6; grid-column: var(--itemDetail-left-col-index); }\r\n:deep(.displayController-item-deliveryQuantity--wrapper) { grid-row: 7; grid-column: var(--itemDetail-left-col-index); }\r\n:deep(.displayController-item-conversionRate--wrapper) { grid-row: 8; grid-column: var(--itemDetail-left-col-index); }\r\n:deep(.displayController-item-baseUnitDeliveryQuantity--wrapper) { grid-row: 9; grid-column: var(--itemDetail-left-col-index); }\r\n\r\n/* col unit1 - 单位列 */\r\n:deep(.displayController-item-pickingQuantityUnit--wrapper) { grid-row: 6; grid-column: var(--itemDetail-unit-col-index); }\r\n:deep(.displayController-item-deliveryQuantityUnit--wrapper) { grid-row: 7; grid-column: var(--itemDetail-unit-col-index); }\r\n\r\n/* col right - 右列字段 */\r\n:deep(.displayController-item-material--wrapper) { grid-row: 1; grid-column: var(--itemDetail-right-col-index); }\r\n:deep(.displayController-item-grossWeight--wrapper) { grid-row: 2; grid-column: var(--itemDetail-right-col-index); }\r\n:deep(.displayController-item-netWeight--wrapper) { grid-row: 3; grid-column: var(--itemDetail-right-col-index); }\r\n:deep(.displayController-item-volume--wrapper) { grid-row: 4; grid-column: var(--itemDetail-right-col-index); }\r\n:deep(.displayController-item-plant--wrapper) { grid-row: 5; grid-column: var(--itemDetail-right-col-index); }\r\n:deep(.displayController-item-storageLocation--wrapper) { grid-row: 6; grid-column: var(--itemDetail-right-col-index); }\r\n:deep(.displayController-item-storageBin--wrapper) { grid-row: 8; grid-column: var(--itemDetail-right-col-index); }\r\n:deep(.displayController-item-materialAvailability--wrapper) { grid-row: 9; grid-column: var(--itemDetail-right-col-index); }\r\n\r\n:deep(.displayController-item-storageLocationDescription--wrapper) { grid-row: 7; grid-column: var(--itemDetail-right-col-index); }\r\n\r\n.detail-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid var(--theme-color-dark);\r\n}\r\n\r\n.detail-header h2 {\r\n  margin: 0;\r\n  color: var(--theme-color-dark);\r\n}\r\n\r\n.item-info {\r\n  font-weight: bold;\r\n  color: var(--theme-color-dark);\r\n}\r\n\r\n.detail-buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.cancel-button, .save-button {\r\n  padding: 0px 0px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.save-button {\r\n  background-color: var(--theme-color-dark);\r\n  color: white;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: var(--theme-color-darker);\r\n}\r\n\r\n.gi-summary-table-container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.gi-summary-table {\r\n  width: 80%;\r\n  border-collapse: collapse;\r\n  table-layout: fixed;\r\n}\r\n\r\n.gi-summary-table td {\r\n  padding: 10px;\r\n  vertical-align: top;\r\n  text-align: left;\r\n}\r\n\r\n.gi-summary-table .gi-summary-key {\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n  padding-right: 5px;\r\n}\r\n\r\n</style>","import script from \"./PickMain.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./PickMain.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./PickMain.vue?vue&type=style&index=0&id=008d71ff&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-008d71ff\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Main from './PickMain.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Pick',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport Main from './PickMain.vue';\r\n</script>\r\n\r\n<template>\r\n  <Main />\r\n</template>\r\n","import script from \"./Pick.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Pick.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, renderList as _renderList, createSlots as _createSlots, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"delivery-list-section\" }\nconst _hoisted_2 = [\"onClick\"]\n\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport PickMain from './PickMain.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ManageMain',\n  setup(__props, { expose: __expose }) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\n__expose({})\r\n\r\n/**\r\n * @description 控制PickMain应用的显示\r\n */\r\nconst showPickMain = ref(false)\r\n\r\n/**\r\n * @description 控制PickMain应用的显示\r\n */\r\nconst pickingId = ref('')\r\n\r\n/**\r\n * @description 进入详情阶段-跳转到PickMain应用\r\n */\r\nfunction goToPickMain() {\r\n  if (!pickingId.value) {\r\n    return\r\n  }\r\n  showPickMain.value = true\r\n}\r\n\r\n/**\r\n * @description 退出PickMain应用\r\n */\r\nasync function exitPickMain() {\r\n  showPickMain.value = false\r\n  await loadDeliveries()\r\n}\r\n\r\nconst deliveriesTableLength = computed(() => {\r\n  deliveriesTree.forceUpdateKey.value // 强制依赖\r\n  return deliveriesTree.findNodeByPath(['deliveryList'])?.children?.length || 0\r\n})\r\n\r\n/**\r\n * @description 初始阶段-输入查询参数\r\n */\r\nconst initialInputTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','overallStatus','',false,{},[],\"Overall Status:\"),\r\n    cns('string','leaf','createdBy','',false,{},[],\"Created By:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 出库交货单列表树\r\n */\r\nconst deliveriesTree = createTreeFromConfig(\r\n  cns('dict','dict','deliveries',{},false,{hideLabel:true},[\r\n    cns('dynamiclist','list','deliveryList',null,true,{\r\n      hideLabel:true,\r\n      rowProvided: 1,\r\n      childTemplate:cns('dict','dict','delivery',null,false,{},[\r\n        cns('string','leaf','outboundDelivery','',true,{},[],\"Outbound Delivery\"),\r\n        cns('date','leaf','pickingDate','',true,{},[],\"Picking Date\"),\r\n        cns('string','leaf','pickingStatus','',true,{},[],\"Picking Status\"),\r\n        cns('string','leaf','giStatus','',true,{},[],\"GI Status\"),\r\n        cns('string','leaf','pick','',false,{},[],\"Pick\"),\r\n      ]),\r\n    },[],\"Deliveries\")\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 获取出库交货单列表\r\n */\r\nasync function loadDeliveries() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/get-deliveries-summary`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialInputTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('获取出库交货单失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  \r\n  if(data.success && data.data.deliveries) {\r\n    deliveriesTree.forceSetValue({deliveryList: data.data.deliveries})\r\n    deliveriesTree.forceUpdate()\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 处理Go按钮点击事件\r\n */\r\nasync function handleGoClick() {\r\n  const success = await loadDeliveries()\r\n}\r\n\r\n/**\r\n * @description 处理Pick按钮点击事件 - 跳转到PickMain应用\r\n * @todo 传id到应用内\r\n */\r\nasync function handlePickClick(_node: VarNode, path: string[], tree: VarTree) {\r\n  console.log('path:', path)\r\n  const l = path.length\r\n  if (!(l>1 && path[l-1]=='pick')) {\r\n    return\r\n  }\r\n  const node = tree.findNodeByPath(path.slice(0, l-1))!\r\n\r\n  pickingId.value = node.findNodeByPath(['outboundDelivery'])?.getValue() as string\r\n\r\n  // 显示PickMain应用\r\n  goToPickMain()\r\n}\r\n\r\n/**\r\n * @description Post选中的GI记录\r\n */\r\nasync function handlePostGIs() {\r\n  const selectedNodes = deliveriesTree.findNodeByPath(['deliveryList'])?.getSelectedChildren() || []\r\n  const deliveryIds = selectedNodes.map(node => node.findNodeByPath(['outboundDelivery'])?.getValue() as string)\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/post-gis-by-id`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ deliveryIds })\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('Post GIs失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success && data.data && data.data.breakdowns) {\r\n    // 使用breakdown数据结构更新树\r\n    if (data.data.breakdowns.length > 0) {\r\n      const selectedNodes = deliveriesTree.findNodeByPath(['deliveryList'])?.getSelectedChildren() || []\r\n      selectedNodes.forEach((node, index) => {\r\n        node.forceSetValue(data.data.breakdowns[index])\r\n      })\r\n      // 清空选择\r\n      deliveriesTree.findNodeByPath(['deliveryList'])?.children.forEach(node => {\r\n        node.setSelection(false)\r\n      })\r\n\r\n      deliveriesTree.forceUpdate()\r\n\r\n      appContentRef.value.footerMessage = 'Post GIs成功'\r\n    }\r\n  } else {\r\n    appContentRef.value.footerMessage = 'Post GIs失败: ' + (data.message || '未知错误')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {    \r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  if (currentStage === 2) {\r\n    return true // 允许从详情页面返回\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  return false // 阻止自动切换，使用自定义按钮控制\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (showPickMain.value)\n    ? (_openBlock(), _createBlock(PickMain, {\n        key: 0,\n        pickingId: pickingId.value\n      }, {\n        \"extra-bottom-elements\": _withCtx(() => [\n          _createElementVNode(\"button\", {\n            class: \"cancel-button\",\n            onClick: exitPickMain\n          }, \"Back to Manage\")\n        ]),\n        _: 1\n      }, 8, [\"pickingId\"]))\n    : (_openBlock(), _createBlock(AppContent, {\n        key: 1,\n        stages: ['manageDeliveries'],\n        \"before-next\": handleExecute,\n        \"before-prev\": handleCancel,\n        \"footer-config\": [\r\n      { nextText:'/hide' },\r\n    ],\n        ref_key: \"appContentRef\",\n        ref: appContentRef\n      }, {\n        [`stage-manageDeliveries`]: _withCtx(() => [\n          _createVNode(VarBox, { tree: _unref(initialInputTree) }, null, 8, [\"tree\"]),\n          _createElementVNode(\"div\", { class: \"stage-buttons\" }, [\n            _createElementVNode(\"button\", {\n              class: \"go-button\",\n              onClick: handleGoClick\n            }, \"Go\")\n          ]),\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createVNode(VarBox, { tree: _unref(deliveriesTree) }, _createSlots({ _: 2 }, [\n              _renderList(deliveriesTableLength.value, (index) => {\n                return {\n                  name: `deliveries-deliveryList-${index-1}-pick--wrapper`,\n                  fn: _withCtx(({ currentNode, allProps }) => [\n                    _createElementVNode(\"button\", {\n                      class: \"pick-button\",\n                      onClick: ($event: any) => (handlePickClick(currentNode, allProps.nodePath, allProps.varTree))\n                    }, \" Pick \", 8, _hoisted_2)\n                  ])\n                }\n              })\n            ]), 1032, [\"tree\"])\n          ])\n        ]),\n        [`footer-content-right`]: _withCtx(() => [\n          _createTextVNode(_toDisplayString(appContentRef.value?.getCurrentStageName()) + \" \", 1),\n          (appContentRef.value?.currentStage == 0)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                class: \"nav-button next-button\",\n                onClick: handlePostGIs\n              }, \" Post GIs \"))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _: 2\n      }, 1536))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport PickMain from './PickMain.vue'\r\nimport {createTreeFromConfig, createNodeFromConfig, cns, VarTree, VarNode, NodeStructure, isNodeStructure, VarNodeValue} from '@/utils/VarTree';\r\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\ndefineExpose({})\r\n\r\n/**\r\n * @description 控制PickMain应用的显示\r\n */\r\nconst showPickMain = ref(false)\r\n\r\n/**\r\n * @description 控制PickMain应用的显示\r\n */\r\nconst pickingId = ref('')\r\n\r\n/**\r\n * @description 进入详情阶段-跳转到PickMain应用\r\n */\r\nfunction goToPickMain() {\r\n  if (!pickingId.value) {\r\n    return\r\n  }\r\n  showPickMain.value = true\r\n}\r\n\r\n/**\r\n * @description 退出PickMain应用\r\n */\r\nasync function exitPickMain() {\r\n  showPickMain.value = false\r\n  await loadDeliveries()\r\n}\r\n\r\nconst deliveriesTableLength = computed(() => {\r\n  deliveriesTree.forceUpdateKey.value // 强制依赖\r\n  return deliveriesTree.findNodeByPath(['deliveryList'])?.children?.length || 0\r\n})\r\n\r\n/**\r\n * @description 初始阶段-输入查询参数\r\n */\r\nconst initialInputTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','overallStatus','',false,{},[],\"Overall Status:\"),\r\n    cns('string','leaf','createdBy','',false,{},[],\"Created By:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 出库交货单列表树\r\n */\r\nconst deliveriesTree = createTreeFromConfig(\r\n  cns('dict','dict','deliveries',{},false,{hideLabel:true},[\r\n    cns('dynamiclist','list','deliveryList',null,true,{\r\n      hideLabel:true,\r\n      rowProvided: 1,\r\n      childTemplate:cns('dict','dict','delivery',null,false,{},[\r\n        cns('string','leaf','outboundDelivery','',true,{},[],\"Outbound Delivery\"),\r\n        cns('date','leaf','pickingDate','',true,{},[],\"Picking Date\"),\r\n        cns('string','leaf','pickingStatus','',true,{},[],\"Picking Status\"),\r\n        cns('string','leaf','giStatus','',true,{},[],\"GI Status\"),\r\n        cns('string','leaf','pick','',false,{},[],\"Pick\"),\r\n      ]),\r\n    },[],\"Deliveries\")\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 获取出库交货单列表\r\n */\r\nasync function loadDeliveries() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/get-deliveries-summary`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialInputTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('获取出库交货单失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  \r\n  if(data.success && data.data.deliveries) {\r\n    deliveriesTree.forceSetValue({deliveryList: data.data.deliveries})\r\n    deliveriesTree.forceUpdate()\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 处理Go按钮点击事件\r\n */\r\nasync function handleGoClick() {\r\n  const success = await loadDeliveries()\r\n}\r\n\r\n/**\r\n * @description 处理Pick按钮点击事件 - 跳转到PickMain应用\r\n * @todo 传id到应用内\r\n */\r\nasync function handlePickClick(_node: VarNode, path: string[], tree: VarTree) {\r\n  console.log('path:', path)\r\n  const l = path.length\r\n  if (!(l>1 && path[l-1]=='pick')) {\r\n    return\r\n  }\r\n  const node = tree.findNodeByPath(path.slice(0, l-1))!\r\n\r\n  pickingId.value = node.findNodeByPath(['outboundDelivery'])?.getValue() as string\r\n\r\n  // 显示PickMain应用\r\n  goToPickMain()\r\n}\r\n\r\n/**\r\n * @description Post选中的GI记录\r\n */\r\nasync function handlePostGIs() {\r\n  const selectedNodes = deliveriesTree.findNodeByPath(['deliveryList'])?.getSelectedChildren() || []\r\n  const deliveryIds = selectedNodes.map(node => node.findNodeByPath(['outboundDelivery'])?.getValue() as string)\r\n\r\n  const data = await fetch(`${API_BASE_URL}/api/app/outbound-delivery/post-gis-by-id`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ deliveryIds })\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('Post GIs失败:', error)\r\n    return { success: false }\r\n  })\r\n\r\n  console.log('返回的数据', data)\r\n\r\n  if (data.success && data.data && data.data.breakdowns) {\r\n    // 使用breakdown数据结构更新树\r\n    if (data.data.breakdowns.length > 0) {\r\n      const selectedNodes = deliveriesTree.findNodeByPath(['deliveryList'])?.getSelectedChildren() || []\r\n      selectedNodes.forEach((node, index) => {\r\n        node.forceSetValue(data.data.breakdowns[index])\r\n      })\r\n      // 清空选择\r\n      deliveriesTree.findNodeByPath(['deliveryList'])?.children.forEach(node => {\r\n        node.setSelection(false)\r\n      })\r\n\r\n      deliveriesTree.forceUpdate()\r\n\r\n      appContentRef.value.footerMessage = 'Post GIs成功'\r\n    }\r\n  } else {\r\n    appContentRef.value.footerMessage = 'Post GIs失败: ' + (data.message || '未知错误')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {    \r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  if (currentStage === 2) {\r\n    return true // 允许从详情页面返回\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  return false // 阻止自动切换，使用自定义按钮控制\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <!-- 显示PickMain应用 -->\r\n  <PickMain\r\n    v-if=\"showPickMain\"\r\n    :pickingId = \"pickingId\"\r\n  >\r\n    <template #extra-bottom-elements>\r\n      <button class=\"cancel-button\" @click=\"exitPickMain\">Back to Manage</button>\r\n    </template>\r\n  </PickMain>\r\n\r\n  <!-- 显示ManageMain应用 -->\r\n  <AppContent\r\n    v-else\r\n    :stages=\"['manageDeliveries']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel\"\r\n    :footer-config=\"[\r\n      { nextText:'/hide' },\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <template #[`stage-manageDeliveries`]>\r\n      <!-- 输入参数部分 -->\r\n      <VarBox\r\n        :tree=\"initialInputTree\"\r\n      ></VarBox>\r\n      <div class=\"stage-buttons\">\r\n        <button class=\"go-button\" @click=\"handleGoClick\">Go</button>\r\n      </div>\r\n\r\n      <!-- 交货单列表部分 -->\r\n      <div class=\"delivery-list-section\">\r\n        <VarBox\r\n          :tree=\"deliveriesTree\"\r\n        >\r\n          <template v-for=\"index in deliveriesTableLength\" #[`deliveries-deliveryList-${index-1}-pick--wrapper`]=\"{ currentNode, allProps }\">\r\n            <button\r\n              class=\"pick-button\"\r\n              @click=\"handlePickClick(currentNode, allProps.nodePath, allProps.varTree)\"\r\n            >\r\n              Pick\r\n            </button>\r\n          </template>\r\n        </VarBox>\r\n      </div>\r\n    </template>\r\n\r\n    <template #[`footer-content-right`]>\r\n      {{ appContentRef?.getCurrentStageName() }}\r\n      <button\r\n        v-if=\"appContentRef?.currentStage == 0\"\r\n        class = \"nav-button next-button\"\r\n        @click=\"handlePostGIs\"\r\n      >\r\n        Post GIs\r\n      </button>\r\n    </template>\r\n\r\n  </AppContent>\r\n</template>\r\n\r\n<style scoped>\r\n.stage-buttons {\r\n  display: flex;\r\n  justify-content: right;\r\n  margin-top: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.go-button {\r\n  padding: 4px 10px;\r\n  background-color: var(--theme-color-dark);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.pick-button:hover,\r\n.go-button:hover {\r\n  background-color: var(--theme-color-darker);\r\n}\r\n.pick-button:active,\r\n.go-button:active {\r\n  background-color: var(--theme-color-light);\r\n}\r\n\r\n.delivery-list-section {\r\n  margin-top: 30px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.pick-button {\r\n  padding: 2px 12px;\r\n  width: 50%;\r\n  background-color: var(--theme-color-dark);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n}\r\n\r\n.save-button {\r\n  padding: 8px 20px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.cancel-button {\r\n  padding: 8px 20px;\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n/* 详情页面样式 */\r\n.delivery-detail-container {\r\n  padding: 20px;\r\n}\r\n\r\n.detail-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #e0e0e0;\r\n}\r\n\r\n.detail-header h2 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n}\r\n\r\n.delivery-id {\r\n  font-size: 16px;\r\n  color: #666;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n","import script from \"./ManageMain.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ManageMain.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ManageMain.vue?vue&type=style&index=0&id=413af2a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-413af2a0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Main from './ManageMain.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Manage',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport Main from './ManageMain.vue';\r\n</script>\r\n\r\n<template>\r\n  <Main />\r\n</template>\r\n","import script from \"./Manage.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = [\"disabled\"]\n\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, cns, VarNodeValue, VarNode} from '@/utils/VarTree';\r\nimport {\r\n  billingDocumentIdSearch,\r\n  soldToPartySearch,\r\n} from '@/utils/searchMethods'\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\n\r\ntype State = 'create' | 'change' | 'display'\r\n/**\r\n * @description 应用模式-创建/修改/查看\r\n */\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Main',\n  setup(__props, { expose: __expose }) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\nconst state: Ref<State> = ref('create')\r\nconst onCreateState = computed(() => state.value === 'create')\r\nconst onChangeState = computed(() => state.value === 'change')\r\nconst onDisplayState = computed(() => state.value === 'display')\r\nfunction appToState(newState: State) {\r\n  state.value = newState\r\n  let readonly = newState === 'display'\r\n  writableTrees.forEach(tree => {\r\n    tree.root!.readonly = readonly\r\n  })\r\n  if (appContentRef.value) {\r\n    appContentRef.value.forceUpdate()\r\n  }\r\n}\r\n\r\nconst initializeStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Continue'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Execute'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Execute'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStagePrevButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Cancel'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Create'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Save'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Switch to Change'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\n__expose({\r\n  appToState,\r\n})\r\n\r\n/**\r\n * @description 初始阶段-创建-开票到期清单查询\r\n */\r\nconst initialCreationTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('dict','dict','billingDueList',{},false,{hideLabel:true},[\r\n      cns('date','leaf','billingDate','',false,{},[],\"Billing Date:\"),\r\n      cns('string','leaf','soldToParty','',false,{searchMethods:soldToPartySearch},[],\"Sold-To Party:\"),\r\n    ]),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 初始阶段-查询/修改-搜索开票凭证\r\n */\r\nconst initialSearchTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','billingDocumentId','',false,{searchMethods:billingDocumentIdSearch},[],\"Billing Document:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 主信息-开票凭证信息主树\r\n */\r\nconst billingDataTree = createTreeFromConfig(\r\n  cns('dict','dict','billingData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n    ]),\r\n    cns('dict','dict','basicInfo',{},false,{\r\n      hideLabel:true,\r\n      hideList:['type','netValueUnit']\r\n    },[\r\n      cns('selection','leaf','type','',false,{options:[\"Invoice\"], hideLabel:true},[],\" \"),\r\n      cns('string','leaf','id','',false,{},[],\" \"),\r\n      cns('string','leaf','netValue','',false,{},[],\"Net Value: \"),\r\n      cns('string','leaf','netValueUnit','',false,{hideLabel:true},[],\" \"),\r\n      cns('string','leaf','payer','',false,{},[],\"Payer: \"),\r\n      cns('date','leaf','billingDate','',false,{},[],\"Billing Date: \"),\r\n    ]),\r\n    cns('dict','dict','itemOverview',{},false,{},[\r\n      // items节点将通过ItemConditionKit动态创建\r\n    ],'Item Overview')\r\n  ])\r\n)\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/billing/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  billingDataTree,\r\n  ['itemOverview', 'items']\r\n)\r\n\r\n/**\r\n * @description 开票凭证的可写树，用于显示状态和编辑状态的切换\r\n */\r\nconst writableTrees = [billingDataTree]\r\n\r\nconst initializeResult = ref(false)\r\n/**\r\n * @description 创建-初始化开票到期清单\r\n */\r\nasync function initializeByCreation() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/billing/initialize`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialCreationTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  initializeResult.value = data.success\r\n  if(!data.success) return false\r\n  \r\n  if(data.data.content) {\r\n    billingDataTree.forceSetValue(data.data.content)\r\n  }\r\n  if (initializeResult.value) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 查询/修改-初始化\r\n */\r\nasync function initializeByGet() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/billing/get`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialSearchTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n  if(!data.data.content) {\r\n    return false\r\n  }\r\n  const billingData: VarNodeValue = data.data.content\r\n  billingDataTree.forceSetValue(billingData)\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的after-next钩子\r\n */\r\nasync function handleAfterNext(_currentStage: number, _targetStage: number) {\r\n}\r\n\r\n/**\r\n * @description 状态管理的after-prev钩子\r\n */\r\nasync function handleAfterPrev(_currentStage: number, _targetStage: number) {\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, _targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {    \r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  if (currentStage === 0) {\r\n    if (onCreateState.value) {\r\n      return await initializeByCreation()\r\n    }\r\n    if (onChangeState.value || onDisplayState.value) {\r\n      const r = await initializeByGet()\r\n      console.log('初始化结果',r)\r\n      return r\r\n    }\r\n    return false\r\n  }\r\n\r\n  if (currentStage === 1) {\r\n    if (onDisplayState.value) {\r\n      console.log('切换到修改状态')\r\n      appToState('change')\r\n      return false\r\n    }\r\n    if (onCreateState.value || onChangeState.value) {\r\n      console.log(billingDataTree.getValue())\r\n      // 向后端发送stage 1的所有树，创建/保存开票凭证\r\n      const data = await fetch(`${API_BASE_URL}/api/app/billing/edit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(billingDataTree.getValue())\r\n      }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n      }).catch(error => {\r\n        console.error('创建开票凭证失败:', error)\r\n        return { success: false }\r\n      })\r\n      console.log('返回的数据',data)\r\n      // footer\r\n      if (data.success){\r\n        appContentRef.value.footerMessage = data.data.message\r\n        if (data.data.content) {\r\n          billingDataTree.forceSetValue(data.data.content)\r\n        }\r\n        appToState('display')\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * ItemConditionDetail 事件处理函数\r\n */\r\nfunction handleItemConditionValidationSuccess(items: VarNode[]) {\r\n  console.log('Item condition validation success:', items)\r\n}\r\n\r\nfunction handleItemConditionValidationFailed(items: VarNode[]) {\r\n  console.log('Item condition validation failed:', items)\r\n}\r\n\r\nfunction handleItemConditionSave() {\r\n  console.log('Item condition save')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到information阶段\r\n}\r\n\r\nfunction handleItemConditionCancel() {\r\n  console.log('Item condition cancel')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到information阶段\r\n}\r\n\r\n/**\r\n * 处理 Items Table 的按钮点击事件（使用ItemConditionKit）\r\n */\r\nasync function handleItemsTableClick() {\r\n  const itemsNode = billingDataTree.findNodeByPath(['itemOverview', 'items'])!;\r\n  const selectedChildren = [...itemsNode.getSelectedChildren()]; // 获取所有选中的子节点\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 检查是否有未验证的items\r\n    const unvalidatedItems = selectedChildren.filter(item =>\r\n      item.config.data?.validation !== true\r\n    );\r\n\r\n    if (unvalidatedItems.length > 0) {\r\n      console.log('发现未验证的items，正在验证...');\r\n      // 这里可以添加验证逻辑，暂时跳过\r\n    }\r\n\r\n    // 切换到详情页面\r\n    appContentRef.value.goToStage(2); // Stage 2 是itemCondition\r\n  } else {\r\n    console.log('没有选中任何物品。');\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(AppContent, {\n    stages: ['initialScreen','information','itemCondition'],\n    \"before-next\": handleExecute,\n    \"before-prev\": handleCancel,\n    \"after-next\": handleAfterNext,\n    \"after-prev\": handleAfterPrev,\n    \"footer-config\": [\r\n      { nextText:initializeStageNextButtonLabel.value },\r\n      { prevText:informationStagePrevButtonLabel.value, nextText:informationStageNextButtonLabel.value },\r\n      { prevText:'Back', nextText:'/hide' },\r\n    ],\n    ref_key: \"appContentRef\",\n    ref: appContentRef\n  }, {\n    [`stage-initialScreen`]: _withCtx(() => [\n      (onCreateState.value)\n        ? (_openBlock(), _createBlock(VarBox, {\n            key: 0,\n            tree: _unref(initialCreationTree)\n          }, null, 8, [\"tree\"]))\n        : _createCommentVNode(\"\", true),\n      (onDisplayState.value || onChangeState.value)\n        ? (_openBlock(), _createBlock(VarBox, {\n            key: 1,\n            tree: _unref(initialSearchTree)\n          }, null, 8, [\"tree\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    [`stage-information`]: _withCtx(() => [\n      _createVNode(VarBox, { tree: _unref(billingDataTree) }, {\n        [`billingData-basicInfo-netValue--extra`]: _withCtx(() => [\n          _createVNode(VarBox, {\n            tree: _unref(billingDataTree),\n            path: ['basicInfo','netValueUnit']\n          }, null, 8, [\"tree\"])\n        ]),\n        [`billingData-basicInfo-id--var-label`]: _withCtx(() => [\n          _createVNode(VarBox, {\n            tree: _unref(billingDataTree),\n            path: ['basicInfo','type']\n          }, null, 8, [\"tree\"])\n        ]),\n        [`billingData-itemOverview-items--extra-buttons`]: _withCtx(() => [\n          _createElementVNode(\"button\", {\n            class: \"execute-button table-extra-button\",\n            onClick: handleItemsTableClick,\n            disabled: _unref(billingDataTree).findNodeByPath(['itemOverview','items'])?.getSelectedChildren().length === 0\n          }, \" ... \", 8, _hoisted_1)\n        ]),\n        _: 2\n      }, 1032, [\"tree\"])\n    ]),\n    \"stage-itemCondition\": _withCtx(() => [\n      _createVNode(ItemConditionDetail, {\n        kit: _unref(itemConditionKit),\n        config: {\r\n          navigationLabels: {\r\n            cancel: 'Cancel',\r\n            save: 'Save',\r\n            previous: '← Previous',\r\n            next: 'Next →'\r\n          }\r\n        },\n        onValidationSuccess: handleItemConditionValidationSuccess,\n        onValidationFailed: handleItemConditionValidationFailed,\n        onSave: handleItemConditionSave,\n        onCancel: handleItemConditionCancel\n      }, {\n        \"footer-content-right\": _withCtx(() => [\n          _renderSlot(_ctx.$slots, \"footer-content-right\")\n        ]),\n        _: 3\n      }, 8, [\"kit\"])\n    ]),\n    [`footer-content-right`]: _withCtx(() => [\n      _createTextVNode(_toDisplayString(appContentRef.value?.getCurrentStageName()), 1)\n    ]),\n    _: 2\n  }, 1032, [\"footer-config\"]))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport {ref, Ref, computed, onMounted} from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport {createTreeFromConfig, cns, VarNodeValue, VarNode} from '@/utils/VarTree';\r\nimport {\r\n  billingDocumentIdSearch,\r\n  soldToPartySearch,\r\n} from '@/utils/searchMethods'\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\n\r\nlet API_BASE_URL = window.API_BASE_URL || ''\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || ''\r\n})\r\nconst appContentRef = ref(null) as any\r\n\r\ntype State = 'create' | 'change' | 'display'\r\n/**\r\n * @description 应用模式-创建/修改/查看\r\n */\r\nconst state: Ref<State> = ref('create')\r\nconst onCreateState = computed(() => state.value === 'create')\r\nconst onChangeState = computed(() => state.value === 'change')\r\nconst onDisplayState = computed(() => state.value === 'display')\r\nfunction appToState(newState: State) {\r\n  state.value = newState\r\n  let readonly = newState === 'display'\r\n  writableTrees.forEach(tree => {\r\n    tree.root!.readonly = readonly\r\n  })\r\n  if (appContentRef.value) {\r\n    appContentRef.value.forceUpdate()\r\n  }\r\n}\r\n\r\nconst initializeStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Continue'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Execute'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Execute'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStagePrevButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Cancel'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Cancel'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\nconst informationStageNextButtonLabel = computed(() => {\r\n  if (onCreateState.value) {\r\n    return 'Create'\r\n  }\r\n  if (onChangeState.value) {\r\n    return 'Save'\r\n  }\r\n  if (onDisplayState.value) {\r\n    return 'Switch to Change'\r\n  }\r\n  return '/hide'\r\n})\r\n\r\ndefineExpose({\r\n  appToState,\r\n})\r\n\r\n/**\r\n * @description 初始阶段-创建-开票到期清单查询\r\n */\r\nconst initialCreationTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('dict','dict','billingDueList',{},false,{hideLabel:true},[\r\n      cns('date','leaf','billingDate','',false,{},[],\"Billing Date:\"),\r\n      cns('string','leaf','soldToParty','',false,{searchMethods:soldToPartySearch},[],\"Sold-To Party:\"),\r\n    ]),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 初始阶段-查询/修改-搜索开票凭证\r\n */\r\nconst initialSearchTree = createTreeFromConfig(\r\n  cns('dict','dict','initialScreen',{},false,{hideLabel:true},[\r\n    cns('string','leaf','billingDocumentId','',false,{searchMethods:billingDocumentIdSearch},[],\"Billing Document:\"),\r\n  ])\r\n)\r\n\r\n/**\r\n * @description 主信息-开票凭证信息主树\r\n */\r\nconst billingDataTree = createTreeFromConfig(\r\n  cns('dict','dict','billingData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','meta',{},false,{hideSelf:true},[\r\n      cns('string','leaf','id','',false,{},[]),\r\n    ]),\r\n    cns('dict','dict','basicInfo',{},false,{\r\n      hideLabel:true,\r\n      hideList:['type','netValueUnit']\r\n    },[\r\n      cns('selection','leaf','type','',false,{options:[\"Invoice\"], hideLabel:true},[],\" \"),\r\n      cns('string','leaf','id','',false,{},[],\" \"),\r\n      cns('string','leaf','netValue','',false,{},[],\"Net Value: \"),\r\n      cns('string','leaf','netValueUnit','',false,{hideLabel:true},[],\" \"),\r\n      cns('string','leaf','payer','',false,{},[],\"Payer: \"),\r\n      cns('date','leaf','billingDate','',false,{},[],\"Billing Date: \"),\r\n    ]),\r\n    cns('dict','dict','itemOverview',{},false,{},[\r\n      // items节点将通过ItemConditionKit动态创建\r\n    ],'Item Overview')\r\n  ])\r\n)\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/billing/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  billingDataTree,\r\n  ['itemOverview', 'items']\r\n)\r\n\r\n/**\r\n * @description 开票凭证的可写树，用于显示状态和编辑状态的切换\r\n */\r\nconst writableTrees = [billingDataTree]\r\n\r\nconst initializeResult = ref(false)\r\n/**\r\n * @description 创建-初始化开票到期清单\r\n */\r\nasync function initializeByCreation() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/billing/initialize`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialCreationTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  initializeResult.value = data.success\r\n  if(!data.success) return false\r\n  \r\n  if(data.data.content) {\r\n    billingDataTree.forceSetValue(data.data.content)\r\n  }\r\n  if (initializeResult.value) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @description 查询/修改-初始化\r\n */\r\nasync function initializeByGet() {\r\n  const data = await fetch(`${API_BASE_URL}/api/app/billing/get`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(initialSearchTree.getValue())\r\n  }).then(response => {\r\n    console.log('正常返回', response)\r\n    return response.json()\r\n  }).catch(error => {\r\n    console.error('申请失败:', error)\r\n    return { success: false }\r\n  })\r\n  console.log('返回的数据',data)\r\n  if(!data.success) return false\r\n  if(!data.data.content) {\r\n    return false\r\n  }\r\n  const billingData: VarNodeValue = data.data.content\r\n  billingDataTree.forceSetValue(billingData)\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的after-next钩子\r\n */\r\nasync function handleAfterNext(_currentStage: number, _targetStage: number) {\r\n}\r\n\r\n/**\r\n * @description 状态管理的after-prev钩子\r\n */\r\nasync function handleAfterPrev(_currentStage: number, _targetStage: number) {\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-prev钩子\r\n */\r\nasync function handleCancel(currentStage: number, _targetStage: number) {\r\n  if (currentStage === 1) {\r\n    const confirmValue = confirm('Cancel?')\r\n    if(confirmValue) {    \r\n      appContentRef.value.footerMessage = ''\r\n    }\r\n    return confirmValue\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * @description 状态管理的before-next钩子\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('try: stage change:',currentStage,'->',targetStage)\r\n  if (currentStage === 0) {\r\n    if (onCreateState.value) {\r\n      return await initializeByCreation()\r\n    }\r\n    if (onChangeState.value || onDisplayState.value) {\r\n      const r = await initializeByGet()\r\n      console.log('初始化结果',r)\r\n      return r\r\n    }\r\n    return false\r\n  }\r\n\r\n  if (currentStage === 1) {\r\n    if (onDisplayState.value) {\r\n      console.log('切换到修改状态')\r\n      appToState('change')\r\n      return false\r\n    }\r\n    if (onCreateState.value || onChangeState.value) {\r\n      console.log(billingDataTree.getValue())\r\n      // 向后端发送stage 1的所有树，创建/保存开票凭证\r\n      const data = await fetch(`${API_BASE_URL}/api/app/billing/edit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(billingDataTree.getValue())\r\n      }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n      }).catch(error => {\r\n        console.error('创建开票凭证失败:', error)\r\n        return { success: false }\r\n      })\r\n      console.log('返回的数据',data)\r\n      // footer\r\n      if (data.success){\r\n        appContentRef.value.footerMessage = data.data.message\r\n        if (data.data.content) {\r\n          billingDataTree.forceSetValue(data.data.content)\r\n        }\r\n        appToState('display')\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * ItemConditionDetail 事件处理函数\r\n */\r\nfunction handleItemConditionValidationSuccess(items: VarNode[]) {\r\n  console.log('Item condition validation success:', items)\r\n}\r\n\r\nfunction handleItemConditionValidationFailed(items: VarNode[]) {\r\n  console.log('Item condition validation failed:', items)\r\n}\r\n\r\nfunction handleItemConditionSave() {\r\n  console.log('Item condition save')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到information阶段\r\n}\r\n\r\nfunction handleItemConditionCancel() {\r\n  console.log('Item condition cancel')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到information阶段\r\n}\r\n\r\n/**\r\n * 处理 Items Table 的按钮点击事件（使用ItemConditionKit）\r\n */\r\nasync function handleItemsTableClick() {\r\n  const itemsNode = billingDataTree.findNodeByPath(['itemOverview', 'items'])!;\r\n  const selectedChildren = [...itemsNode.getSelectedChildren()]; // 获取所有选中的子节点\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 检查是否有未验证的items\r\n    const unvalidatedItems = selectedChildren.filter(item =>\r\n      item.config.data?.validation !== true\r\n    );\r\n\r\n    if (unvalidatedItems.length > 0) {\r\n      console.log('发现未验证的items，正在验证...');\r\n      // 这里可以添加验证逻辑，暂时跳过\r\n    }\r\n\r\n    // 切换到详情页面\r\n    appContentRef.value.goToStage(2); // Stage 2 是itemCondition\r\n  } else {\r\n    console.log('没有选中任何物品。');\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <AppContent\r\n    :stages=\"['initialScreen','information','itemCondition']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel\"\r\n    :after-next=\"handleAfterNext\"\r\n    :after-prev=\"handleAfterPrev\"\r\n    :footer-config=\"[\r\n      { nextText:initializeStageNextButtonLabel },\r\n      { prevText:informationStagePrevButtonLabel, nextText:informationStageNextButtonLabel },\r\n      { prevText:'Back', nextText:'/hide' },\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <template #[`stage-initialScreen`]>\r\n      <VarBox\r\n        :tree=\"initialCreationTree\"\r\n        v-if=\"onCreateState\"\r\n      ></VarBox>\r\n      <VarBox\r\n        :tree=\"initialSearchTree\"\r\n        v-if=\"onDisplayState || onChangeState\"\r\n      ></VarBox>\r\n    </template>\r\n    <template #[`stage-information`]>\r\n      <VarBox\r\n        :tree=\"billingDataTree\"\r\n      >\r\n        <template #[`billingData-basicInfo-netValue--extra`]>\r\n          <VarBox\r\n            :tree=\"billingDataTree\"\r\n            :path=\"['basicInfo','netValueUnit']\"\r\n          ></VarBox>\r\n        </template>\r\n        <template #[`billingData-basicInfo-id--var-label`]>\r\n          <VarBox\r\n            :tree=\"billingDataTree\"\r\n            :path=\"['basicInfo','type']\"\r\n          ></VarBox>\r\n        </template>\r\n        <template #[`billingData-itemOverview-items--extra-buttons`]>\r\n          <button\r\n            class=\"execute-button table-extra-button\"\r\n            @click=\"handleItemsTableClick\"\r\n            :disabled=\"billingDataTree.findNodeByPath(['itemOverview','items'])?.getSelectedChildren().length === 0\"\r\n          >\r\n            ...\r\n          </button>\r\n        </template>\r\n      </VarBox>\r\n    </template>\r\n\r\n    <template #stage-itemCondition>\r\n      <ItemConditionDetail\r\n        :kit=\"itemConditionKit\"\r\n        :config=\"{\r\n          navigationLabels: {\r\n            cancel: 'Cancel',\r\n            save: 'Save',\r\n            previous: '← Previous',\r\n            next: 'Next →'\r\n          }\r\n        }\"\r\n        @validation-success=\"handleItemConditionValidationSuccess\"\r\n        @validation-failed=\"handleItemConditionValidationFailed\"\r\n        @save=\"handleItemConditionSave\"\r\n        @cancel=\"handleItemConditionCancel\"\r\n      >\r\n        <!-- teleport目标插槽 -->\r\n        <template #footer-content-right>\r\n          <slot name=\"footer-content-right\"></slot>\r\n        </template>\r\n      </ItemConditionDetail>\r\n    </template>\r\n\r\n    <template #[`footer-content-right`]>\r\n      {{ appContentRef?.getCurrentStageName() }}\r\n    </template>\r\n\r\n  </AppContent>\r\n</template>\r\n\r\n<style scoped>\r\n:deep(.billingData-basicInfo--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 1% 0% 25% 0% 45% 5% 15%;\r\n  grid-template-rows: auto auto auto auto;\r\n  --first-col: 2 / 4;\r\n  --first-col-left: 2;\r\n  --first-col-right: 3;\r\n  --second-col: 5;\r\n  --second-col-after: 6;\r\n}\r\n\r\n:deep(.billingData-basicInfo-type--leaf-node) {\r\n  display: flex;\r\n}\r\n:deep(.billingData-basicInfo-id--wrapper) {\r\n  grid-column: var(--first-col-right);\r\n  grid-row: 1;\r\n}\r\n:deep(.billingData-basicInfo-payer--wrapper) {\r\n  grid-column: var(--first-col-right);\r\n  grid-row: 2;\r\n}\r\n:deep(.billingData-basicInfo-billingDate--wrapper) {\r\n  grid-column: var(--first-col-right);\r\n  grid-row: 3;\r\n}\r\n:deep(.billingData-basicInfo-netValue--wrapper) {\r\n  grid-column: var(--second-col);\r\n  grid-row: 1;\r\n}\r\n\r\n:deep(.billingData-basicInfo-netValue--extra) {\r\n  flex: 1\r\n}\r\n</style>","import script from \"./Main.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Main.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Main.vue?vue&type=style&index=0&id=bf06d8f2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bf06d8f2\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onMounted, ref } from 'vue'\r\nimport Main from './Main.vue'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Create',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any\r\n\r\nonMounted(() => {\r\n  if (mainRef.value) {\r\n    mainRef.value.appToState('create')\r\n  }\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport { onMounted, ref } from 'vue'\r\nimport Main from './Main.vue'\r\n\r\nconst mainRef = ref(null) as any\r\n\r\nonMounted(() => {\r\n  if (mainRef.value) {\r\n    mainRef.value.appToState('create')\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main ref=\"mainRef\" />\r\n</template>","import script from \"./Create.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Create.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onMounted, ref } from 'vue'\r\nimport Main from './Main.vue'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Display',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any\r\n\r\nonMounted(() => {\r\n  if (mainRef.value) {\r\n    mainRef.value.appToState('display')\r\n  }\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport { onMounted, ref } from 'vue'\r\nimport Main from './Main.vue'\r\n\r\nconst mainRef = ref(null) as any\r\n\r\nonMounted(() => {\r\n  if (mainRef.value) {\r\n    mainRef.value.appToState('display')\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main ref=\"mainRef\" />\r\n</template>","import script from \"./Display.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Display.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onMounted, ref } from 'vue'\r\nimport Main from './Main.vue'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Change',\n  setup(__props) {\n\r\nconst mainRef = ref(null) as any\r\n\r\nonMounted(() => {\r\n  if (mainRef.value) {\r\n    mainRef.value.appToState('change')\r\n  }\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Main, {\n    ref_key: \"mainRef\",\n    ref: mainRef\n  }, null, 512))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport { onMounted, ref } from 'vue'\r\nimport Main from './Main.vue'\r\n\r\nconst mainRef = ref(null) as any\r\n\r\nonMounted(() => {\r\n  if (mainRef.value) {\r\n    mainRef.value.appToState('change')\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Main ref=\"mainRef\" />\r\n</template>","import script from \"./Change.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Change.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div style=\"text-align: center; margin-top: 50px;\">\r\n        <h2>我们也没有办法</h2>\r\n        <p>您重新注册一个吧！</p>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\" setup></script>","import { render } from \"./GetMyPassBack.vue?vue&type=template&id=7065ed49\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withCtx as _withCtx, renderSlot as _renderSlot, createVNode as _createVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"manageSalesQuotations\" }\nconst _hoisted_2 = {\n  key: 2,\n  class: \"search-results-table-container\"\n}\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = { key: 3 }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"no-data-message\"\n}\nconst _hoisted_6 = {\n  key: 0,\n  class: \"modal-overlay\"\n}\nconst _hoisted_7 = { class: \"modal-content\" }\nconst _hoisted_8 = { class: \"input-group\" }\n\nimport { ref, Ref, computed, onMounted } from 'vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue';\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport { bpSearch, quotationIdSearch } from '@/utils/searchMethods';\r\nimport {\r\n    cns,                   // 用于创建 NodeStructure 的辅助函数\r\n    createTreeFromConfig,  // 用于从配置创建 VarTree 实例\r\n    createNodeFromConfig,  // 用于从配置创建单个 VarNode\r\n    isNodeStructure,       // 判断是否为 NodeStructure 类型\r\n    NodeStructure,         // NodeStructure 类型定义\r\n    VarNodeValue,          // VarNode 值类型定义\r\n    VarTree,               // VarTree 类或类型定义\r\n    VarNode\r\n} from '@/utils/VarTree';\r\nimport { toRaw } from 'vue'; // 用于获取非响应式原始数据\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\n\r\ntype State = 'create' | 'change' | 'display' | 'search';\r\ninterface QuotationData {\r\n    salesQuotation: number;    // 销售报价单号\r\n    soldToParty: string;       // 售达方\r\n    customerReference: string; // 客户参考\r\n    overallStatus: string;     // 整体状态\r\n    latestExpiration: string;  // 最新过期日期\r\n    id?: number | string;      // 可选的 ID 字段\r\n    items?: any[];             // 假设报价单详情有物品列表\r\n}\r\n\r\n// 扩展 NodeStructure，用于表示报价单数据的树形结构，其 currentValue 可能是单个对象或对象数组\r\ninterface QuotationNodeStructure extends NodeStructure {\r\n    currentValue: QuotationData | QuotationData[];\r\n}\r\n\r\n// ====================================================================\r\n// 3. 响应式变量和引用\r\n// ====================================================================\r\n\r\n// API 基础 URL，从环境变量获取，如果未设置则为空字符串\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'manageSalesQuotations',\n  setup(__props, { expose: __expose }) {\n\r\nconst cancelInquiryCreation = () => {\r\n    showInquiryModal.value = false;\r\n    inquiryIdInput.value = ''; // 清空输入\r\n    appToState('search');\r\n};\r\n\r\nconst createQuotationFromInquiry = async () => {\r\n    if (!inquiryIdInput.value.trim()) {\r\n        alert('请输入 Inquiry ID！');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // 调用后端接口创建报价单\r\n        const API_BASE_URL = window.API_BASE_URL || 'http://localhost:3000'; // 无需修改\r\n\r\n        // 请确保这里的URL与您后端新增的接口路径完全一致\r\n        const response = await fetch(`${API_BASE_URL}/api/quotation/create-quotation-from-inquiry`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ inquiryId: inquiryIdInput.value })\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (result.success) {\r\n            alert(`报价单创建成功！新报价单 ID: ${result.data.quotationData.basicInfo.quotation || '未知'}`);\r\n            showInquiryModal.value = false;\r\n            inquiryIdInput.value = ''; // 清空输入\r\n\r\n            // 成功后跳转到新的报价单详情页，或者刷新列表\r\n            // 假设后端返回了新报价单的完整数据或ID\r\n            if (result.data && result.data.quotationData && result.data.quotationData.basicInfo) {\r\n                // 如果后端返回了新报价单的完整数据\r\n                quotationDataTree.forceSetValue(result.data.quotationData);\r\n                \r\n                appContentRef.value.goToStage(1); // 切换到详情页 (阶段 1)\r\n                appToState('create'); // 设置应用状态为“创建”模式 (可编辑)\r\n            } else {\r\n                appToState('search');\r\n                alert('可以尝试刷新一下')\r\n            }\r\n\r\n        } else {\r\n            alert(`创建报价单失败: ${result.message || '未知错误'}`);\r\n        }\r\n    } catch (error) {\r\n        console.error('创建报价单请求失败:', error);\r\n        alert('创建报价单时发生网络错误或服务器异常。');\r\n    }\r\n};\r\n\r\n// --- 新增的模态窗口相关状态和方法 ---\r\nconst showInquiryModal = ref(false);\r\nconst inquiryIdInput = ref(''); // 用于存储用户输入的 inquiry ID\r\n\r\n// ====================================================================\r\n// 1. 应用状态定义\r\n// ====================================================================\r\n\r\n// 定义应用的不同操作状态\r\nconst state: Ref<State> = ref('search'); // 默认初始状态为搜索模式\r\n\r\n// Computed 属性，用于方便判断当前的应用状态\r\nconst onCreateState = computed(() => state.value === 'create');\r\nconst onChangeState = computed(() => state.value === 'change');\r\nconst onDisplayState = computed(() => state.value === 'display');\r\nconst onSearchState = computed(() => state.value === 'search');\r\n\r\n// ====================================================================\r\n// 2. 类型定义\r\n// ====================================================================\r\n\r\n// 定义报价单数据的接口\r\nlet API_BASE_URL = window.API_BASE_URL || '';\r\nonMounted(() => {\r\n    API_BASE_URL = window.API_BASE_URL || '';\r\n})\r\n// 对 AppContent 组件的引用，用于调用其内部方法（如 goToStage）\r\nconst appContentRef = ref(null) as Ref<any>; // 明确指定 Ref 的类型为 any，以便访问 AppContent 暴露的方法\r\n\r\n// 报价单详情信息树：用于创建、修改和查看报价单数据\r\n// 使用 createTreeFromConfig 初始化一个 VarTree 实例，定义了报价单的完整数据结构\r\nconst quotationDataTree = createTreeFromConfig(\r\n    cns('dict','dict','quotationData',{},false,{hideLabel:true},[ // 根节点：报价单数据\r\n        cns('dict','dict','meta',{},false,{hideSelf:true},[ // 元数据\r\n            cns('string','leaf','id','',false,{},[]), // ID\r\n        ]),\r\n        cns('dict','dict','basicInfo',{},false,{hideLabel:true},[ // 基本信息\r\n            cns('string','leaf','quotation','',false,{},[],\"Quotation ID:\"),\r\n            cns('string','leaf','soldToParty','',false,{},[],\"Sold-To Party:\"),\r\n            cns('string','leaf','shipToParty','',false,{},[],\"Ship-To Party:\"),\r\n            cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n            cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n            cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n            cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n        ]),\r\n        cns('dict','dict','itemOverview',{},false,{},[ // 项目概览\r\n            cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n            cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n            cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n            cns('string','leaf','expectOralVal','0.0',true,{},[],\"Expect. Oral Val:\"),\r\n            cns('string','leaf','expectOralValUnit','',true,{hideLabel:true},[],\"Expect. Oral Val Unit:\"),\r\n            // items节点将通过ItemConditionKit动态创建\r\n        ],'Item Overview'), // 'Item Overview' 结束\r\n    ])\r\n);\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/sales-quotation/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  quotationDataTree,\r\n  ['itemOverview', 'items']\r\n)\r\n\r\n// 存储 API 返回的查询结果列表\r\nconst searchResults = ref<QuotationData[] | null>(null);\r\n\r\n// 用于在 handleExecute 中传递给 quotationTree 的完整 NodeStructure（此变量似乎未直接使用在 `VarBox :tree` 中，\r\n// 而是将 `quotationDataTree` 的 `root` 更新，但保留在此以匹配原代码意图）\r\nconst searchResultsTree = ref<NodeStructure | null>(null);\r\n\r\n// 存储单个报价单详情的响应式变量 (当从列表点击查看时，此变量似乎未直接使用在 `VarBox :tree` 中，\r\n// 而是将 `quotationDataTree` 的 `root` 更新，但保留在此以匹配原代码意图)\r\nconst quotationDetail = ref<QuotationNodeStructure | null>(null);\r\n\r\n// 可写入的 VarTree 实例列表，如果组件需要操作多个可编辑的树\r\nconst writableTrees = [quotationDataTree];\r\n\r\n// ====================================================================\r\n// 4. 初始屏幕的 VarTree 定义 (根据模式切换)\r\n// ====================================================================\r\n\r\n// 初始阶段 - 搜索报价单的 VarTree 配置\r\nconst initialSearchTree = createTreeFromConfig(\r\n    cns('dict', 'dict', 'query', {}, false, {}, [\r\n        cns('number','leaf','salesQuotation','', false, {searchMethods: quotationIdSearch}, [], 'Sales Quotation:'),\r\n        cns('string', 'leaf', 'soldToParty', '', false, {searchMethods: bpSearch}, [], 'Sold-To Party:'),\r\n        cns('string', 'leaf', 'customerReference', '', false, {}, [], 'Customer Reference:'),\r\n        cns('selection', 'leaf', 'overallStatus', '', false, {\r\n            options: [\r\n                'New', 'Open', 'In Process', 'Completed', // 预定义的状态选项\r\n            ]\r\n        }, [], 'Overall Status:'),\r\n        cns('date','leaf','latestExpiration','', false, {}, [], 'Latest Expiration:'),\r\n    ])\r\n);\r\n\r\n// 初始阶段 - 创建新报价单的 VarTree 配置 (一个空的表单模板，用于清空和初始化数据)\r\nconst initialCreationTree = createTreeFromConfig(\r\n    cns('dict','dict','quotationData',{},false,{hideLabel:true},[ // 根节点：报价单数据\r\n        cns('dict','dict','meta',{},false,{hideSelf:true},[ // 元数据\r\n            cns('string','leaf','id','',false,{},[]), // ID\r\n        ]),\r\n        cns('dict','dict','basicInfo',{},false,{hideLabel:true},[ // 基本信息\r\n            cns('string','leaf','quotation','',true,{searchMethods:quotationIdSearch},[],\"Quotation ID:\"),\r\n            cns('string','leaf','soldToParty','',false,{searchMethods: bpSearch},[],\"Sold-To Party:\"),\r\n            cns('string','leaf','shipToParty','',false,{searchMethods: bpSearch},[],\"Ship-To Party:\"),\r\n            cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n            cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n            cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n            cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n        ]),\r\n        cns('dict','dict','itemOverview',{},false,{},[ // 项目概览\r\n            cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n            cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n            cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n            cns('string','leaf','expectOralVal','0.0',true,{},[],\"Expect. Oral Val:\"),\r\n            cns('string','leaf','expectOralValUnit','',true,{hideLabel:true},[],\"Expect. Oral Val Unit:\"),\r\n            // items节点将通过ItemConditionKit动态创建\r\n        ],'Item Overview'), // 'Item Overview' 结束\r\n    ])\r\n);\r\n\r\n// 为 initialCreationTree 手动添加 items 节点（不使用 ItemConditionKit）\r\nconst initialCreationItemsNode = createNodeFromConfig(\r\n  cns('dynamiclist','list','items',null,false,{\r\n    hideLabel:true,\r\n    hideList: ['netValue', 'netValueUnit', 'pricingDate', 'orderProbability','reqDelivDate','taxValue','taxValueUnit','pricingElements'],\r\n    childTemplate: cns('dict','dict','item',null,false,{},[\r\n      cns('string','leaf','item','',true,{},[],\"Item\"),\r\n      cns('string','leaf','material','',false,{},[],\"Material\"),\r\n      cns('string','leaf','orderQuantity','',false,{},[],\"Order Quantity\"),\r\n      cns('string','leaf','orderQuantityUnit','',false,{hideLabel:true},[],\"SU\"),\r\n      cns('string','leaf','description','',false,{},[],\"Description\"),\r\n      cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date\"),\r\n      cns('string','leaf','netValue','',true,{},[],\"Net: \"),\r\n      cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit\"),\r\n      cns('string','leaf','taxValue','',true,{},[],\"Tax: \"),\r\n      cns('string','leaf','taxValueUnit','',true,{hideLabel:true},[],\"Tax Value Unit\"),\r\n      cns('date','leaf','pricingDate','',false,{},[],\"Pricing Date\"),\r\n      cns('string','leaf','orderProbability','',false,{},[],\"Order Probability\"),\r\n      cns('dynamiclist','list','pricingElements',null,true,{\r\n        rowProvided:0,\r\n        childTemplate: cns('dict','dict','condition',null,false,{},[\r\n          cns('string','leaf','cnty','',false,{},[],\"Cnty\"),\r\n          cns('string','leaf','name','',false,{},[],\"Name\"),\r\n          cns('string','leaf','amount','',false,{},[],\"Amount\"),\r\n          cns('string','leaf','city','',false,{},[],\"City\"),\r\n          cns('string','leaf','per','',false,{},[],\"per\"),\r\n          cns('string','leaf','uom','',false,{},[],\"UoM\"),\r\n          cns('string','leaf','conditionValue','',false,{},[],\"Condition Value\"),\r\n          cns('string','leaf','curr','',false,{},[],\"Curr.\"),\r\n          cns('string','leaf','status','',false,{},[],\"Status\"),\r\n          cns('string','leaf','numC','',false,{},[],\"NumC\"),\r\n          cns('string','leaf','atoMtsComponent','',false,{},[],\"ATO/MTS Component\"),\r\n          cns('string','leaf','oun','',false,{},[],\"OUn\"),\r\n          cns('string','leaf','cconDe','',false,{},[],\"CConDe\"),\r\n          cns('string','leaf','un','',false,{},[],\"Un\"),\r\n          cns('string','leaf','conditionValue2','',false,{},[],\"Condition Value\"),\r\n          cns('string','leaf','cdCur','',false,{},[],\"CdCur\"),\r\n          cns('boolean','leaf','stat',false,false,{},[],\"Stat\"),\r\n        ]),\r\n      },[],\"Pricing Elements\"),\r\n    ])\r\n  },[],\"Items\")\r\n)\r\nconst initialCreationItemOverviewNode = initialCreationTree.findNodeByPath(['itemOverview'])\r\nif (initialCreationItemOverviewNode) {\r\n  initialCreationItemsNode.name = 'items'\r\n  initialCreationItemOverviewNode.addChild(initialCreationItemsNode)\r\n}\r\n\r\n// ====================================================================\r\n// 5. 辅助函数 (样式和日期格式化)\r\n// ====================================================================\r\n\r\n// 根据报价单状态返回对应的 CSS 类名\r\nfunction getStatusClass(status: string) {\r\n    if (!status) return '';\r\n    switch (status.toLowerCase()) {\r\n        case 'new': return 'status-new';\r\n        case 'open': return 'status-open';\r\n        case 'in process': return 'status-in-process';\r\n        case 'completed': return 'status-completed';\r\n        default: return '';\r\n    }\r\n}\r\n\r\n// 格式化日期字符串为本地短日期格式\r\nfunction formatDate(dateString: string) {\r\n    if (!dateString) return '';\r\n    const d = new Date(dateString);\r\n    if (isNaN(d.getTime())) { // 检查日期是否有效\r\n        return dateString;\r\n    }\r\n    return d.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\r\n}\r\n\r\n// ====================================================================\r\n// 6. 应用状态切换函数\r\n// ====================================================================\r\n\r\n/**\r\n * @description 切换应用的主状态 (搜索、创建、修改、显示)\r\n * @param newState 要切换到的新状态\r\n */\r\nfunction appToState(newState: State) {\r\n    state.value = newState;\r\n    // 根据新状态设置 quotationDataTree 的只读属性\r\n    // 如果是 'display' 模式，则将整个报价单数据树设置为只读\r\n    const readonly = newState === 'display';\r\n    if (quotationDataTree.root) {\r\n        quotationDataTree.root.readonly = readonly;\r\n    }\r\n}\r\n\r\n// ====================================================================\r\n// 7. 动态页脚按钮标签\r\n// ====================================================================\r\n\r\n// 计算属性：初始屏幕的“下一步”按钮文本\r\nconst searchScreenNextButtonLabel = computed(() => {\r\n    if (onCreateState.value) {\r\n        return 'Create New'; // 创建模式下的按钮文本\r\n    }\r\n    if (onSearchState.value) {\r\n        return 'Search'; // 搜索模式下的按钮文本\r\n    }\r\n    return '/hide'; // 其他情况隐藏按钮\r\n});\r\n\r\n// 计算属性：报价单详情页的“上一步”按钮文本\r\nconst quotationDetailPrevButtonLabel = computed(() => {\r\n    if (onDisplayState.value) {\r\n        return 'Back to Search'; // 查看模式下返回搜索列表\r\n    }\r\n    return 'Cancel'; // 创建/修改模式下取消\r\n});\r\n\r\n// 计算属性：报价单详情页的“下一步”按钮文本\r\nconst quotationDetailNextButtonLabel = computed(() => {\r\n    if (onDisplayState.value) {\r\n        return 'Switch to Edit'; // 查看模式下切换到编辑模式\r\n    }\r\n    if (onChangeState.value) {\r\n        return 'Save Changes'; // 修改模式下保存更改\r\n    }\r\n    if (onCreateState.value) {\r\n        return 'Submit Quotation'; // 创建模式下提交报价单\r\n    }\r\n    return '/hide'; // 其他情况隐藏按钮\r\n});\r\n\r\n// ====================================================================\r\n// 8. API 调用函数\r\n// ====================================================================\r\n\r\n/**\r\n * @description 调用 API 获取单个报价单的详细信息\r\n * @param id 报价单的 ID\r\n * @returns 成功时返回响应数据，失败时返回 null\r\n */\r\nasync function fetchQuotationDetails(id: number) {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/api/quotation/details`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({salesQuotationId:id}),\r\n        }).then(res => res.json());\r\n\r\n        if (response.success) {\r\n            return response;\r\n        } else {\r\n            console.error('API responded with an error:', response.message);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching quotation details:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\n// ====================================================================\r\n// 9. 业务逻辑函数\r\n// ====================================================================\r\n\r\n/**\r\n * @description 处理列表项的“View Details”点击事件，获取并显示报价单详情。\r\n * @param quotation 从列表中获取的报价单数据\r\n */\r\nasync function viewDetails(quotation: QuotationData) {\r\n    const responseData = await fetchQuotationDetails(quotation.salesQuotation);\r\n    if(responseData){\r\n        const quotationData: VarNodeValue = responseData.data.quotationData;\r\n        // 使用 forceSetValue 更新 quotationDataTree 的数据，使其反映详情数据\r\n        quotationDataTree.forceSetValue(quotationData);\r\n        \r\n        console.log('更新后的 quotationDataTree:', quotationDataTree.root);\r\n        \r\n        // 切换到 AppContent 的第二个阶段 (quotationDetail)\r\n        appContentRef.value.goToStage(1);\r\n        // 设置应用状态为“显示”模式 (只读)\r\n        appToState('display');\r\n    } else {\r\n        alert('无法获取报价单详情或数据格式不正确！');\r\n    }\r\n}\r\n\r\n/**\r\n * @description 处理“Go”按钮（在搜索模式下）的点击事件，执行报价单搜索。\r\n */\r\nasync function handleSearch() {\r\n    // 从搜索表单树获取查询条件\r\n    const queryData = initialSearchTree.root?.currentValue; \r\n    \r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/api/quotation/search`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(queryData),\r\n        }).then(res => res.json());\r\n\r\n        console.log('API Response:', response);\r\n        // 验证 API 返回的数据结构是否符合 NodeStructure 类型\r\n        const isStructureValid = isNodeStructure(response.data?.quotationStruct);\r\n        console.log('isNodeStructure result:', isStructureValid);\r\n\r\n        if (response.success && isStructureValid) {\r\n            // 从返回的 NodeStructure 中提取 currentValue (报价单数据)\r\n            const currentValue = response.data.quotationStruct.currentValue;\r\n            let results: QuotationData[] = [];\r\n\r\n            // 处理 currentValue 可能是数组或单个对象的情况\r\n            if (Array.isArray(currentValue)) {\r\n                results = currentValue as QuotationData[];\r\n            } else if (currentValue && typeof currentValue === 'object') {\r\n                results = [currentValue as QuotationData];\r\n            }\r\n            \r\n            searchResults.value = results; // 更新搜索结果列表，供表格渲染\r\n            searchResultsTree.value = response.data.quotationStruct; // 存储完整的 NodeStructure (备用，当前未直接使用)\r\n            \r\n            alert(`查询成功，共找到 ${results.length} 条报价单！`);\r\n        } else {\r\n            alert('未找到报价单信息!');\r\n            searchResults.value = null; // 清空搜索结果\r\n            searchResultsTree.value = null; // 清空结构\r\n        }\r\n    } catch (error) {\r\n        console.error('An error occurred during search:', error);\r\n        alert('请求失败，请检查网络或服务器');\r\n    }\r\n}\r\n\r\n/**\r\n * @description 处理“创建新报价单”的初始化逻辑，切换到创建模式并准备空表单。\r\n */\r\nasync function initializeCreation() {\r\n    showInquiryModal.value = true;\r\n    return false; // 返回 false 阻止 AppContent 自动前进到下一个阶段（因为已手动处理）\r\n}\r\n\r\n\r\n/**\r\n * @description AppContent 组件的 `before-next` 钩子函数，处理“下一步”按钮的点击逻辑。\r\n * 根据当前阶段和应用状态执行不同的操作。\r\n * @param currentStage 当前阶段的索引\r\n * @param targetStage 目标阶段的索引\r\n * @returns {boolean | Promise<boolean>} 返回 true 允许 AppContent 自动前进，false 阻止。\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number): Promise<boolean> {\r\n    console.log('handleExecute: stage change:', currentStage, '->', targetStage, 'State:', state.value);\r\n\r\n    // 阶段 0 (initialScreen) 的操作逻辑\r\n    if (currentStage === 0) {\r\n        if (onCreateState.value) {\r\n            // 在创建模式下，点击“Create New”按钮（由 footer-content-right 里的自定义按钮触发）\r\n            return await initializeCreation(); // 初始化创建流程，并返回 false 阻止自动前进\r\n        } else if (onSearchState.value) {\r\n            // 在搜索模式下，点击“Search”按钮\r\n            await handleSearch(); // 执行搜索操作\r\n            return false; // 返回 false 停留在当前阶段显示搜索结果\r\n        }\r\n    }\r\n\r\n    // 阶段 1 (quotationDetail) 的操作逻辑\r\n    if (currentStage === 1) {\r\n        if (onDisplayState.value) {\r\n            // 从查看模式切换到修改模式\r\n            appToState('change');\r\n            appContentRef.value.footerMessage = '已切换到修改模式';\r\n            return false; // 返回 false 停留在当前阶段 (VarBox 变为可编辑)\r\n        } else if (onChangeState.value) {\r\n            // 在修改模式下，点击“Save Changes”按钮，执行更新 API 调用\r\n            const body = {\r\n                quotation: toRaw(quotationDataTree.root?.currentValue) // 获取原始数据以发送到后端\r\n            };\r\n            const res = await fetch(`${API_BASE_URL}/api/quotation/update`, { // 假设这是更新 API\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            }).then(r => r.json());\r\n\r\n            if (res.success) {\r\n                appContentRef.value.footerMessage = `报价单${res.data.quotationData.basicInfo.quotation}更新成功!`;\r\n                const newQuotationData: VarNodeValue = res.data.quotationData;\r\n                quotationDataTree.forceSetValue(newQuotationData); // 使用后端返回的最新数据更新树\r\n                appToState('display'); // 保存后切换回查看模式\r\n            } else {\r\n                alert('保存失败！');\r\n                appContentRef.value.footerMessage = '保存失败！';\r\n            }\r\n            return false; // 返回 false 停留在当前阶段\r\n        } else if (onCreateState.value) {\r\n            // 在创建模式下，点击“Submit Quotation”按钮，执行创建 API 调用\r\n            const body = {\r\n                quotation: toRaw(quotationDataTree.root?.currentValue) // 获取原始数据以发送到后端\r\n            };\r\n            const res = await fetch(`${API_BASE_URL}/api/quotation/create`, { // 假设这是创建 API\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            }).then(r => r.json());\r\n            const quotationData: VarNodeValue = res.data.quotationData; // 假设后端返回新创建的报价单数据\r\n            if (res.success) {\r\n                appContentRef.value.footerMessage = `新报价单${res.data.quotationData.basicInfo.quotation}创建成功!`;\r\n                appToState('display'); // 创建后切换到查看模式\r\n                quotationDataTree.forceSetValue(quotationData); // 使用后端返回的最新数据更新树\r\n            } else {\r\n                alert('创建失败！');\r\n                appContentRef.value.footerMessage = '创建失败！';\r\n            }\r\n            return false; // 返回 false 停留在当前阶段\r\n        }\r\n    }\r\n    return false; // 默认情况下，阻止 AppContent 自动前进\r\n}\r\n\r\n/**\r\n * @description AppContent 组件的 `before-prev` 钩子函数，处理“上一步”按钮的点击逻辑。\r\n * 根据当前阶段和应用状态执行不同的操作。\r\n * @param currentStage 当前阶段的索引\r\n * @param targetStage 目标阶段的索引\r\n * @returns {boolean | Promise<boolean>} 返回 true 允许 AppContent 自动后退，false 阻止。\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number): Promise<boolean> {\r\n    console.log('handleCancel: stage change:', currentStage, '->', targetStage, 'State:', state.value);\r\n\r\n    // 阶段 0 (initialScreen) 的操作\r\n    if (currentStage === 0) {\r\n        // 从初始屏幕返回，通常允许直接返回（例如，回到上一页或关闭应用）\r\n        return true; \r\n    }\r\n\r\n    // 阶段 1 (quotationDetail) 的操作\r\n    if (currentStage === 1) {\r\n        if (onDisplayState.value) {\r\n            // 从查看模式返回：直接回到搜索列表\r\n            appContentRef.value.goToStage(0);\r\n            appToState('search'); // 切换回搜索模式\r\n            searchResults.value = null; // 清空搜索结果\r\n            appContentRef.value.footerMessage = ''; // 清空页脚消息\r\n            return false; // 返回 false 阻止 AppContent 自动后退，因为已手动处理阶段切换\r\n        } else if (onCreateState.value || onChangeState.value) {\r\n            // 从创建或修改模式返回：需要确认是否放弃更改\r\n            const confirmValue = confirm('确定要取消并放弃所有更改吗？');\r\n            if (confirmValue) {\r\n                appContentRef.value.goToStage(0);\r\n                appToState('search'); // 切换回搜索模式\r\n                searchResults.value = null; // 清空搜索结果\r\n                appContentRef.value.footerMessage = ''; // 清空页脚消息\r\n            }\r\n            return false; // 返回 false 阻止 AppContent 自动后退，因为已手动处理阶段切换\r\n        }\r\n    }\r\n    return true; // 默认允许取消\r\n}\r\n\r\n// AppContent 组件的 footerConfig 配置，用于动态设置底部按钮的文本和显示\r\nconst footerConfig = [\r\n    // 阶段 0 (initialScreen) 的配置\r\n    {\r\n        showPrev: false, // 初始屏幕不显示“上一步”按钮\r\n        nextText: searchScreenNextButtonLabel // “下一步”按钮文本根据搜索/创建模式动态变化\r\n    },\r\n    // 阶段 1 (quotationDetail) 的配置\r\n    {\r\n        showPrev: true, // 详情页显示“上一步”按钮\r\n        prevText: quotationDetailPrevButtonLabel, // “上一步”按钮文本根据显示/编辑模式动态变化\r\n        nextText: quotationDetailNextButtonLabel // “下一步”按钮文本根据显示/编辑/创建模式动态变化\r\n    },\r\n    //阶段 2\r\n    {\r\n        prevText: '/hide',\r\n        nextText: '/hide'\r\n    }\r\n];\r\n\r\n\r\n// ====================================================================\r\n// 10. 暴露给父组件的方法 (如果这个组件是子组件)\r\n// ====================================================================\r\n\r\n\r\n\r\n// ItemConditionKit 自动处理所有 item detail 相关的逻辑\r\n\r\n// ItemConditionKit 自动处理按钮标签和可见性\r\n\r\n// ItemConditionKit 自动处理标签页切换\r\n\r\n// ItemConditionKit 自动处理 item detail header\r\n\r\n// ItemConditionKit 自动处理 item detail sales\r\n\r\n// ItemConditionKit 自动处理 item detail conditions\r\n\r\n/**\r\n * ItemConditionDetail 事件处理函数\r\n */\r\nfunction handleItemConditionValidationSuccess(items: VarNode[]) {\r\n  console.log('Item condition validation success:', items)\r\n}\r\n\r\nfunction handleItemConditionValidationFailed(items: VarNode[]) {\r\n  console.log('Item condition validation failed:', items)\r\n}\r\n\r\nfunction handleItemConditionSave() {\r\n  console.log('Item condition save')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到quotationDetail阶段\r\n}\r\n\r\nfunction handleItemConditionCancel() {\r\n  console.log('Item condition cancel')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到quotationDetail阶段\r\n}\r\n\r\n// ItemConditionKit 自动处理数据验证和同步\r\n\r\n/**\r\n * @description quotation批量查询，向后端发送VarNode[]，返回Net Value: 和 Expect. Oral Val: 包括值和单位，还有每个item的详细信息\r\n * @description 该方法会更新入参VarNode[]中的数据\r\n * @param {Array<VarNode>} itemNodes \r\n * 同时根据返回的badRecordIndices设置每个VarNode的config.data.validation\r\n */\r\nasync function itemsTabQuery(itemNodes: VarNode[]) {\r\n    // 提取每个VarNode的值\r\n    const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n    const data = await fetch(`${API_BASE_URL}/api/quotation/items-tab-query`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(itemValues)\r\n    }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n    }).catch(error => {\r\n        console.error('批量查询失败:', error)\r\n        return { success: false }\r\n    })\r\n\r\n    console.log('返回的数据', data)\r\n\r\n    if (data.success) {\r\n        // 更新总体数据\r\n        quotationDataTree.findNodeByPath(['basicInfo','netValue'])?.setValue(data.data.generalData?.netValue)\r\n        quotationDataTree.findNodeByPath(['basicInfo','netValueUnit'])?.setValue(data.data.generalData?.netValueUnit)\r\n        quotationDataTree.findNodeByPath(['itemOverview','expectOralVal'])?.setValue(data.data.generalData?.expectOralVal)\r\n        quotationDataTree.findNodeByPath(['itemOverview','expectOralValUnit'])?.setValue(data.data.generalData?.expectOralValUnit)\r\n\r\n        // 更新每个item的详细信息，使用forceSetValue确保完整更新\r\n        if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n        data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n            if (index < itemNodes.length) {\r\n            // 调试：打印breakdown数据结构\r\n            console.log('Breakdown data for item', index, ':', breakdown)\r\n            if (breakdown.pricingElements) {\r\n                console.log('PricingElements structure:', breakdown.pricingElements)\r\n            }\r\n            // 使用forceSetValue确保包括pricingElements在内的所有字段都被正确更新\r\n            itemNodes[index].forceSetValue(breakdown)\r\n            }\r\n        })\r\n        }\r\n\r\n        // 根据badRecordIndices设置validation\r\n        if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n        // 先重置所有节点的validation\r\n        itemNodes.forEach(node => {\r\n            if (!node.config.data) {\r\n            node.config.data = {}\r\n            }\r\n            node.config.data.validation = true\r\n        })\r\n\r\n        // 设置不合法节点的validation\r\n        data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n            if (badIndex < itemNodes.length) {\r\n            if (!itemNodes[badIndex].config.data) {\r\n                itemNodes[badIndex].config.data = {}\r\n            }\r\n            itemNodes[badIndex].config.data.validation = false\r\n            }\r\n        })\r\n        }\r\n\r\n        appContentRef.value.forceUpdate()\r\n        return data.data.result.allDataLegal === 1\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n// ItemConditionKit 自动处理输入事件\r\n\r\n// ItemConditionKit 自动处理所有详情页面的数据更新和保存逻辑\r\n\r\n// ItemConditionKit 自动处理取消逻辑\r\n\r\n/**\r\n * @description 处理 Items Table 的按钮点击事件（使用ItemConditionKit）\r\n */\r\nasync function handleItemsTableClick() {\r\n    const itemsNode = quotationDataTree.findNodeByPath(['itemOverview', 'items'])!;\r\n    const selectedChildren = [...itemsNode.getSelectedChildren()]; // 获取所有选中的子节点\r\n\r\n    if (selectedChildren && selectedChildren.length > 0) {\r\n        // 检查是否有未验证的items\r\n        const unvalidatedItems = selectedChildren.filter(item =>\r\n            item.config.data?.validation !== true\r\n        );\r\n\r\n        if (unvalidatedItems.length > 0) {\r\n            console.log('发现未验证的items，正在验证...');\r\n            const isValid = await itemsTabQuery(unvalidatedItems);\r\n            if (!isValid) {\r\n                console.log('数据验证失败，无法进入详情页面');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 所有验证都通过，切换到详情页面\r\n        appContentRef.value.goToStage(2); // Stage 2 是itemCondition\r\n\r\n        // 不清空选中状态，让ItemConditionDetail组件处理\r\n    } else {\r\n        console.log('没有选中任何物品。');\r\n    }\r\n}\r\n\r\n// ItemConditionKit 自动处理所有 item detail 相关的事件和切换逻辑\r\n\r\n\r\n\r\n// 定义组件对外暴露的属性和方法，允许父组件通过 ref 访问\r\n__expose({\r\n    appToState, // 允许外部调用以切换应用状态\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(AppContent, {\n      ref_key: \"appContentRef\",\n      ref: appContentRef,\n      stages: ['initialScreen', 'quotationDetail','itemCondition'],\n      \"before-next\": handleExecute,\n      \"before-prev\": handleCancel,\n      \"footer-config\": footerConfig\n    }, {\n      \"stage-initialScreen\": _withCtx(() => [\n        (onCreateState.value)\n          ? (_openBlock(), _createBlock(VarBox, {\n              key: 0,\n              tree: _unref(initialCreationTree)\n            }, null, 8, [\"tree\"]))\n          : (onSearchState.value)\n            ? (_openBlock(), _createBlock(VarBox, {\n                key: 1,\n                tree: _unref(initialSearchTree)\n              }, null, 8, [\"tree\"]))\n            : _createCommentVNode(\"\", true),\n        (searchResults.value && searchResults.value.length > 0 && onSearchState.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createElementVNode(\"table\", null, [\n                _cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [\n                  _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", null, \"Sales Quotation\"),\n                    _createElementVNode(\"th\", null, \"Sold-To Party\"),\n                    _createElementVNode(\"th\", null, \"Customer Reference\"),\n                    _createElementVNode(\"th\", null, \"Overall Status\"),\n                    _createElementVNode(\"th\", null, \"Latest Expiration\"),\n                    _createElementVNode(\"th\", null, \"Actions\")\n                  ])\n                ], -1)),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(searchResults.value, (quotation) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: quotation.salesQuotation\n                    }, [\n                      _createElementVNode(\"td\", null, _toDisplayString(quotation.salesQuotation), 1),\n                      _createElementVNode(\"td\", null, _toDisplayString(quotation.soldToParty), 1),\n                      _createElementVNode(\"td\", null, _toDisplayString(quotation.customerReference), 1),\n                      _createElementVNode(\"td\", null, [\n                        _createElementVNode(\"span\", {\n                          class: _normalizeClass(['status-badge', getStatusClass(quotation.overallStatus)])\n                        }, _toDisplayString(quotation.overallStatus), 3)\n                      ]),\n                      _createElementVNode(\"td\", null, _toDisplayString(formatDate(quotation.latestExpiration)), 1),\n                      _createElementVNode(\"td\", null, [\n                        _createElementVNode(\"button\", {\n                          class: \"detail-btn\",\n                          onClick: ($event: any) => (viewDetails(quotation))\n                        }, \"View Details\", 8, _hoisted_3)\n                      ])\n                    ]))\n                  }), 128))\n                ])\n              ])\n            ]))\n          : (onSearchState.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[4] || (_cache[4] = [\n                _createElementVNode(\"p\", null, \"请点击“search”按钮查询报价单。\", -1)\n              ])))\n            : _createCommentVNode(\"\", true)\n      ]),\n      \"stage-quotationDetail\": _withCtx(() => [\n        (_unref(quotationDataTree).root)\n          ? (_openBlock(), _createBlock(VarBox, {\n              key: 0,\n              tree: _unref(quotationDataTree)\n            }, {\n              [`quotationData-itemOverview-items--extra-buttons`]: _withCtx(() => [\n                _createElementVNode(\"button\", {\n                  class: \"execute-button table-extra-button\",\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (handleItemsTableClick()))\n                }, \" ... \")\n              ]),\n              _: 2\n            }, 1032, [\"tree\"]))\n          : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[5] || (_cache[5] = [\n              _createElementVNode(\"p\", null, \"没有找到报价单详情。\", -1)\n            ])))\n      ]),\n      \"stage-itemCondition\": _withCtx(() => [\n        _createVNode(ItemConditionDetail, {\n          kit: _unref(itemConditionKit),\n          config: {\r\n                        navigationLabels: {\r\n                            cancel: 'Cancel',\r\n                            save: 'Save',\r\n                            previous: '← Previous',\r\n                            next: 'Next →'\r\n                        }\r\n                    },\n          onValidationSuccess: handleItemConditionValidationSuccess,\n          onValidationFailed: handleItemConditionValidationFailed,\n          onSave: handleItemConditionSave,\n          onCancel: handleItemConditionCancel\n        }, {\n          \"footer-content-right\": _withCtx(() => [\n            _renderSlot(_ctx.$slots, \"footer-content-right\")\n          ]),\n          _: 3\n        }, 8, [\"kit\"])\n      ]),\n      \"footer-content-right\": _withCtx(() => [\n        _createTextVNode(_toDisplayString(appContentRef.value?.getCurrentStageName()) + \" \", 1),\n        (appContentRef.value?.currentStage === 0)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (onSearchState.value)\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    class: \"nav-button next-button\",\n                    onClick: _cache[1] || (_cache[1] = ($event: any) => (initializeCreation()))\n                  }, \"Create New\"))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          : _createCommentVNode(\"\", true),\n        (appContentRef.value?.currentStage == 2)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 3\n    }, 512),\n    (showInquiryModal.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createElementVNode(\"div\", _hoisted_8, [\n              _cache[6] || (_cache[6] = _createElementVNode(\"label\", { for: \"inquiryIdInput\" }, \"请输入 Inquiry ID:\", -1)),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                id: \"inquiryIdInput\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((inquiryIdInput).value = $event)),\n                placeholder: \"例如: INQ-2024-001\"\n              }, null, 512), [\n                [_vModelText, inquiryIdInput.value]\n              ])\n            ]),\n            _createElementVNode(\"div\", { class: \"modal-actions\" }, [\n              _createElementVNode(\"button\", {\n                onClick: createQuotationFromInquiry,\n                class: \"btn-primary\"\n              }, \"确认创建\"),\n              _createElementVNode(\"button\", {\n                onClick: cancelInquiryCreation,\n                class: \"btn-secondary\"\n              }, \"取消\")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"manageSalesQuotations\">\r\n        <AppContent\r\n            ref=\"appContentRef\"\r\n            :stages=\"['initialScreen', 'quotationDetail','itemCondition']\"\r\n            :before-next=\"handleExecute\"\r\n            :before-prev=\"handleCancel\"\r\n            :footer-config=\"footerConfig\"\r\n        >\r\n            <template #stage-initialScreen>\r\n                <VarBox :tree=\"initialCreationTree\" v-if=\"onCreateState\"></VarBox>\r\n                <VarBox :tree=\"initialSearchTree\" v-else-if=\"onSearchState\"></VarBox>\r\n                \r\n                <div v-if=\"searchResults && searchResults.length > 0 && onSearchState\" class=\"search-results-table-container\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sales Quotation</th>\r\n                                <th>Sold-To Party</th>\r\n                                <th>Customer Reference</th>\r\n                                <th>Overall Status</th>\r\n                                <th>Latest Expiration</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"quotation in searchResults\" :key=\"quotation.salesQuotation\">\r\n                                <td>{{ quotation.salesQuotation }}</td>\r\n                                <td>{{ quotation.soldToParty }}</td>\r\n                                <td>{{ quotation.customerReference }}</td>\r\n                                <td>\r\n                                    <span :class=\"['status-badge', getStatusClass(quotation.overallStatus)]\">\r\n                                        {{ quotation.overallStatus }}\r\n                                    </span>\r\n                                </td>\r\n                                <td>\r\n                                    {{ formatDate(quotation.latestExpiration) }}\r\n                                </td>\r\n                                <td>\r\n                                    <button class=\"detail-btn\" @click=\"viewDetails(quotation)\">View Details</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div v-else-if=\"onSearchState\">\r\n                    <p>请点击“search”按钮查询报价单。</p>\r\n                </div>\r\n            </template>\r\n            \r\n            <template #stage-quotationDetail>\r\n                <VarBox v-if=\"quotationDataTree.root\" :tree=\"quotationDataTree\" >\r\n                    <template #[`quotationData-itemOverview-items--extra-buttons`]>\r\n                        <button\r\n                            class = \"execute-button table-extra-button\"\r\n                            @click=\"handleItemsTableClick()\"\r\n                        >\r\n                            ...\r\n                        </button>\r\n                    </template> \r\n                </VarBox>\r\n                <div v-else class=\"no-data-message\">\r\n                    <p>没有找到报价单详情。</p>\r\n                </div>\r\n            </template>\r\n\r\n            <template #stage-itemCondition>\r\n                <ItemConditionDetail\r\n                    :kit=\"itemConditionKit\"\r\n                    :config=\"{\r\n                        navigationLabels: {\r\n                            cancel: 'Cancel',\r\n                            save: 'Save',\r\n                            previous: '← Previous',\r\n                            next: 'Next →'\r\n                        }\r\n                    }\"\r\n                    @validation-success=\"handleItemConditionValidationSuccess\"\r\n                    @validation-failed=\"handleItemConditionValidationFailed\"\r\n                    @save=\"handleItemConditionSave\"\r\n                    @cancel=\"handleItemConditionCancel\"\r\n                >\r\n                    <!-- teleport目标插槽 -->\r\n                    <template #footer-content-right>\r\n                        <slot name=\"footer-content-right\"></slot>\r\n                    </template>\r\n                </ItemConditionDetail>\r\n            </template>\r\n\r\n            <template #footer-content-right>\r\n                {{ appContentRef?.getCurrentStageName() }}\r\n                <template v-if=\"appContentRef?.currentStage === 0\">\r\n                    <button v-if=\"onSearchState\" class=\"nav-button next-button\" @click=\"initializeCreation()\">Create New</button>\r\n                </template>\r\n                <template v-if=\"appContentRef?.currentStage == 2\">\r\n                    <!-- ItemConditionDetail 组件会自动处理 Cancel 和 Save 按钮 -->\r\n                </template>\r\n            </template>\r\n        </AppContent>\r\n\r\n        <div v-if=\"showInquiryModal\" class=\"modal-overlay\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"input-group\">\r\n                    <label for=\"inquiryIdInput\">请输入 Inquiry ID:</label>\r\n                    <input type=\"text\" id=\"inquiryIdInput\" v-model=\"inquiryIdInput\" placeholder=\"例如: INQ-2024-001\" />\r\n                </div>\r\n                <div class=\"modal-actions\">\r\n                    <button @click=\"createQuotationFromInquiry\" class=\"btn-primary\">确认创建</button>\r\n                    <button @click=\"cancelInquiryCreation\" class=\"btn-secondary\">取消</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, Ref, computed, onMounted } from 'vue';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue';\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport { bpSearch, quotationIdSearch } from '@/utils/searchMethods';\r\nimport {\r\n    cns,                   // 用于创建 NodeStructure 的辅助函数\r\n    createTreeFromConfig,  // 用于从配置创建 VarTree 实例\r\n    createNodeFromConfig,  // 用于从配置创建单个 VarNode\r\n    isNodeStructure,       // 判断是否为 NodeStructure 类型\r\n    NodeStructure,         // NodeStructure 类型定义\r\n    VarNodeValue,          // VarNode 值类型定义\r\n    VarTree,               // VarTree 类或类型定义\r\n    VarNode\r\n} from '@/utils/VarTree';\r\nimport { toRaw } from 'vue'; // 用于获取非响应式原始数据\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\n\r\nconst cancelInquiryCreation = () => {\r\n    showInquiryModal.value = false;\r\n    inquiryIdInput.value = ''; // 清空输入\r\n    appToState('search');\r\n};\r\n\r\nconst createQuotationFromInquiry = async () => {\r\n    if (!inquiryIdInput.value.trim()) {\r\n        alert('请输入 Inquiry ID！');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // 调用后端接口创建报价单\r\n        const API_BASE_URL = window.API_BASE_URL || 'http://localhost:3000'; // 无需修改\r\n\r\n        // 请确保这里的URL与您后端新增的接口路径完全一致\r\n        const response = await fetch(`${API_BASE_URL}/api/quotation/create-quotation-from-inquiry`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ inquiryId: inquiryIdInput.value })\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (result.success) {\r\n            alert(`报价单创建成功！新报价单 ID: ${result.data.quotationData.basicInfo.quotation || '未知'}`);\r\n            showInquiryModal.value = false;\r\n            inquiryIdInput.value = ''; // 清空输入\r\n\r\n            // 成功后跳转到新的报价单详情页，或者刷新列表\r\n            // 假设后端返回了新报价单的完整数据或ID\r\n            if (result.data && result.data.quotationData && result.data.quotationData.basicInfo) {\r\n                // 如果后端返回了新报价单的完整数据\r\n                quotationDataTree.forceSetValue(result.data.quotationData);\r\n                \r\n                appContentRef.value.goToStage(1); // 切换到详情页 (阶段 1)\r\n                appToState('create'); // 设置应用状态为“创建”模式 (可编辑)\r\n            } else {\r\n                appToState('search');\r\n                alert('可以尝试刷新一下')\r\n            }\r\n\r\n        } else {\r\n            alert(`创建报价单失败: ${result.message || '未知错误'}`);\r\n        }\r\n    } catch (error) {\r\n        console.error('创建报价单请求失败:', error);\r\n        alert('创建报价单时发生网络错误或服务器异常。');\r\n    }\r\n};\r\n\r\n// --- 新增的模态窗口相关状态和方法 ---\r\nconst showInquiryModal = ref(false);\r\nconst inquiryIdInput = ref(''); // 用于存储用户输入的 inquiry ID\r\n\r\n// ====================================================================\r\n// 1. 应用状态定义\r\n// ====================================================================\r\n\r\n// 定义应用的不同操作状态\r\ntype State = 'create' | 'change' | 'display' | 'search';\r\nconst state: Ref<State> = ref('search'); // 默认初始状态为搜索模式\r\n\r\n// Computed 属性，用于方便判断当前的应用状态\r\nconst onCreateState = computed(() => state.value === 'create');\r\nconst onChangeState = computed(() => state.value === 'change');\r\nconst onDisplayState = computed(() => state.value === 'display');\r\nconst onSearchState = computed(() => state.value === 'search');\r\n\r\n// ====================================================================\r\n// 2. 类型定义\r\n// ====================================================================\r\n\r\n// 定义报价单数据的接口\r\ninterface QuotationData {\r\n    salesQuotation: number;    // 销售报价单号\r\n    soldToParty: string;       // 售达方\r\n    customerReference: string; // 客户参考\r\n    overallStatus: string;     // 整体状态\r\n    latestExpiration: string;  // 最新过期日期\r\n    id?: number | string;      // 可选的 ID 字段\r\n    items?: any[];             // 假设报价单详情有物品列表\r\n}\r\n\r\n// 扩展 NodeStructure，用于表示报价单数据的树形结构，其 currentValue 可能是单个对象或对象数组\r\ninterface QuotationNodeStructure extends NodeStructure {\r\n    currentValue: QuotationData | QuotationData[];\r\n}\r\n\r\n// ====================================================================\r\n// 3. 响应式变量和引用\r\n// ====================================================================\r\n\r\n// API 基础 URL，从环境变量获取，如果未设置则为空字符串\r\nlet API_BASE_URL = window.API_BASE_URL || '';\r\nonMounted(() => {\r\n    API_BASE_URL = window.API_BASE_URL || '';\r\n})\r\n// 对 AppContent 组件的引用，用于调用其内部方法（如 goToStage）\r\nconst appContentRef = ref(null) as Ref<any>; // 明确指定 Ref 的类型为 any，以便访问 AppContent 暴露的方法\r\n\r\n// 报价单详情信息树：用于创建、修改和查看报价单数据\r\n// 使用 createTreeFromConfig 初始化一个 VarTree 实例，定义了报价单的完整数据结构\r\nconst quotationDataTree = createTreeFromConfig(\r\n    cns('dict','dict','quotationData',{},false,{hideLabel:true},[ // 根节点：报价单数据\r\n        cns('dict','dict','meta',{},false,{hideSelf:true},[ // 元数据\r\n            cns('string','leaf','id','',false,{},[]), // ID\r\n        ]),\r\n        cns('dict','dict','basicInfo',{},false,{hideLabel:true},[ // 基本信息\r\n            cns('string','leaf','quotation','',false,{},[],\"Quotation ID:\"),\r\n            cns('string','leaf','soldToParty','',false,{},[],\"Sold-To Party:\"),\r\n            cns('string','leaf','shipToParty','',false,{},[],\"Ship-To Party:\"),\r\n            cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n            cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n            cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n            cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n        ]),\r\n        cns('dict','dict','itemOverview',{},false,{},[ // 项目概览\r\n            cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n            cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n            cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n            cns('string','leaf','expectOralVal','0.0',true,{},[],\"Expect. Oral Val:\"),\r\n            cns('string','leaf','expectOralValUnit','',true,{hideLabel:true},[],\"Expect. Oral Val Unit:\"),\r\n            // items节点将通过ItemConditionKit动态创建\r\n        ],'Item Overview'), // 'Item Overview' 结束\r\n    ])\r\n);\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/sales-quotation/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\n// 使用 ItemConditionKit 创建 items 节点（使用默认模板）\r\nitemConditionKit.summonItemsNode(\r\n  quotationDataTree,\r\n  ['itemOverview', 'items']\r\n)\r\n\r\n// 存储 API 返回的查询结果列表\r\nconst searchResults = ref<QuotationData[] | null>(null);\r\n\r\n// 用于在 handleExecute 中传递给 quotationTree 的完整 NodeStructure（此变量似乎未直接使用在 `VarBox :tree` 中，\r\n// 而是将 `quotationDataTree` 的 `root` 更新，但保留在此以匹配原代码意图）\r\nconst searchResultsTree = ref<NodeStructure | null>(null);\r\n\r\n// 存储单个报价单详情的响应式变量 (当从列表点击查看时，此变量似乎未直接使用在 `VarBox :tree` 中，\r\n// 而是将 `quotationDataTree` 的 `root` 更新，但保留在此以匹配原代码意图)\r\nconst quotationDetail = ref<QuotationNodeStructure | null>(null);\r\n\r\n// 可写入的 VarTree 实例列表，如果组件需要操作多个可编辑的树\r\nconst writableTrees = [quotationDataTree];\r\n\r\n// ====================================================================\r\n// 4. 初始屏幕的 VarTree 定义 (根据模式切换)\r\n// ====================================================================\r\n\r\n// 初始阶段 - 搜索报价单的 VarTree 配置\r\nconst initialSearchTree = createTreeFromConfig(\r\n    cns('dict', 'dict', 'query', {}, false, {}, [\r\n        cns('number','leaf','salesQuotation','', false, {searchMethods: quotationIdSearch}, [], 'Sales Quotation:'),\r\n        cns('string', 'leaf', 'soldToParty', '', false, {searchMethods: bpSearch}, [], 'Sold-To Party:'),\r\n        cns('string', 'leaf', 'customerReference', '', false, {}, [], 'Customer Reference:'),\r\n        cns('selection', 'leaf', 'overallStatus', '', false, {\r\n            options: [\r\n                'New', 'Open', 'In Process', 'Completed', // 预定义的状态选项\r\n            ]\r\n        }, [], 'Overall Status:'),\r\n        cns('date','leaf','latestExpiration','', false, {}, [], 'Latest Expiration:'),\r\n    ])\r\n);\r\n\r\n// 初始阶段 - 创建新报价单的 VarTree 配置 (一个空的表单模板，用于清空和初始化数据)\r\nconst initialCreationTree = createTreeFromConfig(\r\n    cns('dict','dict','quotationData',{},false,{hideLabel:true},[ // 根节点：报价单数据\r\n        cns('dict','dict','meta',{},false,{hideSelf:true},[ // 元数据\r\n            cns('string','leaf','id','',false,{},[]), // ID\r\n        ]),\r\n        cns('dict','dict','basicInfo',{},false,{hideLabel:true},[ // 基本信息\r\n            cns('string','leaf','quotation','',true,{searchMethods:quotationIdSearch},[],\"Quotation ID:\"),\r\n            cns('string','leaf','soldToParty','',false,{searchMethods: bpSearch},[],\"Sold-To Party:\"),\r\n            cns('string','leaf','shipToParty','',false,{searchMethods: bpSearch},[],\"Ship-To Party:\"),\r\n            cns('string','leaf','customerReference','',false,{},[],\"Cust. Reference:\"),\r\n            cns('string','leaf','netValue','0.0',true,{},[],\"Net Value:\"),\r\n            cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit:\"),\r\n            cns('date','leaf','customerReferenceDate','',false,{},[],\"Cust. Ref. Date:\"),\r\n        ]),\r\n        cns('dict','dict','itemOverview',{},false,{},[ // 项目概览\r\n            cns('date','leaf','validFrom','',false,{},[],\"Valid From:\"),\r\n            cns('date','leaf','validTo','',false,{},[],\"Valid To:\"),\r\n            cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date:\"),\r\n            cns('string','leaf','expectOralVal','0.0',true,{},[],\"Expect. Oral Val:\"),\r\n            cns('string','leaf','expectOralValUnit','',true,{hideLabel:true},[],\"Expect. Oral Val Unit:\"),\r\n            // items节点将通过ItemConditionKit动态创建\r\n        ],'Item Overview'), // 'Item Overview' 结束\r\n    ])\r\n);\r\n\r\n// 为 initialCreationTree 手动添加 items 节点（不使用 ItemConditionKit）\r\nconst initialCreationItemsNode = createNodeFromConfig(\r\n  cns('dynamiclist','list','items',null,false,{\r\n    hideLabel:true,\r\n    hideList: ['netValue', 'netValueUnit', 'pricingDate', 'orderProbability','reqDelivDate','taxValue','taxValueUnit','pricingElements'],\r\n    childTemplate: cns('dict','dict','item',null,false,{},[\r\n      cns('string','leaf','item','',true,{},[],\"Item\"),\r\n      cns('string','leaf','material','',false,{},[],\"Material\"),\r\n      cns('string','leaf','orderQuantity','',false,{},[],\"Order Quantity\"),\r\n      cns('string','leaf','orderQuantityUnit','',false,{hideLabel:true},[],\"SU\"),\r\n      cns('string','leaf','description','',false,{},[],\"Description\"),\r\n      cns('date','leaf','reqDelivDate','',false,{},[],\"Req. Deliv Date\"),\r\n      cns('string','leaf','netValue','',true,{},[],\"Net: \"),\r\n      cns('string','leaf','netValueUnit','',true,{hideLabel:true},[],\"Net Value Unit\"),\r\n      cns('string','leaf','taxValue','',true,{},[],\"Tax: \"),\r\n      cns('string','leaf','taxValueUnit','',true,{hideLabel:true},[],\"Tax Value Unit\"),\r\n      cns('date','leaf','pricingDate','',false,{},[],\"Pricing Date\"),\r\n      cns('string','leaf','orderProbability','',false,{},[],\"Order Probability\"),\r\n      cns('dynamiclist','list','pricingElements',null,true,{\r\n        rowProvided:0,\r\n        childTemplate: cns('dict','dict','condition',null,false,{},[\r\n          cns('string','leaf','cnty','',false,{},[],\"Cnty\"),\r\n          cns('string','leaf','name','',false,{},[],\"Name\"),\r\n          cns('string','leaf','amount','',false,{},[],\"Amount\"),\r\n          cns('string','leaf','city','',false,{},[],\"City\"),\r\n          cns('string','leaf','per','',false,{},[],\"per\"),\r\n          cns('string','leaf','uom','',false,{},[],\"UoM\"),\r\n          cns('string','leaf','conditionValue','',false,{},[],\"Condition Value\"),\r\n          cns('string','leaf','curr','',false,{},[],\"Curr.\"),\r\n          cns('string','leaf','status','',false,{},[],\"Status\"),\r\n          cns('string','leaf','numC','',false,{},[],\"NumC\"),\r\n          cns('string','leaf','atoMtsComponent','',false,{},[],\"ATO/MTS Component\"),\r\n          cns('string','leaf','oun','',false,{},[],\"OUn\"),\r\n          cns('string','leaf','cconDe','',false,{},[],\"CConDe\"),\r\n          cns('string','leaf','un','',false,{},[],\"Un\"),\r\n          cns('string','leaf','conditionValue2','',false,{},[],\"Condition Value\"),\r\n          cns('string','leaf','cdCur','',false,{},[],\"CdCur\"),\r\n          cns('boolean','leaf','stat',false,false,{},[],\"Stat\"),\r\n        ]),\r\n      },[],\"Pricing Elements\"),\r\n    ])\r\n  },[],\"Items\")\r\n)\r\nconst initialCreationItemOverviewNode = initialCreationTree.findNodeByPath(['itemOverview'])\r\nif (initialCreationItemOverviewNode) {\r\n  initialCreationItemsNode.name = 'items'\r\n  initialCreationItemOverviewNode.addChild(initialCreationItemsNode)\r\n}\r\n\r\n// ====================================================================\r\n// 5. 辅助函数 (样式和日期格式化)\r\n// ====================================================================\r\n\r\n// 根据报价单状态返回对应的 CSS 类名\r\nfunction getStatusClass(status: string) {\r\n    if (!status) return '';\r\n    switch (status.toLowerCase()) {\r\n        case 'new': return 'status-new';\r\n        case 'open': return 'status-open';\r\n        case 'in process': return 'status-in-process';\r\n        case 'completed': return 'status-completed';\r\n        default: return '';\r\n    }\r\n}\r\n\r\n// 格式化日期字符串为本地短日期格式\r\nfunction formatDate(dateString: string) {\r\n    if (!dateString) return '';\r\n    const d = new Date(dateString);\r\n    if (isNaN(d.getTime())) { // 检查日期是否有效\r\n        return dateString;\r\n    }\r\n    return d.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\r\n}\r\n\r\n// ====================================================================\r\n// 6. 应用状态切换函数\r\n// ====================================================================\r\n\r\n/**\r\n * @description 切换应用的主状态 (搜索、创建、修改、显示)\r\n * @param newState 要切换到的新状态\r\n */\r\nfunction appToState(newState: State) {\r\n    state.value = newState;\r\n    // 根据新状态设置 quotationDataTree 的只读属性\r\n    // 如果是 'display' 模式，则将整个报价单数据树设置为只读\r\n    const readonly = newState === 'display';\r\n    if (quotationDataTree.root) {\r\n        quotationDataTree.root.readonly = readonly;\r\n    }\r\n}\r\n\r\n// ====================================================================\r\n// 7. 动态页脚按钮标签\r\n// ====================================================================\r\n\r\n// 计算属性：初始屏幕的“下一步”按钮文本\r\nconst searchScreenNextButtonLabel = computed(() => {\r\n    if (onCreateState.value) {\r\n        return 'Create New'; // 创建模式下的按钮文本\r\n    }\r\n    if (onSearchState.value) {\r\n        return 'Search'; // 搜索模式下的按钮文本\r\n    }\r\n    return '/hide'; // 其他情况隐藏按钮\r\n});\r\n\r\n// 计算属性：报价单详情页的“上一步”按钮文本\r\nconst quotationDetailPrevButtonLabel = computed(() => {\r\n    if (onDisplayState.value) {\r\n        return 'Back to Search'; // 查看模式下返回搜索列表\r\n    }\r\n    return 'Cancel'; // 创建/修改模式下取消\r\n});\r\n\r\n// 计算属性：报价单详情页的“下一步”按钮文本\r\nconst quotationDetailNextButtonLabel = computed(() => {\r\n    if (onDisplayState.value) {\r\n        return 'Switch to Edit'; // 查看模式下切换到编辑模式\r\n    }\r\n    if (onChangeState.value) {\r\n        return 'Save Changes'; // 修改模式下保存更改\r\n    }\r\n    if (onCreateState.value) {\r\n        return 'Submit Quotation'; // 创建模式下提交报价单\r\n    }\r\n    return '/hide'; // 其他情况隐藏按钮\r\n});\r\n\r\n// ====================================================================\r\n// 8. API 调用函数\r\n// ====================================================================\r\n\r\n/**\r\n * @description 调用 API 获取单个报价单的详细信息\r\n * @param id 报价单的 ID\r\n * @returns 成功时返回响应数据，失败时返回 null\r\n */\r\nasync function fetchQuotationDetails(id: number) {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/api/quotation/details`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({salesQuotationId:id}),\r\n        }).then(res => res.json());\r\n\r\n        if (response.success) {\r\n            return response;\r\n        } else {\r\n            console.error('API responded with an error:', response.message);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching quotation details:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\n// ====================================================================\r\n// 9. 业务逻辑函数\r\n// ====================================================================\r\n\r\n/**\r\n * @description 处理列表项的“View Details”点击事件，获取并显示报价单详情。\r\n * @param quotation 从列表中获取的报价单数据\r\n */\r\nasync function viewDetails(quotation: QuotationData) {\r\n    const responseData = await fetchQuotationDetails(quotation.salesQuotation);\r\n    if(responseData){\r\n        const quotationData: VarNodeValue = responseData.data.quotationData;\r\n        // 使用 forceSetValue 更新 quotationDataTree 的数据，使其反映详情数据\r\n        quotationDataTree.forceSetValue(quotationData);\r\n        \r\n        console.log('更新后的 quotationDataTree:', quotationDataTree.root);\r\n        \r\n        // 切换到 AppContent 的第二个阶段 (quotationDetail)\r\n        appContentRef.value.goToStage(1);\r\n        // 设置应用状态为“显示”模式 (只读)\r\n        appToState('display');\r\n    } else {\r\n        alert('无法获取报价单详情或数据格式不正确！');\r\n    }\r\n}\r\n\r\n/**\r\n * @description 处理“Go”按钮（在搜索模式下）的点击事件，执行报价单搜索。\r\n */\r\nasync function handleSearch() {\r\n    // 从搜索表单树获取查询条件\r\n    const queryData = initialSearchTree.root?.currentValue; \r\n    \r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/api/quotation/search`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(queryData),\r\n        }).then(res => res.json());\r\n\r\n        console.log('API Response:', response);\r\n        // 验证 API 返回的数据结构是否符合 NodeStructure 类型\r\n        const isStructureValid = isNodeStructure(response.data?.quotationStruct);\r\n        console.log('isNodeStructure result:', isStructureValid);\r\n\r\n        if (response.success && isStructureValid) {\r\n            // 从返回的 NodeStructure 中提取 currentValue (报价单数据)\r\n            const currentValue = response.data.quotationStruct.currentValue;\r\n            let results: QuotationData[] = [];\r\n\r\n            // 处理 currentValue 可能是数组或单个对象的情况\r\n            if (Array.isArray(currentValue)) {\r\n                results = currentValue as QuotationData[];\r\n            } else if (currentValue && typeof currentValue === 'object') {\r\n                results = [currentValue as QuotationData];\r\n            }\r\n            \r\n            searchResults.value = results; // 更新搜索结果列表，供表格渲染\r\n            searchResultsTree.value = response.data.quotationStruct; // 存储完整的 NodeStructure (备用，当前未直接使用)\r\n            \r\n            alert(`查询成功，共找到 ${results.length} 条报价单！`);\r\n        } else {\r\n            alert('未找到报价单信息!');\r\n            searchResults.value = null; // 清空搜索结果\r\n            searchResultsTree.value = null; // 清空结构\r\n        }\r\n    } catch (error) {\r\n        console.error('An error occurred during search:', error);\r\n        alert('请求失败，请检查网络或服务器');\r\n    }\r\n}\r\n\r\n/**\r\n * @description 处理“创建新报价单”的初始化逻辑，切换到创建模式并准备空表单。\r\n */\r\nasync function initializeCreation() {\r\n    showInquiryModal.value = true;\r\n    return false; // 返回 false 阻止 AppContent 自动前进到下一个阶段（因为已手动处理）\r\n}\r\n\r\n\r\n/**\r\n * @description AppContent 组件的 `before-next` 钩子函数，处理“下一步”按钮的点击逻辑。\r\n * 根据当前阶段和应用状态执行不同的操作。\r\n * @param currentStage 当前阶段的索引\r\n * @param targetStage 目标阶段的索引\r\n * @returns {boolean | Promise<boolean>} 返回 true 允许 AppContent 自动前进，false 阻止。\r\n */\r\nasync function handleExecute(currentStage: number, targetStage: number): Promise<boolean> {\r\n    console.log('handleExecute: stage change:', currentStage, '->', targetStage, 'State:', state.value);\r\n\r\n    // 阶段 0 (initialScreen) 的操作逻辑\r\n    if (currentStage === 0) {\r\n        if (onCreateState.value) {\r\n            // 在创建模式下，点击“Create New”按钮（由 footer-content-right 里的自定义按钮触发）\r\n            return await initializeCreation(); // 初始化创建流程，并返回 false 阻止自动前进\r\n        } else if (onSearchState.value) {\r\n            // 在搜索模式下，点击“Search”按钮\r\n            await handleSearch(); // 执行搜索操作\r\n            return false; // 返回 false 停留在当前阶段显示搜索结果\r\n        }\r\n    }\r\n\r\n    // 阶段 1 (quotationDetail) 的操作逻辑\r\n    if (currentStage === 1) {\r\n        if (onDisplayState.value) {\r\n            // 从查看模式切换到修改模式\r\n            appToState('change');\r\n            appContentRef.value.footerMessage = '已切换到修改模式';\r\n            return false; // 返回 false 停留在当前阶段 (VarBox 变为可编辑)\r\n        } else if (onChangeState.value) {\r\n            // 在修改模式下，点击“Save Changes”按钮，执行更新 API 调用\r\n            const body = {\r\n                quotation: toRaw(quotationDataTree.root?.currentValue) // 获取原始数据以发送到后端\r\n            };\r\n            const res = await fetch(`${API_BASE_URL}/api/quotation/update`, { // 假设这是更新 API\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            }).then(r => r.json());\r\n\r\n            if (res.success) {\r\n                appContentRef.value.footerMessage = `报价单${res.data.quotationData.basicInfo.quotation}更新成功!`;\r\n                const newQuotationData: VarNodeValue = res.data.quotationData;\r\n                quotationDataTree.forceSetValue(newQuotationData); // 使用后端返回的最新数据更新树\r\n                appToState('display'); // 保存后切换回查看模式\r\n            } else {\r\n                alert('保存失败！');\r\n                appContentRef.value.footerMessage = '保存失败！';\r\n            }\r\n            return false; // 返回 false 停留在当前阶段\r\n        } else if (onCreateState.value) {\r\n            // 在创建模式下，点击“Submit Quotation”按钮，执行创建 API 调用\r\n            const body = {\r\n                quotation: toRaw(quotationDataTree.root?.currentValue) // 获取原始数据以发送到后端\r\n            };\r\n            const res = await fetch(`${API_BASE_URL}/api/quotation/create`, { // 假设这是创建 API\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            }).then(r => r.json());\r\n            const quotationData: VarNodeValue = res.data.quotationData; // 假设后端返回新创建的报价单数据\r\n            if (res.success) {\r\n                appContentRef.value.footerMessage = `新报价单${res.data.quotationData.basicInfo.quotation}创建成功!`;\r\n                appToState('display'); // 创建后切换到查看模式\r\n                quotationDataTree.forceSetValue(quotationData); // 使用后端返回的最新数据更新树\r\n            } else {\r\n                alert('创建失败！');\r\n                appContentRef.value.footerMessage = '创建失败！';\r\n            }\r\n            return false; // 返回 false 停留在当前阶段\r\n        }\r\n    }\r\n    return false; // 默认情况下，阻止 AppContent 自动前进\r\n}\r\n\r\n/**\r\n * @description AppContent 组件的 `before-prev` 钩子函数，处理“上一步”按钮的点击逻辑。\r\n * 根据当前阶段和应用状态执行不同的操作。\r\n * @param currentStage 当前阶段的索引\r\n * @param targetStage 目标阶段的索引\r\n * @returns {boolean | Promise<boolean>} 返回 true 允许 AppContent 自动后退，false 阻止。\r\n */\r\nasync function handleCancel(currentStage: number, targetStage: number): Promise<boolean> {\r\n    console.log('handleCancel: stage change:', currentStage, '->', targetStage, 'State:', state.value);\r\n\r\n    // 阶段 0 (initialScreen) 的操作\r\n    if (currentStage === 0) {\r\n        // 从初始屏幕返回，通常允许直接返回（例如，回到上一页或关闭应用）\r\n        return true; \r\n    }\r\n\r\n    // 阶段 1 (quotationDetail) 的操作\r\n    if (currentStage === 1) {\r\n        if (onDisplayState.value) {\r\n            // 从查看模式返回：直接回到搜索列表\r\n            appContentRef.value.goToStage(0);\r\n            appToState('search'); // 切换回搜索模式\r\n            searchResults.value = null; // 清空搜索结果\r\n            appContentRef.value.footerMessage = ''; // 清空页脚消息\r\n            return false; // 返回 false 阻止 AppContent 自动后退，因为已手动处理阶段切换\r\n        } else if (onCreateState.value || onChangeState.value) {\r\n            // 从创建或修改模式返回：需要确认是否放弃更改\r\n            const confirmValue = confirm('确定要取消并放弃所有更改吗？');\r\n            if (confirmValue) {\r\n                appContentRef.value.goToStage(0);\r\n                appToState('search'); // 切换回搜索模式\r\n                searchResults.value = null; // 清空搜索结果\r\n                appContentRef.value.footerMessage = ''; // 清空页脚消息\r\n            }\r\n            return false; // 返回 false 阻止 AppContent 自动后退，因为已手动处理阶段切换\r\n        }\r\n    }\r\n    return true; // 默认允许取消\r\n}\r\n\r\n// AppContent 组件的 footerConfig 配置，用于动态设置底部按钮的文本和显示\r\nconst footerConfig = [\r\n    // 阶段 0 (initialScreen) 的配置\r\n    {\r\n        showPrev: false, // 初始屏幕不显示“上一步”按钮\r\n        nextText: searchScreenNextButtonLabel // “下一步”按钮文本根据搜索/创建模式动态变化\r\n    },\r\n    // 阶段 1 (quotationDetail) 的配置\r\n    {\r\n        showPrev: true, // 详情页显示“上一步”按钮\r\n        prevText: quotationDetailPrevButtonLabel, // “上一步”按钮文本根据显示/编辑模式动态变化\r\n        nextText: quotationDetailNextButtonLabel // “下一步”按钮文本根据显示/编辑/创建模式动态变化\r\n    },\r\n    //阶段 2\r\n    {\r\n        prevText: '/hide',\r\n        nextText: '/hide'\r\n    }\r\n];\r\n\r\n\r\n// ====================================================================\r\n// 10. 暴露给父组件的方法 (如果这个组件是子组件)\r\n// ====================================================================\r\n\r\n\r\n\r\n// ItemConditionKit 自动处理所有 item detail 相关的逻辑\r\n\r\n// ItemConditionKit 自动处理按钮标签和可见性\r\n\r\n// ItemConditionKit 自动处理标签页切换\r\n\r\n// ItemConditionKit 自动处理 item detail header\r\n\r\n// ItemConditionKit 自动处理 item detail sales\r\n\r\n// ItemConditionKit 自动处理 item detail conditions\r\n\r\n/**\r\n * ItemConditionDetail 事件处理函数\r\n */\r\nfunction handleItemConditionValidationSuccess(items: VarNode[]) {\r\n  console.log('Item condition validation success:', items)\r\n}\r\n\r\nfunction handleItemConditionValidationFailed(items: VarNode[]) {\r\n  console.log('Item condition validation failed:', items)\r\n}\r\n\r\nfunction handleItemConditionSave() {\r\n  console.log('Item condition save')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到quotationDetail阶段\r\n}\r\n\r\nfunction handleItemConditionCancel() {\r\n  console.log('Item condition cancel')\r\n  // 返回到主页面\r\n  appContentRef.value.goToStage(1) // 返回到quotationDetail阶段\r\n}\r\n\r\n// ItemConditionKit 自动处理数据验证和同步\r\n\r\n/**\r\n * @description quotation批量查询，向后端发送VarNode[]，返回Net Value: 和 Expect. Oral Val: 包括值和单位，还有每个item的详细信息\r\n * @description 该方法会更新入参VarNode[]中的数据\r\n * @param {Array<VarNode>} itemNodes \r\n * 同时根据返回的badRecordIndices设置每个VarNode的config.data.validation\r\n */\r\nasync function itemsTabQuery(itemNodes: VarNode[]) {\r\n    // 提取每个VarNode的值\r\n    const itemValues = itemNodes.map(node => node.getValue())\r\n\r\n    const data = await fetch(`${API_BASE_URL}/api/quotation/items-tab-query`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(itemValues)\r\n    }).then(response => {\r\n        console.log('正常返回', response)\r\n        return response.json()\r\n    }).catch(error => {\r\n        console.error('批量查询失败:', error)\r\n        return { success: false }\r\n    })\r\n\r\n    console.log('返回的数据', data)\r\n\r\n    if (data.success) {\r\n        // 更新总体数据\r\n        quotationDataTree.findNodeByPath(['basicInfo','netValue'])?.setValue(data.data.generalData?.netValue)\r\n        quotationDataTree.findNodeByPath(['basicInfo','netValueUnit'])?.setValue(data.data.generalData?.netValueUnit)\r\n        quotationDataTree.findNodeByPath(['itemOverview','expectOralVal'])?.setValue(data.data.generalData?.expectOralVal)\r\n        quotationDataTree.findNodeByPath(['itemOverview','expectOralValUnit'])?.setValue(data.data.generalData?.expectOralValUnit)\r\n\r\n        // 更新每个item的详细信息，使用forceSetValue确保完整更新\r\n        if (data.data.breakdowns && Array.isArray(data.data.breakdowns)) {\r\n        data.data.breakdowns.forEach((breakdown: any, index: number) => {\r\n            if (index < itemNodes.length) {\r\n            // 调试：打印breakdown数据结构\r\n            console.log('Breakdown data for item', index, ':', breakdown)\r\n            if (breakdown.pricingElements) {\r\n                console.log('PricingElements structure:', breakdown.pricingElements)\r\n            }\r\n            // 使用forceSetValue确保包括pricingElements在内的所有字段都被正确更新\r\n            itemNodes[index].forceSetValue(breakdown)\r\n            }\r\n        })\r\n        }\r\n\r\n        // 根据badRecordIndices设置validation\r\n        if (data.data.result && Array.isArray(data.data.result.badRecordIndices)) {\r\n        // 先重置所有节点的validation\r\n        itemNodes.forEach(node => {\r\n            if (!node.config.data) {\r\n            node.config.data = {}\r\n            }\r\n            node.config.data.validation = true\r\n        })\r\n\r\n        // 设置不合法节点的validation\r\n        data.data.result.badRecordIndices.forEach((badIndex: number) => {\r\n            if (badIndex < itemNodes.length) {\r\n            if (!itemNodes[badIndex].config.data) {\r\n                itemNodes[badIndex].config.data = {}\r\n            }\r\n            itemNodes[badIndex].config.data.validation = false\r\n            }\r\n        })\r\n        }\r\n\r\n        appContentRef.value.forceUpdate()\r\n        return data.data.result.allDataLegal === 1\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n// ItemConditionKit 自动处理输入事件\r\n\r\n// ItemConditionKit 自动处理所有详情页面的数据更新和保存逻辑\r\n\r\n// ItemConditionKit 自动处理取消逻辑\r\n\r\n/**\r\n * @description 处理 Items Table 的按钮点击事件（使用ItemConditionKit）\r\n */\r\nasync function handleItemsTableClick() {\r\n    const itemsNode = quotationDataTree.findNodeByPath(['itemOverview', 'items'])!;\r\n    const selectedChildren = [...itemsNode.getSelectedChildren()]; // 获取所有选中的子节点\r\n\r\n    if (selectedChildren && selectedChildren.length > 0) {\r\n        // 检查是否有未验证的items\r\n        const unvalidatedItems = selectedChildren.filter(item =>\r\n            item.config.data?.validation !== true\r\n        );\r\n\r\n        if (unvalidatedItems.length > 0) {\r\n            console.log('发现未验证的items，正在验证...');\r\n            const isValid = await itemsTabQuery(unvalidatedItems);\r\n            if (!isValid) {\r\n                console.log('数据验证失败，无法进入详情页面');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 所有验证都通过，切换到详情页面\r\n        appContentRef.value.goToStage(2); // Stage 2 是itemCondition\r\n\r\n        // 不清空选中状态，让ItemConditionDetail组件处理\r\n    } else {\r\n        console.log('没有选中任何物品。');\r\n    }\r\n}\r\n\r\n// ItemConditionKit 自动处理所有 item detail 相关的事件和切换逻辑\r\n\r\n\r\n\r\n// 定义组件对外暴露的属性和方法，允许父组件通过 ref 访问\r\ndefineExpose({\r\n    appToState, // 允许外部调用以切换应用状态\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.manageSalesQuotations {\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n.item-nav-button {\r\n    margin-left: auto;\r\n    padding: 5px 10px;\r\n    border: 2px solid transparent; /* 初始透明边框 */\r\n    border-radius: 5px;\r\n    background-color: var(--btn-default-bg); \r\n    color:var(--btn-default-text);\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    cursor:default;\r\n    transition: all 0.3s ease; /* 平滑过渡所有属性 */\r\n}\r\n\r\n.item-nav-button:hover {\r\n    background-color: var(--btn-hover-bg); /* 悬停时改变背景色 */\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* 悬停时加深阴影 */\r\n    transform: translateY(-2px); /* 悬停时轻微上浮 */\r\n    color: var(--btn-hover-text); /* 悬停时改变文字颜色 */\r\n}\r\n\r\n.item-nav-button:active {\r\n    background-color: var(--btn-active-bg); /* 点击时改变背景色 */\r\n    box-shadow: 0 2px 4px var(--btn-active-shadow);\r\n    transform: translateY(0); /* 点击时恢复位置 */\r\n}\r\n\r\n.item-nav-button:focus {\r\n    border-color: var(--btn-focus-border); /* 获得焦点时显示蓝色边框 */\r\n    box-shadow: 0 0 0 0.2rem var(--btn-focus-shadow); /* 焦点光晕 */\r\n}\r\n\r\n.item-counter{\r\n    margin-left:10px;\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n.detail-btn {\r\n    margin-left: auto;\r\n    padding: 5px 10px;\r\n    border: 2px solid transparent; /* 初始透明边框 */\r\n    border-radius: 5px;\r\n    background-color: transparent; \r\n    color:var(--btn-default-text);\r\n    font-size: 16px;\r\n    text-align: center;\r\n    cursor:default;\r\n    transition: all 0.3s ease; /* 平滑过渡所有属性 */\r\n}\r\n\r\n.detail-btn:hover {\r\n    background-color: var(--btn-hover-bg); /* 悬停时改变背景色 */\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* 悬停时加深阴影 */\r\n    transform: translateY(-2px); /* 轻微上浮 */\r\n    color: var(--btn-hover-text); /* 悬停时改变文字颜色 */\r\n}\r\n\r\n.detail-btn:active {\r\n    background-color: var(--btn-active-bg); /* 点击时改变背景色 */\r\n    box-shadow: 0 2px 4px var(--btn-active-shadow);\r\n    transform: translateY(0); /* 点击时恢复位置 */\r\n}\r\n\r\n.detail-btn:focus {\r\n    border-color: var(--btn-focus-border); /* 获得焦点时显示蓝色边框 */\r\n    box-shadow: 0 0 0 0.2rem var(--btn-focus-shadow); /* 焦点光晕 */\r\n}\r\n\r\n/* 包裹表格的容器，增加一些空间和阴影 */\r\n.search-results-table-container {\r\n    margin-top: 20px;\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n    overflow: hidden; /* 确保圆角和阴影效果正确 */\r\n}\r\n\r\n/* 表格主体样式 */\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse; /* 合并单元格边框 */\r\n    font-family: Arial, sans-serif;\r\n    font-size: 14px;\r\n}\r\n\r\n/* 表头样式 */\r\nthead {\r\n    background-color: #f0f4f8; /* 浅灰色背景 */\r\n    color: #4a5568; /* 深色文字 */\r\n    font-weight: 600;\r\n    text-transform: uppercase; /* 字母大写 */\r\n    letter-spacing: 0.5px;\r\n}\r\n\r\nth, td {\r\n    padding: 12px 15px; /* 增加内边距 */\r\n    text-align: left;\r\n    border-bottom: 1px solid #e2e8f0; /* 柔和的底部边框线 */\r\n}\r\n\r\n/* 斑马纹效果，让行更易读 */\r\ntbody tr:nth-child(even) {\r\n    background-color: #f7fafc; /* 偶数行使用浅色背景 */\r\n}\r\n\r\n/* 行悬停效果 */\r\ntbody tr:hover {\r\n    background-color: #ebf4ff; /* 悬停时使用更亮的蓝色背景 */\r\n    cursor: pointer;\r\n    transform: scale(1.005); /* 轻微放大，增加交互感 */\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\r\n    transition: all 0.2s ease-in-out;\r\n}\r\n\r\n/* 按钮样式 */\r\n.view-details-btn {\r\n    padding: 6px 12px;\r\n    border: 1px solid #4299e1; /* 蓝色边框 */\r\n    border-radius: 4px;\r\n    background-color: #4299e1; /* 蓝色背景 */\r\n    color: #ffffff; /* 白色文字 */\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.view-details-btn:hover {\r\n    background-color: #2b6cb0; /* 悬停时颜色变深 */\r\n    border-color: #2b6cb0;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.view-details-btn:active {\r\n    background-color: #1a4f80; /* 点击时颜色更深 */\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.view-details-btn:focus {\r\n    border-color: var(--btn-focus-border);\r\n    box-shadow: 0 0 0 0.2rem var(--btn-focus-shadow);\r\n}\r\n\r\n/* 调整 StatusBadge 的位置，让其在单元格内居中对齐 */\r\ntd .status-badge {\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n}\r\n\r\n.no-data-message {\r\n    text-align: center;\r\n    padding: 20px;\r\n    color: #6c757d;\r\n    font-size: 1.1em;\r\n}\r\n\r\n/* .nav-button {\r\n    padding: 8px 16px;\r\n    margin-left: 10px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: #6c757d;\r\n    color: white;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.nav-button:hover {\r\n    background-color: #5a6268;\r\n} */\r\n\r\n.table-extra-button {\r\n    width: inherit;\r\n    padding: 0 6px;\r\n    min-width: 20px;\r\n    height: 24px;\r\n    cursor: pointer;\r\n}\r\n\r\n.table-extra-button:disabled {\r\n    cursor: not-allowed;\r\n}\r\n\r\n:deep(.query--dict-leaf-section){\r\n    display: grid;\r\n    grid-template-columns: auto auto auto auto auto;\r\n    grid-template-rows: auto auto auto auto;\r\n}\r\n\r\n:deep(.query-salesQuotation--wrapper){\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n}\r\n\r\n:deep(.quotationData-basicInfo--dict-leaf-section) {\r\n    display: grid;\r\n    grid-template-columns: 50% 35% 15%;\r\n    grid-template-rows: auto auto auto auto;\r\n}\r\n\r\n:deep(.quotationData-basicInfo-quotation--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n}\r\n:deep(.quotationData-basicInfo-netValue--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 1;\r\n}\r\n:deep(.quotationData-basicInfo-netValueUnit--wrapper) {\r\n    grid-column: 3;\r\n    grid-row: 1;\r\n}\r\n:deep(.quotationData-basicInfo-soldToParty--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n}\r\n:deep(.quotationData-basicInfo-shipToParty--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 3;\r\n}\r\n:deep(.quotationData-basicInfo-customerReference--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 4;\r\n}\r\n:deep(.quotationData-basicInfo-customerReferenceDate--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 4;\r\n}\r\n\r\n:deep(.quotationData-itemOverview--dict-leaf-section) {\r\n    display: grid;\r\n    grid-template-columns: 50% 35% 15%;\r\n    grid-template-rows: auto auto;\r\n}\r\n:deep(.quotationData-itemOverview-validTo--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 1;\r\n}\r\n:deep(.quotationData-itemOverview-reqDelivDate--wrapper) {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n}\r\n:deep(.quotationData-itemOverview-expectOralVal--wrapper) {\r\n    grid-column: 2;\r\n    grid-row: 2;\r\n}\r\n:deep(.quotationData-itemOverview-expectOralValUnit--wrapper) {\r\n    grid-column: 3;\r\n    grid-row: 2;\r\n}\r\n:deep(.itemDetailHeader--dict-leaf-section){\r\n    display: grid;\r\n    grid-template-columns: 50% 35%;\r\n    grid-template-rows: auto auto;\r\n}\r\n:deep(.itemDetailSales-orderQuantityAndDeliveryDate--dict-leaf-section){\r\n    display: grid;\r\n    grid-template-columns: 50% 35%;\r\n    grid-template-rows: auto auto;\r\n}\r\n:deep(.itemDetailSales-generalSalesData--dict-leaf-section){\r\n    display: grid;\r\n    grid-template-columns: 50% 35%;\r\n    grid-template-rows: auto auto;\r\n}\r\n:deep(.itemDetailConditions--dict-leaf-section){\r\n    display: grid;\r\n    grid-template-columns: 50% 35%;\r\n    grid-template-rows: auto auto;\r\n}\r\n/* 模态窗口样式 */\r\n.modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 1000; /* 确保在最上层 */\r\n}\r\n\r\n.modal-content {\r\n    background-color: white;\r\n    padding: 30px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n    width: 400px;\r\n    max-width: 90%;\r\n    text-align: center;\r\n}\r\n\r\n.modal-content h3 {\r\n    margin-top: 0;\r\n    color: #333;\r\n    font-size: 1.5em;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.input-group {\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.input-group label {\r\n    display: block;\r\n    margin-bottom: 8px;\r\n    font-weight: bold;\r\n    color: #555;\r\n}\r\n\r\n.input-group input[type=\"text\"] {\r\n    width: calc(100% - 20px);\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 1em;\r\n}\r\n\r\n.modal-actions button {\r\n    padding: 10px 20px;\r\n    margin: 0 10px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    font-size: 1em;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.modal-actions .btn-primary {\r\n    margin-left: auto;\r\n    padding: 5px 10px;\r\n    border: 2px solid transparent; /* 初始透明边框 */\r\n    border-radius: 5px;\r\n    background-color: transparent; \r\n    color:var(--btn-default-text);\r\n    font-size: 16px;\r\n    text-align: center;\r\n    cursor:default;\r\n    transition: all 0.3s ease; /* 平滑过渡所有属性 */\r\n}\r\n\r\n.modal-actions .btn-primary:hover {\r\n    background-color: var(--btn-hover-bg); /* 悬停时改变背景色 */\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* 悬停时加深阴影 */\r\n    transform: translateY(-2px); /* 轻微上浮 */\r\n    color: var(--btn-hover-text); /* 悬停时改变文字颜色 */\r\n}\r\n\r\n.modal-actions .btn-secondary {\r\n    margin-left: auto;\r\n    padding: 5px 10px;\r\n    border: 2px solid transparent; /* 初始透明边框 */\r\n    border-radius: 5px;\r\n    background-color: transparent; \r\n    color:var(--btn-default-text);\r\n    font-size: 16px;\r\n    text-align: center;\r\n    cursor:default;\r\n    transition: all 0.3s ease; /* 平滑过渡所有属性 */\r\n}\r\n.modal-actions .btn-secondary:hover {\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* 悬停时加深阴影 */\r\n    transform: translateY(-2px); /* 轻微上浮 */\r\n    background-color: #5a6268;\r\n    color: var(--btn-hover-text); /* 悬停时改变文字颜色 */\r\n}\r\n</style>","import script from \"./manageSalesQuotations.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./manageSalesQuotations.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./manageSalesQuotations.vue?vue&type=style&index=0&id=205f15e4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-205f15e4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"vartree-tutorial\" }\nconst _hoisted_2 = { class: \"tutorial-content\" }\nconst _hoisted_3 = {\n  id: \"basic-usage\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_4 = { class: \"example-container\" }\nconst _hoisted_5 = { class: \"demo-area\" }\nconst _hoisted_6 = { class: \"example-container\" }\nconst _hoisted_7 = { class: \"demo-area\" }\nconst _hoisted_8 = { class: \"example-container\" }\nconst _hoisted_9 = { class: \"demo-area\" }\nconst _hoisted_10 = { class: \"example-container\" }\nconst _hoisted_11 = { class: \"demo-area\" }\nconst _hoisted_12 = {\n  id: \"simple-trees\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_13 = { class: \"example-container\" }\nconst _hoisted_14 = { class: \"demo-area\" }\nconst _hoisted_15 = { class: \"example-container\" }\nconst _hoisted_16 = { class: \"demo-area\" }\nconst _hoisted_17 = {\n  id: \"complex-trees\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_18 = { class: \"example-container\" }\nconst _hoisted_19 = { class: \"demo-area\" }\nconst _hoisted_20 = { class: \"example-container\" }\nconst _hoisted_21 = { class: \"demo-area\" }\nconst _hoisted_22 = {\n  id: \"slots-usage\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_23 = { class: \"example-container\" }\nconst _hoisted_24 = { class: \"demo-area\" }\nconst _hoisted_25 = [\"onClick\"]\nconst _hoisted_26 = [\"onClick\"]\nconst _hoisted_27 = { class: \"example-container\" }\nconst _hoisted_28 = { class: \"demo-area\" }\nconst _hoisted_29 = { class: \"custom-number-input\" }\nconst _hoisted_30 = [\"onClick\"]\nconst _hoisted_31 = [\"value\", \"onInput\"]\nconst _hoisted_32 = [\"onClick\"]\nconst _hoisted_33 = { class: \"example-container\" }\nconst _hoisted_34 = { class: \"demo-area\" }\nconst _hoisted_35 = { class: \"custom-wrapper\" }\nconst _hoisted_36 = { class: \"custom-label\" }\nconst _hoisted_37 = { class: \"custom-content\" }\nconst _hoisted_38 = [\"value\", \"onChange\"]\nconst _hoisted_39 = { class: \"example-container\" }\nconst _hoisted_40 = { class: \"demo-area\" }\nconst _hoisted_41 = { class: \"custom-date-input\" }\nconst _hoisted_42 = [\"value\", \"onInput\"]\nconst _hoisted_43 = [\"onClick\"]\nconst _hoisted_44 = [\"onClick\"]\nconst _hoisted_45 = {\n  id: \"hooks-usage\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_46 = { class: \"example-container\" }\nconst _hoisted_47 = { class: \"demo-area\" }\nconst _hoisted_48 = { class: \"example-container\" }\nconst _hoisted_49 = { class: \"demo-area\" }\nconst _hoisted_50 = {\n  id: \"css-deep\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_51 = { class: \"example-container\" }\nconst _hoisted_52 = { class: \"demo-area path-targeting-demo\" }\nconst _hoisted_53 = {\n  id: \"grid-layout\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_54 = { class: \"example-container\" }\nconst _hoisted_55 = { class: \"demo-area grid-basic-demo\" }\nconst _hoisted_56 = { class: \"example-container\" }\nconst _hoisted_57 = { class: \"demo-area grid-complex-demo\" }\nconst _hoisted_58 = { class: \"example-container\" }\nconst _hoisted_59 = { class: \"demo-area grid-slots-demo\" }\nconst _hoisted_60 = {\n  id: \"advanced-examples\",\n  class: \"tutorial-section\"\n}\nconst _hoisted_61 = { class: \"example-container\" }\nconst _hoisted_62 = { class: \"result-container\" }\nconst _hoisted_63 = { class: \"result-box\" }\nconst _hoisted_64 = { class: \"example-container\" }\nconst _hoisted_65 = { class: \"demo-area advanced-employee-demo\" }\nconst _hoisted_66 = [\"onClick\"]\nconst _hoisted_67 = { class: \"salary-input\" }\nconst _hoisted_68 = [\"value\", \"onInput\"]\n\nimport { markRaw } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport MyCustomInput from '@/test/varbox/MyCustomInput.vue'\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n// 基础示例\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'VarTreeTutorial',\n  setup(__props) {\n\r\nconst basicExamples = {\r\n  simpleString: createTreeFromConfig(\r\n    cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名')\r\n  ),\r\n  simpleNumber: createTreeFromConfig(\r\n    cns('number', 'leaf', 'age', 25, false, {}, [], '年龄')\r\n  ),\r\n  simpleDate: createTreeFromConfig(\r\n    cns('date', 'leaf', 'birthDate', '1995-01-01', false, {}, [], '出生日期')\r\n  ),\r\n  simpleSelection: createTreeFromConfig(\r\n    cns('selection', 'leaf', 'gender', '男', false, {\r\n      options: ['男', '女', '其他']\r\n    }, [], '性别')\r\n  )\r\n}\r\n\r\n// 简单树结构示例\r\nconst simpleTreeExamples = {\r\n  userInfo: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名'),\r\n      cns('number', 'leaf', 'age', 25, false, {}, [], '年龄'),\r\n      cns('string', 'leaf', 'email', 'zhang@example.com', false, {}, [], '邮箱'),\r\n      cns('selection', 'leaf', 'gender', '男', false, {\r\n        options: ['男', '女', '其他']\r\n      }, [], '性别')\r\n    ])\r\n  ),\r\n  simpleList: createTreeFromConfig(\r\n    cns('dynamiclist', 'list', 'hobbies', [], false, {}, [\r\n      cns('string', 'leaf', '', '阅读', false),\r\n      cns('string', 'leaf', '', '游泳', false),\r\n      cns('string', 'leaf', '', '编程', false)\r\n    ], '爱好列表')\r\n  )\r\n}\r\n\r\n// 复杂树结构示例\r\nconst complexTreeExamples = {\r\n  threeLevelDict: createTreeFromConfig(\r\n    cns('dict', 'dict', 'company', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '科技公司', false, {}, [], '公司名称'),\r\n      cns('dict', 'dict', 'address', {}, false, {}, [\r\n        cns('string', 'leaf', 'country', '中国', false, {}, [], '国家'),\r\n        cns('string', 'leaf', 'city', '北京', false, {}, [], '城市'),\r\n        cns('dict', 'dict', 'detail', {}, false, {}, [\r\n          cns('string', 'leaf', 'street', '中关村大街', false, {}, [], '街道'),\r\n          cns('string', 'leaf', 'building', '科技大厦', false, {}, [], '建筑物'),\r\n          cns('number', 'leaf', 'floor', 15, false, {}, [], '楼层')\r\n        ], '详细地址')\r\n      ], '地址信息')\r\n    ])\r\n  ),\r\n  employeeProjects: createTreeFromConfig(\r\n    cns('dict', 'dict', 'employee', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '李四', false, {}, [], '员工姓名'),\r\n      cns('dynamiclist', 'list', 'projects', [], false, {}, [\r\n        cns('dict', 'dict', '', {}, false, {}, [\r\n          cns('string', 'leaf', 'projectName', '项目A', false, {}, [], '项目名称'),\r\n          cns('date', 'leaf', 'startDate', '2024-01-01', false, {}, [], '开始日期'),\r\n          cns('date', 'leaf', 'endDate', '2024-06-30', false, {}, [], '结束日期'),\r\n          cns('selection', 'leaf', 'status', '进行中', false, {\r\n            options: ['未开始', '进行中', '已完成', '已暂停']\r\n          }, [], '状态')\r\n        ])\r\n      ], '项目列表')\r\n    ])\r\n  )\r\n}\r\n\r\n// 插槽示例\r\nconst slotExamples = {\r\n  extraSlot: createTreeFromConfig(\r\n    cns('string', 'leaf', '用户名', '张三', false, {}, [], '用户名')\r\n  ),\r\n  simpleSlot: createTreeFromConfig(\r\n    cns('number', 'leaf', '年龄', 25, false, {}, [], '年龄')\r\n  ),\r\n  wrapperSlot: createTreeFromConfig(\r\n    cns('selection', 'leaf', '性别', '男', false, {\r\n      options: ['男', '女', '其他']\r\n    }, [], '性别')\r\n  ),\r\n  dateSlot: createTreeFromConfig(\r\n    cns('date', 'leaf', '生日', '1995-01-01', false, {}, [], '生日')\r\n  )\r\n}\r\n\r\n// 钩子示例\r\nconst hookExamples = {\r\n  customComponent: createTreeFromConfig(\r\n    cns('string', 'leaf', 'customField', '自定义值', false, {\r\n      customComponent: markRaw(MyCustomInput)\r\n    }, [], '自定义字段')\r\n  ),\r\n  validationHook: createTreeFromConfig(\r\n    cns('string', 'leaf', 'email', 'test@example.com', false, {\r\n      customComponent: markRaw(MyCustomInput),\r\n      validators: [\r\n        {\r\n          creteria: (value: any) => {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n            return emailRegex.test(value)\r\n          },\r\n          message: '请输入有效的邮箱地址'\r\n        }\r\n      ]\r\n    }, [], '邮箱地址')\r\n  )\r\n}\r\n\r\n// CSS示例\r\nconst cssExamples = {\r\n  customForm: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '张三', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'zhang@example.com', false, {}, [], '邮箱'),\r\n      cns('number', 'leaf', 'age', 25, false, {}, [], '年龄')\r\n    ])\r\n  ),\r\n  pathTargeting: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('dict', 'dict', 'personalInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'name', '李四', false, {}, [], '姓名'),\r\n        cns('string', 'leaf', 'email', 'li@example.com', false, {}, [], '邮箱')\r\n      ], '个人信息'),\r\n      cns('dict', 'dict', 'workInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'company', '科技公司', false, {}, [], '公司'),\r\n        cns('string', 'leaf', 'position', '工程师', false, {}, [], '职位')\r\n      ], '工作信息')\r\n    ])\r\n  )\r\n}\r\n\r\n// Grid布局示例\r\nconst gridExamples = {\r\n  basicGrid: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '王五', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'wang@example.com', false, {}, [], '邮箱'),\r\n      cns('number', 'leaf', 'age', 30, false, {}, [], '年龄'),\r\n      cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话'),\r\n      cns('string', 'leaf', 'address', '北京市朝阳区', false, {}, [], '地址'),\r\n      cns('selection', 'leaf', 'gender', '男', false, {\r\n        options: ['男', '女', '其他']\r\n      }, [], '性别')\r\n    ])\r\n  ),\r\n  complexGrid: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '赵六', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'zhao@example.com', false, {}, [], '邮箱'),\r\n      cns('string', 'leaf', 'phone', '13900139000', false, {}, [], '电话'),\r\n      cns('number', 'leaf', 'age', 28, false, {}, [], '年龄'),\r\n      cns('string', 'leaf', 'address', '上海市浦东新区', false, {}, [], '地址'),\r\n      cns('selection', 'leaf', 'status', '在职', false, {\r\n        options: ['在职', '离职', '休假']\r\n      }, [], '状态')\r\n    ])\r\n  ),\r\n  gridWithSlots: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '孙七', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'sun@example.com', false, {}, [], '邮箱')\r\n    ])\r\n  )\r\n}\r\n\r\n// 高级示例\r\nconst advancedExamples = {\r\n\r\n  testHideComplexNodes: createTreeFromConfig(\r\n    cns('dict', 'dict', 'testRoot', null, false, {\r\n      hideList: ['hiddenDict', 'hiddenList'],\r\n      showWhiteList: ['visibleDict', 'visibleList']\r\n    }, [\r\n      cns('dict', 'dict', 'visibleDict', null, false, {}, [\r\n        cns('string', 'leaf', 'field1', 'value1', false, {}, [], '字段1')\r\n      ], '可见字典'),\r\n      cns('dict', 'dict', 'hiddenDict', null, false, {}, [\r\n        cns('string', 'leaf', 'field2', 'value2', false, {}, [], '字段2')\r\n      ], '隐藏字典'),\r\n      cns('dynamiclist', 'list', 'visibleList', null, false, {\r\n        childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\r\n      }, [], '可见列表'),\r\n      cns('dynamiclist', 'list', 'hiddenList', null, false, {\r\n        childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\r\n      }, [], '隐藏列表'),\r\n      cns('dict', 'dict', 'selfHiddenDict', null, false, {\r\n        hideSelf: true\r\n      }, [\r\n        cns('string', 'leaf', 'field3', 'value3', false, {}, [], '字段3')\r\n      ], '自隐藏字典')\r\n    ], '测试根节点')\r\n  ),\r\n\r\n  employeeForm: createTreeFromConfig(\r\n    cns('dict', 'dict', 'employeeInfo', {}, false, {}, [\r\n      cns('dict', 'dict', 'basicInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'name', '张三', false, {}, [], '姓名'),\r\n        cns('selection', 'leaf', 'gender', '男', false, {\r\n          options: ['男', '女', '其他']\r\n        }, [], '性别'),\r\n        cns('date', 'leaf', 'birthDate', '1990-01-01', false, {}, [], '出生日期'),\r\n        cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话')\r\n      ], '基本信息'),\r\n      cns('dict', 'dict', 'workInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'department', '技术部', false, {}, [], '部门'),\r\n        cns('string', 'leaf', 'position', '高级工程师', false, {}, [], '职位'),\r\n        cns('number', 'leaf', 'salary', 15000, false, {}, [], '薪资'),\r\n        cns('date', 'leaf', 'hireDate', '2020-01-01', false, {}, [], '入职日期')\r\n      ], '工作信息')\r\n    ])\r\n  )\r\n}\r\n\r\n// 事件处理函数\r\nconst handleSearch = (slotProps: any) => {\r\n  alert(`搜索: ${slotProps.allProps.modelValue}`)\r\n}\r\n\r\nconst handleClear = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = ''\r\n  }\r\n}\r\n\r\nconst increment = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    const currentValue = Number(slotProps.allProps.node.currentValue) || 0\r\n    slotProps.allProps.node.currentValue = currentValue + 1\r\n  }\r\n}\r\n\r\nconst decrement = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    const currentValue = Number(slotProps.allProps.node.currentValue) || 0\r\n    slotProps.allProps.node.currentValue = Math.max(0, currentValue - 1)\r\n  }\r\n}\r\n\r\nconst updateValue = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLInputElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = Number(target.value)\r\n  }\r\n}\r\n\r\nconst updateSelectValue = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLSelectElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = target.value\r\n  }\r\n}\r\n\r\nconst updateDateValue = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLInputElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = target.value\r\n  }\r\n}\r\n\r\nconst setToday = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    const today = new Date().toISOString().split('T')[0]\r\n    slotProps.allProps.node.currentValue = today\r\n  }\r\n}\r\n\r\nconst clearDate = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = ''\r\n  }\r\n}\r\n\r\nconst searchEmployee = (slotProps: any) => {\r\n  alert(`搜索员工: ${slotProps.allProps.modelValue}`)\r\n}\r\n\r\nconst updateSalary = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLInputElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = Number(target.value)\r\n  }\r\n}\r\n\r\nconst saveEmployee = () => {\r\n  alert('员工信息已保存')\r\n}\r\n\r\nconst resetEmployee = () => {\r\n  // 重置表单逻辑\r\n  alert('表单已重置')\r\n}\r\n\r\nconst deleteEmployee = () => {\r\n  if (confirm('确定要删除这个员工吗？')) {\r\n    alert('员工已删除')\r\n  }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _cache[63] || (_cache[63] = _createStaticVNode(\"<nav class=\\\"tutorial-nav show-side--away\\\" data-v-40018b34><h2 data-v-40018b34>教学目录</h2><ul data-v-40018b34><li data-v-40018b34><a href=\\\"#basic-usage\\\" data-v-40018b34>1. 基础用法</a></li><li data-v-40018b34><a href=\\\"#simple-trees\\\" data-v-40018b34>2. 简单树结构</a></li><li data-v-40018b34><a href=\\\"#complex-trees\\\" data-v-40018b34>3. 复杂树结构</a></li><li data-v-40018b34><a href=\\\"#slots-usage\\\" data-v-40018b34>4. 插槽用法详解</a></li><li data-v-40018b34><a href=\\\"#hooks-usage\\\" data-v-40018b34>5. 钩子用法详解</a></li><li data-v-40018b34><a href=\\\"#css-deep\\\" data-v-40018b34>6. Deep CSS 属性用法</a></li><li data-v-40018b34><a href=\\\"#grid-layout\\\" data-v-40018b34>7. Grid 布局控制</a></li><li data-v-40018b34><a href=\\\"#advanced-examples\\\" data-v-40018b34>8. 高级应用示例</a></li></ul></nav>\", 1)),\n    _createVNode(AppContent, {\n      stages: ['tutorial'],\n      hideBottomBar: true\n    }, {\n      \"stage-tutorial\": _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"section\", _hoisted_3, [\n              _cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"1. 基础用法\", -1)),\n              _cache[9] || (_cache[9] = _createElementVNode(\"p\", null, \"VarTree是一个用于管理复杂数据结构的工具类，VarInput是对应的渲染组件。\", -1)),\n              _createElementVNode(\"div\", _hoisted_4, [\n                _cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"1.1 最简单的字符串输入\", -1)),\n                _cache[1] || (_cache[1] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const simpleString = createTreeFromConfig(\\n          cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"simpleString\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 基础样式，无需额外定制 */\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _createVNode(VarBox, {\n                    tree: basicExamples.simpleString\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_6, [\n                _cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"1.2 数字输入\", -1)),\n                _cache[3] || (_cache[3] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const simpleNumber = createTreeFromConfig(\\n          cns('number', 'leaf', 'age', 25, false, {}, [], '年龄')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"simpleNumber\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 基础样式，无需额外定制 */\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createVNode(VarBox, {\n                    tree: basicExamples.simpleNumber\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_8, [\n                _cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"1.3 日期输入\", -1)),\n                _cache[5] || (_cache[5] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const simpleDate = createTreeFromConfig(\\n          cns('date', 'leaf', 'birthDate', '1995-01-01', false, {}, [], '出生日期')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"simpleDate\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 基础样式，无需额外定制 */\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createVNode(VarBox, {\n                    tree: basicExamples.simpleDate\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_10, [\n                _cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"1.4 选择输入\", -1)),\n                _cache[7] || (_cache[7] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const simpleSelection = createTreeFromConfig(\\n          cns('selection', 'leaf', 'gender', '男', false, {\\n            options: ['男', '女', '其他']\\n          }, [], '性别')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"simpleSelection\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 基础样式，无需额外定制 */\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createVNode(VarBox, {\n                    tree: basicExamples.simpleSelection\n                  }, null, 8, [\"tree\"])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"section\", _hoisted_12, [\n              _cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"2. 简单树结构\", -1)),\n              _cache[15] || (_cache[15] = _createElementVNode(\"p\", null, \"展示如何构建包含多个字段的字典结构。\", -1)),\n              _createElementVNode(\"div\", _hoisted_13, [\n                _cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"2.1 用户信息表单\", -1)),\n                _cache[11] || (_cache[11] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        // 使用 cns 快速构建结构\\n        const userInfo = createTreeFromConfig(\\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\\n            cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名'),\\n            cns('number', 'leaf', 'age', 25, false, {}, [], '年龄'),\\n            cns('string', 'leaf', 'email', 'zhang@example.com', false, {}, [], '邮箱'),\\n            cns('selection', 'leaf', 'gender', '男', false, {\\n              options: ['男', '女', '其他']\\n            }, [], '性别')\\n          ])\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"userInfo\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 字典结构的基础样式 */\\n        :deep(.userInfo--dict-header) {\\n          background: #f8f9fa;\\n          padding: 10px;\\n          border-radius: 6px;\\n          margin-bottom: 10px;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _createVNode(VarBox, {\n                    tree: simpleTreeExamples.userInfo\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_15, [\n                _cache[12] || (_cache[12] = _createElementVNode(\"h3\", null, \"2.2 简单列表结构\", -1)),\n                _cache[13] || (_cache[13] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const simpleList = createTreeFromConfig(\\n          cns('dynamiclist', 'list', 'hobbies', [], false, {}, [\\n            cns('string', 'leaf', '', '阅读', false),\\n            cns('string', 'leaf', '', '游泳', false),\\n            cns('string', 'leaf', '', '编程', false)\\n          ], '爱好列表')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"simpleList\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 动态列表的样式 */\\n        :deep(.hobbies--list-header) {\\n          background: #e3f2fd;\\n          padding: 10px;\\n          border-radius: 6px;\\n        }\\n\\n        :deep(.hobbies--list-item) {\\n          margin: 5px 0;\\n          padding: 8px;\\n          border: 1px solid #e0e0e0;\\n          border-radius: 4px;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_16, [\n                  _createVNode(VarBox, {\n                    tree: simpleTreeExamples.simpleList\n                  }, null, 8, [\"tree\"])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"section\", _hoisted_17, [\n              _cache[20] || (_cache[20] = _createElementVNode(\"h2\", null, \"3. 复杂树结构\", -1)),\n              _cache[21] || (_cache[21] = _createElementVNode(\"p\", null, \"展示多层嵌套的复杂数据结构。\", -1)),\n              _createElementVNode(\"div\", _hoisted_18, [\n                _cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"3.1 三层字典嵌套\", -1)),\n                _cache[17] || (_cache[17] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const threeLevelDict = createTreeFromConfig(\\n          cns('dict', 'dict', 'company', {}, false, {}, [\\n            cns('string', 'leaf', 'name', '科技公司', false, {}, [], '公司名称'),\\n            cns('dict', 'dict', 'address', {}, false, {}, [\\n              cns('string', 'leaf', 'country', '中国', false, {}, [], '国家'),\\n              cns('string', 'leaf', 'city', '北京', false, {}, [], '城市'),\\n              cns('dict', 'dict', 'detail', {}, false, {}, [\\n                cns('string', 'leaf', 'street', '中关村大街', false, {}, [], '街道'),\\n                cns('string', 'leaf', 'building', '科技大厦', false, {}, [], '建筑物'),\\n                cns('number', 'leaf', 'floor', 15, false, {}, [], '楼层')\\n              ], '详细地址')\\n            ], '地址信息')\\n          ])\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"threeLevelDict\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 多层嵌套的样式 */\\n        :deep(.company--dict-header) {\\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n          color: white;\\n        }\\n\\n        :deep(.company-address--dict-header) {\\n          background: #f0f8ff;\\n          border-left: 4px solid #4a90e2;\\n        }\\n\\n        :deep(.company-address-detail--dict-header) {\\n          background: #fff3cd;\\n          border-left: 4px solid #ffc107;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_19, [\n                  _createVNode(VarBox, {\n                    tree: complexTreeExamples.threeLevelDict\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_20, [\n                _cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"3.2 员工项目管理（复杂嵌套）\", -1)),\n                _cache[19] || (_cache[19] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const employeeProjects = createTreeFromConfig(\\n          cns('dict', 'dict', 'employee', {}, false, {}, [\\n            cns('string', 'leaf', 'name', '李四', false, {}, [], '员工姓名'),\\n            cns('dynamiclist', 'list', 'projects', [], false, {}, [\\n              cns('dict', 'dict', '', {}, false, {}, [\\n                cns('string', 'leaf', 'projectName', '项目A', false, {}, [], '项目名称'),\\n                cns('date', 'leaf', 'startDate', '2024-01-01', false, {}, [], '开始日期'),\\n                cns('date', 'leaf', 'endDate', '2024-06-30', false, {}, [], '结束日期'),\\n                cns('selection', 'leaf', 'status', '进行中', false, {\\n                  options: ['未开始', '进行中', '已完成', '已暂停']\\n                }, [], '状态')\\n              ])\\n            ], '项目列表')\\n          ])\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"employeeProjects\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 员工项目管理的样式 */\\n        :deep(.employee--dict-header) {\\n          background: #28a745;\\n          color: white;\\n          padding: 12px;\\n          border-radius: 8px;\\n        }\\n\\n        :deep(.employee-projects--list-header) {\\n          background: #17a2b8;\\n          color: white;\\n          padding: 10px;\\n        }\\n\\n        :deep(.employee-projects--list-item) {\\n          border: 2px solid #17a2b8;\\n          border-radius: 8px;\\n          margin: 10px 0;\\n          padding: 15px;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_21, [\n                  _createVNode(VarBox, {\n                    tree: complexTreeExamples.employeeProjects\n                  }, null, 8, [\"tree\"])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"section\", _hoisted_22, [\n              _cache[31] || (_cache[31] = _createElementVNode(\"h2\", null, \"4. 插槽用法详解\", -1)),\n              _cache[32] || (_cache[32] = _createElementVNode(\"p\", null, \"VarInput组件提供了多种插槽，允许你完全自定义组件的外观和行为。\", -1)),\n              _createElementVNode(\"div\", _hoisted_23, [\n                _cache[22] || (_cache[22] = _createElementVNode(\"h3\", null, \"4.1 --extra 插槽：添加额外按钮\", -1)),\n                _cache[23] || (_cache[23] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const extraSlot = createTreeFromConfig(\\n          cns('string', 'leaf', '用户名', '张三', false, {}, [], '用户名')\\n        )\\n\\n        const handleSearch = (slotProps: any) => {\\n          alert(`搜索: ${slotProps.allProps.modelValue}`)\\n        }\\n\\n        const handleClear = (slotProps: any) => {\\n          if (slotProps.allProps.node) {\\n            slotProps.allProps.node.currentValue = ''\\n          }\\n        }\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"extraSlot\\\">\\n            <template #用户名--extra=\\\"slotProps\\\">\\n              <button\\n                class=\\\"search-btn\\\"\\n                @click=\\\"handleSearch(slotProps)\\\"\\n              >\\n                🔍 搜索\\n              </button>\\n              <button\\n                class=\\\"clear-btn\\\"\\n                @click=\\\"handleClear(slotProps)\\\"\\n              >\\n                ✖️ 清除\\n              </button>\\n            </template>\\n          </VarBox>\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        .search-btn, .clear-btn {\\n          margin-left: 8px;\\n          padding: 6px 12px;\\n          border: none;\\n          border-radius: 4px;\\n          cursor: pointer;\\n          font-size: 12px;\\n          transition: background-color 0.3s ease;\\n        }\\n\\n        .search-btn {\\n          background: #28a745;\\n          color: white;\\n        }\\n\\n        .search-btn:hover {\\n          background: #218838;\\n        }\\n\\n        .clear-btn {\\n          background: #dc3545;\\n          color: white;\\n        }\\n\\n        .clear-btn:hover {\\n          background: #c82333;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_24, [\n                  _createVNode(VarBox, {\n                    tree: slotExamples.extraSlot\n                  }, {\n                    \"用户名--extra\": _withCtx((slotProps) => [\n                      _createElementVNode(\"button\", {\n                        class: \"search-btn\",\n                        onClick: ($event: any) => (handleSearch(slotProps))\n                      }, \"🔍 搜索\", 8, _hoisted_25),\n                      _createElementVNode(\"button\", {\n                        class: \"clear-btn\",\n                        onClick: ($event: any) => (handleClear(slotProps))\n                      }, \"✖️ 清除\", 8, _hoisted_26)\n                    ]),\n                    _: 1\n                  }, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_27, [\n                _cache[24] || (_cache[24] = _createElementVNode(\"h3\", null, \"4.2 --simple 插槽：完全自定义输入组件\", -1)),\n                _cache[25] || (_cache[25] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const simpleSlot = createTreeFromConfig(\\n          cns('number', 'leaf', '年龄', 25, false, {}, [], '年龄')\\n        )\\n\\n        const increment = (slotProps: any) => {\\n          if (slotProps.allProps.node) {\\n            const currentValue = Number(slotProps.allProps.node.currentValue) || 0\\n            slotProps.allProps.node.currentValue = currentValue + 1\\n          }\\n        }\\n\\n        const decrement = (slotProps: any) => {\\n          if (slotProps.allProps.node) {\\n            const currentValue = Number(slotProps.allProps.node.currentValue) || 0\\n            slotProps.allProps.node.currentValue = Math.max(0, currentValue - 1)\\n          }\\n        }\\n\\n        const updateValue = (slotProps: any, event: Event) => {\\n          const target = event.target as HTMLInputElement\\n          if (slotProps.allProps.node) {\\n            slotProps.allProps.node.currentValue = Number(target.value)\\n          }\\n        }\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"simpleSlot\\\">\\n            <template #年龄--simple=\\\"slotProps\\\">\\n              <div class=\\\"custom-number-input\\\">\\n                <button @click=\\\"decrement(slotProps)\\\">-</button>\\n                <input\\n                  :value=\\\"slotProps.allProps.modelValue\\\"\\n                  @input=\\\"updateValue(slotProps, $event)\\\"\\n                  type=\\\"number\\\"\\n                  class=\\\"number-display\\\"\\n                />\\n                <button @click=\\\"increment(slotProps)\\\">+</button>\\n              </div>\\n            </template>\\n          </VarBox>\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        .custom-number-input {\\n          display: flex;\\n          align-items: center;\\n          gap: 8px;\\n          border: 1px solid #ddd;\\n          border-radius: 4px;\\n          padding: 4px;\\n        }\\n\\n        .custom-number-input button {\\n          width: 30px;\\n          height: 30px;\\n          border: none;\\n          background: #007bff;\\n          color: white;\\n          border-radius: 4px;\\n          cursor: pointer;\\n          font-weight: bold;\\n        }\\n\\n        .custom-number-input button:hover {\\n          background: #0056b3;\\n        }\\n\\n        .number-display {\\n          width: 80px;\\n          text-align: center;\\n          border: none;\\n          outline: none;\\n          font-size: 16px;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_28, [\n                  _createVNode(VarBox, {\n                    tree: slotExamples.simpleSlot\n                  }, {\n                    \"年龄--simple\": _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_29, [\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (decrement(slotProps))\n                        }, \"-\", 8, _hoisted_30),\n                        _createElementVNode(\"input\", {\n                          value: slotProps.allProps.modelValue,\n                          onInput: ($event: any) => (updateValue(slotProps, $event)),\n                          type: \"number\",\n                          class: \"number-display\"\n                        }, null, 40, _hoisted_31),\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (increment(slotProps))\n                        }, \"+\", 8, _hoisted_32)\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_33, [\n                _cache[27] || (_cache[27] = _createElementVNode(\"h3\", null, \"4.3 --wrapper 插槽：完全自定义容器\", -1)),\n                _cache[28] || (_cache[28] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const wrapperSlot = createTreeFromConfig(\\n          cns('selection', 'leaf', '性别', '男', false, {\\n            options: ['男', '女', '其他']\\n          }, [], '性别')\\n        )\\n\\n        const updateSelectValue = (slotProps: any, event: Event) => {\\n          const target = event.target as HTMLSelectElement\\n          if (slotProps.allProps.node) {\\n            slotProps.allProps.node.currentValue = target.value\\n          }\\n        }\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"wrapperSlot\\\">\\n            <template #性别--wrapper=\\\"slotProps\\\">\\n              <div class=\\\"custom-wrapper\\\">\\n                <div class=\\\"custom-label\\\">\\n                  {{ slotProps.allProps.node?.nameDisplay }}\\n                </div>\\n                <div class=\\\"custom-content\\\">\\n                  <select\\n                    :value=\\\"slotProps.allProps.modelValue\\\"\\n                    @change=\\\"updateSelectValue(slotProps, $event)\\\"\\n                    class=\\\"custom-select\\\"\\n                  >\\n                    <option value=\\\"男\\\">👨 男</option>\\n                    <option value=\\\"女\\\">👩 女</option>\\n                    <option value=\\\"其他\\\">🤖 其他</option>\\n                  </select>\\n                </div>\\n              </div>\\n            </template>\\n          </VarBox>\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        .custom-wrapper {\\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n          color: white;\\n          padding: 15px;\\n          border-radius: 8px;\\n          box-shadow: 0 4px 6px rgba(0,0,0,0.1);\\n        }\\n\\n        .custom-label {\\n          font-weight: bold;\\n          margin-bottom: 8px;\\n          font-size: 14px;\\n        }\\n\\n        .custom-content {\\n          display: flex;\\n          align-items: center;\\n        }\\n\\n        .custom-select {\\n          background: white;\\n          color: #333;\\n          border: none;\\n          padding: 8px 12px;\\n          border-radius: 4px;\\n          font-size: 14px;\\n          cursor: pointer;\\n          width: 100%;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_34, [\n                  _createVNode(VarBox, {\n                    tree: slotExamples.wrapperSlot\n                  }, {\n                    \"性别--wrapper\": _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_35, [\n                        _createElementVNode(\"div\", _hoisted_36, _toDisplayString(slotProps.allProps.node?.nameDisplay), 1),\n                        _createElementVNode(\"div\", _hoisted_37, [\n                          _createElementVNode(\"select\", {\n                            value: slotProps.allProps.modelValue,\n                            onChange: ($event: any) => (updateSelectValue(slotProps, $event)),\n                            class: \"custom-select\"\n                          }, _cache[26] || (_cache[26] = [\n                            _createElementVNode(\"option\", { value: \"男\" }, \"👨 男\", -1),\n                            _createElementVNode(\"option\", { value: \"女\" }, \"👩 女\", -1),\n                            _createElementVNode(\"option\", { value: \"其他\" }, \"🤖 其他\", -1)\n                          ]), 40, _hoisted_38)\n                        ])\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_39, [\n                _cache[29] || (_cache[29] = _createElementVNode(\"h3\", null, \"4.4 --simple-input-group 插槽：日期输入自定义\", -1)),\n                _cache[30] || (_cache[30] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const dateSlot = createTreeFromConfig(\\n          cns('date', 'leaf', '生日', '1995-01-01', false, {}, [], '生日')\\n        )\\n\\n        const updateDateValue = (slotProps: any, event: Event) => {\\n          const target = event.target as HTMLInputElement\\n          if (slotProps.allProps.node) {\\n            slotProps.allProps.node.currentValue = target.value\\n          }\\n        }\\n\\n        const setToday = (slotProps: any) => {\\n          if (slotProps.allProps.node) {\\n            const today = new Date().toISOString().split('T')[0]\\n            slotProps.allProps.node.currentValue = today\\n          }\\n        }\\n\\n        const clearDate = (slotProps: any) => {\\n          if (slotProps.allProps.node) {\\n            slotProps.allProps.node.currentValue = ''\\n          }\\n        }\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"dateSlot\\\">\\n            <template #生日--simple-input-group=\\\"slotProps\\\">\\n              <div class=\\\"custom-date-input\\\">\\n                <input\\n                  :value=\\\"slotProps.allProps.modelValue\\\"\\n                  @input=\\\"updateDateValue(slotProps, $event)\\\"\\n                  type=\\\"date\\\"\\n                  class=\\\"date-picker\\\"\\n                />\\n                <button @click=\\\"setToday(slotProps)\\\" class=\\\"today-btn\\\">\\n                  今天\\n                </button>\\n                <button @click=\\\"clearDate(slotProps)\\\" class=\\\"clear-btn\\\">\\n                  清除\\n                </button>\\n              </div>\\n            </template>\\n          </VarBox>\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        .custom-date-input {\\n          display: flex;\\n          align-items: center;\\n          gap: 8px;\\n        }\\n\\n        .date-picker {\\n          flex: 1;\\n          padding: 8px;\\n          border: 1px solid #ddd;\\n          border-radius: 4px;\\n        }\\n\\n        .today-btn, .clear-btn {\\n          padding: 8px 12px;\\n          border: none;\\n          border-radius: 4px;\\n          cursor: pointer;\\n          font-size: 12px;\\n        }\\n\\n        .today-btn {\\n          background: #17a2b8;\\n          color: white;\\n        }\\n\\n        .today-btn:hover {\\n          background: #138496;\\n        }\\n\\n        .clear-btn {\\n          background: #dc3545;\\n          color: white;\\n        }\\n\\n        .clear-btn:hover {\\n          background: #c82333;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_40, [\n                  _createVNode(VarBox, {\n                    tree: slotExamples.dateSlot\n                  }, {\n                    \"生日--simple-input-group\": _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_41, [\n                        _createElementVNode(\"input\", {\n                          value: slotProps.allProps.modelValue,\n                          onInput: ($event: any) => (updateDateValue(slotProps, $event)),\n                          type: \"date\",\n                          class: \"date-picker\"\n                        }, null, 40, _hoisted_42),\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (setToday(slotProps)),\n                          class: \"today-btn\"\n                        }, \"今天\", 8, _hoisted_43),\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (clearDate(slotProps)),\n                          class: \"clear-btn\"\n                        }, \"清除\", 8, _hoisted_44)\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"tree\"])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"section\", _hoisted_45, [\n              _cache[37] || (_cache[37] = _createElementVNode(\"h2\", null, \"5. 钩子用法详解\", -1)),\n              _cache[38] || (_cache[38] = _createElementVNode(\"p\", null, \"通过config.customComponent可以注册自定义组件作为钩子。\", -1)),\n              _createElementVNode(\"div\", _hoisted_46, [\n                _cache[33] || (_cache[33] = _createElementVNode(\"h3\", null, \"5.1 自定义组件钩子\", -1)),\n                _cache[34] || (_cache[34] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { markRaw } from 'vue'\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n        import MyCustomInput from '@/test/varbox/MyCustomInput.vue'\\n\\n        // 创建自定义组件\\n        const CustomInput = {\\n          props: ['modelValue', 'readonly', 'placeholder'],\\n          emits: ['update:modelValue'],\\n          template: `\\n            <div class=\\\"custom-hook-input\\\">\\n              <span>🎯 自定义钩子组件</span>\\n              <input\\n                :value=\\\"modelValue\\\"\\n                @input=\\\"$emit('update:modelValue', $event.target.value)\\\"\\n                :readonly=\\\"readonly\\\"\\n                :placeholder=\\\"placeholder\\\"\\n              />\\n            </div>\\n          `\\n        }\\n\\n        // 在配置中使用\\n        const customComponent = createTreeFromConfig(\\n          cns('string', 'leaf', 'customField', '自定义值', false, {\\n            customComponent: markRaw(MyCustomInput)\\n          }, [], '自定义字段')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"customComponent\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 自定义钩子组件的样式 */\\n        :deep(.custom-hook-input) {\\n          display: flex;\\n          align-items: center;\\n          gap: 10px;\\n          padding: 10px;\\n          background: #e8f5e8;\\n          border: 2px solid #28a745;\\n          border-radius: 6px;\\n        }\\n\\n        :deep(.custom-hook-input span) {\\n          font-weight: bold;\\n          color: #28a745;\\n        }\\n\\n        :deep(.custom-hook-input input) {\\n          flex: 1;\\n          padding: 8px;\\n          border: 1px solid #28a745;\\n          border-radius: 4px;\\n          outline: none;\\n        }\\n\\n        :deep(.custom-hook-input input:focus) {\\n          box-shadow: 0 0 0 2px rgba(40, 167, 69, 0.25);\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_47, [\n                  _createVNode(VarBox, {\n                    tree: hookExamples.customComponent\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_48, [\n                _cache[35] || (_cache[35] = _createElementVNode(\"h3\", null, \"5.2 带验证的自定义钩子\", -1)),\n                _cache[36] || (_cache[36] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { markRaw } from 'vue'\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n        import MyCustomInput from '@/test/varbox/MyCustomInput.vue'\\n\\n        const validationHook = createTreeFromConfig(\\n          cns('string', 'leaf', 'email', 'test@example.com', false, {\\n            customComponent: markRaw(MyCustomInput),\\n            validators: [\\n              {\\n                creteria: (value: any) => {\\n                  const emailRegex = /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/\\n                  return emailRegex.test(value)\\n                },\\n                message: '请输入有效的邮箱地址'\\n              }\\n            ]\\n          }, [], '邮箱地址')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"validationHook\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 验证钩子的样式 */\\n        :deep(.email--wrapper.error) {\\n          border: 2px solid #dc3545;\\n          background: #f8d7da;\\n        }\\n\\n        :deep(.email--error-message) {\\n          color: #dc3545;\\n          font-size: 12px;\\n          margin-top: 5px;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_49, [\n                  _createVNode(VarBox, {\n                    tree: hookExamples.validationHook\n                  }, null, 8, [\"tree\"])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"section\", _hoisted_50, [\n              _cache[41] || (_cache[41] = _createElementVNode(\"h2\", null, \"6. Deep CSS 属性用法\", -1)),\n              _cache[42] || (_cache[42] = _createElementVNode(\"p\", null, \"使用:deep()选择器可以穿透作用域样式，精确控制VarInput组件的样式。\", -1)),\n              _createElementVNode(\"div\", _hoisted_51, [\n                _cache[39] || (_cache[39] = _createElementVNode(\"h3\", null, \"6.1 通过路径精确定位节点\", -1)),\n                _cache[40] || (_cache[40] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const pathTargeting = createTreeFromConfig(\\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\\n            cns('dict', 'dict', 'personalInfo', {}, false, {}, [\\n              cns('string', 'leaf', 'name', '李四', false, {}, [], '姓名'),\\n              cns('string', 'leaf', 'email', 'li@example.com', false, {}, [], '邮箱')\\n            ], '个人信息'),\\n            cns('dict', 'dict', 'workInfo', {}, false, {}, [\\n              cns('string', 'leaf', 'company', '科技公司', false, {}, [], '公司'),\\n              cns('string', 'leaf', 'position', '工程师', false, {}, [], '职位')\\n            ], '工作信息')\\n          ])\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"pathTargeting\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 通过路径字符串精确定位特定节点 */\\n        :deep(.userInfo-personalInfo-name--wrapper) {\\n          background: linear-gradient(45deg, #ff6b6b, #feca57);\\n          color: white;\\n          padding: 10px;\\n          border-radius: 6px;\\n        }\\n\\n        :deep(.userInfo-personalInfo-email--leaf-input-container) {\\n          border: 2px solid #48cae4;\\n          border-radius: 20px;\\n          padding: 5px;\\n        }\\n\\n        :deep(.userInfo-workInfo--wrapper) {\\n          background: #f0f8ff;\\n          border: 1px solid #4a90e2;\\n          border-radius: 8px;\\n          padding: 15px;\\n          margin: 10px 0;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_52, [\n                  _createVNode(VarBox, {\n                    tree: cssExamples.pathTargeting\n                  }, null, 8, [\"tree\"])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"section\", _hoisted_53, [\n              _cache[50] || (_cache[50] = _createElementVNode(\"h2\", null, \"7. Grid 布局控制\", -1)),\n              _cache[51] || (_cache[51] = _createElementVNode(\"p\", null, \"通过:deep()选择器控制字典节点的叶子部分使用Grid布局，实现复杂的表单布局。\", -1)),\n              _createElementVNode(\"div\", _hoisted_54, [\n                _cache[43] || (_cache[43] = _createElementVNode(\"h3\", null, \"7.1 基础Grid布局\", -1)),\n                _cache[44] || (_cache[44] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const basicGrid = createTreeFromConfig(\\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\\n            cns('string', 'leaf', 'name', '王五', false, {}, [], '姓名'),\\n            cns('string', 'leaf', 'email', 'wang@example.com', false, {}, [], '邮箱'),\\n            cns('number', 'leaf', 'age', 30, false, {}, [], '年龄'),\\n            cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话'),\\n            cns('string', 'leaf', 'address', '北京市朝阳区', false, {}, [], '地址'),\\n            cns('selection', 'leaf', 'gender', '男', false, {\\n              options: ['男', '女', '其他']\\n            }, [], '性别')\\n          ])\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"basicGrid\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 设置Grid布局 - 通过路径定位 */\\n        :deep(.userInfo--dict-leaf-section) {\\n          display: grid;\\n          grid-template-columns: 1fr 1fr 1fr;\\n          gap: 20px;\\n          padding: 20px;\\n          background: #f8f9fa;\\n          border-radius: 8px;\\n          margin: 10px 0;\\n        }\\n\\n        /* 字段自动排列，无需指定位置 */\\n        :deep(.userInfo--dict-leaf-section > *) {\\n          background: white;\\n          padding: 10px;\\n          border-radius: 4px;\\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_55, [\n                  _createVNode(VarBox, {\n                    tree: gridExamples.basicGrid\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_56, [\n                _cache[45] || (_cache[45] = _createElementVNode(\"h3\", null, \"7.2 复杂Grid布局 - 指定位置\", -1)),\n                _cache[46] || (_cache[46] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const complexGrid = createTreeFromConfig(\\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\\n            cns('string', 'leaf', 'name', '赵六', false, {}, [], '姓名'),\\n            cns('string', 'leaf', 'email', 'zhao@example.com', false, {}, [], '邮箱'),\\n            cns('string', 'leaf', 'phone', '13900139000', false, {}, [], '电话'),\\n            cns('number', 'leaf', 'age', 28, false, {}, [], '年龄'),\\n            cns('string', 'leaf', 'address', '上海市浦东新区', false, {}, [], '地址'),\\n            cns('selection', 'leaf', 'status', '在职', false, {\\n              options: ['在职', '离职', '休假']\\n            }, [], '状态')\\n          ])\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"complexGrid\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 复杂Grid布局，指定每个字段的位置 */\\n        :deep(.userInfo--dict-leaf-section) {\\n          display: grid;\\n          grid-template-columns: repeat(4, 1fr);\\n          gap: 15px;\\n          padding: 20px;\\n          background: #fff3cd;\\n          border-radius: 8px;\\n        }\\n\\n        /* 通过路径精确指定每个字段的位置 */\\n        :deep(.userInfo-name--wrapper) {\\n          grid-row: 1;\\n          grid-column: 1 / 3;\\n        }\\n        :deep(.userInfo-email--wrapper) {\\n          grid-row: 1;\\n          grid-column: 3 / 5;\\n        }\\n        :deep(.userInfo-phone--wrapper) {\\n          grid-row: 2;\\n          grid-column: 1;\\n        }\\n        :deep(.userInfo-age--wrapper) {\\n          grid-row: 2;\\n          grid-column: 2;\\n        }\\n        :deep(.userInfo-address--wrapper) {\\n          grid-row: 2;\\n          grid-column: 3;\\n        }\\n        :deep(.userInfo-status--wrapper) {\\n          grid-row: 2;\\n          grid-column: 4;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_57, [\n                  _createVNode(VarBox, {\n                    tree: gridExamples.complexGrid\n                  }, null, 8, [\"tree\"])\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_58, [\n                _cache[48] || (_cache[48] = _createElementVNode(\"h3\", null, \"7.3 使用插槽添加额外叶子节点\", -1)),\n                _cache[49] || (_cache[49] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        const gridWithSlots = createTreeFromConfig(\\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\\n            cns('string', 'leaf', 'name', '孙七', false, {}, [], '姓名'),\\n            cns('string', 'leaf', 'email', 'sun@example.com', false, {}, [], '邮箱')\\n          ])\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"gridWithSlots\\\">\\n            <template #userInfo--leaf>\\n              <div class=\\\"extra-grid-item\\\">\\n                <label>额外信息</label>\\n                <div class=\\\"extra-content\\\">\\n                  这是通过插槽添加的额外内容\\n                </div>\\n              </div>\\n            </template>\\n          </VarBox>\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* CSS控制额外节点的位置 */\\n        :deep(.userInfo--dict-leaf-section) {\\n          display: grid;\\n          grid-template-columns: repeat(3, 1fr);\\n          gap: 15px;\\n          padding: 20px;\\n          background: #e8f5e8;\\n          border-radius: 8px;\\n          margin: 10px 0;\\n        }\\n\\n        .extra-grid-item {\\n          grid-column: 3;  /* 放在第3列 */\\n          grid-row: 1;\\n          background: #e3f2fd;\\n          padding: 15px;\\n          border-radius: 6px;\\n          border: 2px dashed #2196f3;\\n        }\\n\\n        .extra-content {\\n          margin-top: 8px;\\n          font-style: italic;\\n          color: #1976d2;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_59, [\n                  _createVNode(VarBox, {\n                    tree: gridExamples.gridWithSlots\n                  }, {\n                    \"userInfo--leaf\": _withCtx(() => _cache[47] || (_cache[47] = [\n                      _createElementVNode(\"div\", { class: \"extra-grid-item\" }, [\n                        _createElementVNode(\"label\", null, \"额外信息\"),\n                        _createElementVNode(\"div\", { class: \"extra-content\" }, \"这是通过插槽添加的额外内容\")\n                      ], -1)\n                    ])),\n                    _: 1\n                  }, 8, [\"tree\"])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"section\", _hoisted_60, [\n              _cache[61] || (_cache[61] = _createElementVNode(\"h2\", null, \"8. 高级应用示例\", -1)),\n              _cache[62] || (_cache[62] = _createElementVNode(\"p\", null, \"综合运用所有特性的实际应用场景。\", -1)),\n              _createElementVNode(\"div\", _hoisted_61, [\n                _cache[54] || (_cache[54] = _createElementVNode(\"h3\", null, \"8.1 复杂节点隐藏功能测试\", -1)),\n                _cache[55] || (_cache[55] = _createElementVNode(\"p\", null, \"测试 hideSelf、hideList、showWhiteList 对复杂节点（dict和list）的隐藏效果。\", -1)),\n                _cache[56] || (_cache[56] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        // 测试复杂节点隐藏功能\\n        const testHideComplexNodes = createTreeFromConfig(\\n          cns('dict', 'dict', 'testRoot', null, false, {\\n            hideList: ['hiddenDict', 'hiddenList'],\\n            showWhiteList: ['visibleDict', 'visibleList']\\n          }, [\\n            cns('dict', 'dict', 'visibleDict', null, false, {}, [\\n              cns('string', 'leaf', 'field1', 'value1', false, {}, [], '字段1')\\n            ], '可见字典'),\\n            cns('dict', 'dict', 'hiddenDict', null, false, {}, [\\n              cns('string', 'leaf', 'field2', 'value2', false, {}, [], '字段2')\\n            ], '隐藏字典'),\\n            cns('dynamiclist', 'list', 'visibleList', null, false, {\\n              childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\\n            }, [], '可见列表'),\\n            cns('dynamiclist', 'list', 'hiddenList', null, false, {\\n              childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\\n            }, [], '隐藏列表'),\\n            cns('dict', 'dict', 'selfHiddenDict', null, false, {\\n              hideSelf: true\\n            }, [\\n              cns('string', 'leaf', 'field3', 'value3', false, {}, [], '字段3')\\n            ], '自隐藏字典')\\n          ], '测试根节点')\\n        )\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"testHideComplexNodes\\\" />\\n        </template>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_62, [\n                  _cache[52] || (_cache[52] = _createElementVNode(\"h4\", null, \"运行结果\", -1)),\n                  _createElementVNode(\"div\", _hoisted_63, [\n                    _createVNode(VarBox, {\n                      tree: advancedExamples.testHideComplexNodes\n                    }, null, 8, [\"tree\"])\n                  ]),\n                  _cache[53] || (_cache[53] = _createElementVNode(\"div\", { class: \"explanation\" }, [\n                    _createElementVNode(\"p\", null, [\n                      _createElementVNode(\"strong\", null, \"预期结果：\")\n                    ]),\n                    _createElementVNode(\"ul\", null, [\n                      _createElementVNode(\"li\", null, \"✅ 只显示 \\\"可见字典\\\" 和 \\\"可见列表\\\"\"),\n                      _createElementVNode(\"li\", null, \"❌ \\\"隐藏字典\\\" 被 hideList 隐藏\"),\n                      _createElementVNode(\"li\", null, \"❌ \\\"隐藏列表\\\" 被 hideList 隐藏\"),\n                      _createElementVNode(\"li\", null, \"❌ \\\"自隐藏字典\\\" 被 hideSelf 隐藏\")\n                    ]),\n                    _createElementVNode(\"p\", null, [\n                      _createElementVNode(\"strong\", null, \"说明：\"),\n                      _createTextVNode(\"showWhiteList 优先级高于 hideList，只有白名单中的节点会显示。\")\n                    ])\n                  ], -1))\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_64, [\n                _cache[59] || (_cache[59] = _createElementVNode(\"h3\", null, \"8.2 员工管理表单 - 综合示例\", -1)),\n                _cache[60] || (_cache[60] = _createElementVNode(\"div\", { class: \"code-blocks-container\" }, [\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"树定义 (Script)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<script lang=\\\"ts\\\" setup>\\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\\n\\n        // 综合使用所有特性的员工管理表单\\n        const employeeForm = createTreeFromConfig(\\n          cns('dict', 'dict', 'employeeInfo', {}, false, {}, [\\n            cns('dict', 'dict', 'basicInfo', {}, false, {}, [\\n              cns('string', 'leaf', 'name', '张三', false, {}, [], '姓名'),\\n              cns('selection', 'leaf', 'gender', '男', false, {\\n                options: ['男', '女', '其他']\\n              }, [], '性别'),\\n              cns('date', 'leaf', 'birthDate', '1990-01-01', false, {}, [], '出生日期'),\\n              cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话')\\n            ], '基本信息'),\\n            cns('dict', 'dict', 'workInfo', {}, false, {}, [\\n              cns('string', 'leaf', 'department', '技术部', false, {}, [], '部门'),\\n              cns('string', 'leaf', 'position', '高级工程师', false, {}, [], '职位'),\\n              cns('number', 'leaf', 'salary', 15000, false, {}, [], '薪资'),\\n              cns('date', 'leaf', 'hireDate', '2020-01-01', false, {}, [], '入职日期')\\n            ], '工作信息')\\n          ])\\n        )\\n\\n        // 事件处理函数\\n        const searchEmployee = (slotProps: any) => {\\n          alert(`搜索员工: ${slotProps.allProps.modelValue}`)\\n        }\\n\\n        const updateSalary = (slotProps: any, event: Event) => {\\n          const target = event.target as HTMLInputElement\\n          if (slotProps.allProps.node) {\\n            slotProps.allProps.node.currentValue = Number(target.value)\\n          }\\n        }\\n\\n        const saveEmployee = () => {\\n          alert('员工信息已保存')\\n        }\\n\\n        const resetEmployee = () => {\\n          alert('表单已重置')\\n        }\\n\\n        const deleteEmployee = () => {\\n          if (confirm('确定要删除这个员工吗？')) {\\n            alert('员工已删除')\\n          }\\n        }\\n        </script>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"模板 (Template)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<template>\\n          <VarBox :tree=\\\"employeeForm\\\">\\n            <!-- 为姓名字段添加搜索功能 -->\\n            <template #employeeInfo-basicInfo-name--extra=\\\"slotProps\\\">\\n              <button\\n                class=\\\"search-employee-btn\\\"\\n                @click=\\\"searchEmployee(slotProps)\\\"\\n              >\\n                🔍 搜索员工\\n              </button>\\n            </template>\\n\\n            <!-- 自定义薪资输入 -->\\n            <template #employeeInfo-workInfo-salary--simple=\\\"slotProps\\\">\\n              <div class=\\\"salary-input\\\">\\n                <span class=\\\"currency\\\">¥</span>\\n                <input\\n                  :value=\\\"slotProps.allProps.modelValue\\\"\\n                  @input=\\\"updateSalary(slotProps, $event)\\\"\\n                  type=\\\"number\\\"\\n                  class=\\\"salary-field\\\"\\n                  placeholder=\\\"请输入薪资\\\"\\n                />\\n                <span class=\\\"unit\\\">元/月</span>\\n              </div>\\n            </template>\\n\\n            <!-- 添加操作按钮区域 -->\\n            <template #employeeInfo--leaf>\\n              <div class=\\\"action-buttons\\\">\\n                <button class=\\\"save-btn\\\" @click=\\\"saveEmployee\\\">\\n                  💾 保存\\n                </button>\\n                <button class=\\\"reset-btn\\\" @click=\\\"resetEmployee\\\">\\n                  🔄 重置\\n                </button>\\n                <button class=\\\"delete-btn\\\" @click=\\\"deleteEmployee\\\">\\n                  🗑️ 删除\\n                </button>\\n              </div>\\n            </template>\\n          </VarBox>\\n        </template>\")\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", { class: \"code-block\" }, [\n                    _createElementVNode(\"h4\", null, \"样式 (Style)\"),\n                    _createElementVNode(\"div\", { class: \"code-example\" }, [\n                      _createElementVNode(\"pre\", null, [\n                        _createElementVNode(\"code\", null, \"<style scoped>\\n        /* 高级示例样式 */\\n        :deep(.employeeInfo--dict-leaf-section) {\\n          display: grid;\\n          grid-template-columns: repeat(4, 1fr);\\n          gap: 15px;\\n          padding: 20px;\\n          background: #f5f5f5;\\n          border-radius: 8px;\\n          margin: 10px 0;\\n        }\\n\\n        .salary-input {\\n          display: flex;\\n          align-items: center;\\n          gap: 5px;\\n          border: 1px solid #28a745;\\n          border-radius: 4px;\\n          padding: 4px 8px;\\n          background: #f8fff8;\\n        }\\n\\n        .currency, .unit {\\n          font-weight: bold;\\n          color: #28a745;\\n        }\\n\\n        .salary-field {\\n          border: none;\\n          outline: none;\\n          background: transparent;\\n          text-align: center;\\n          width: 100px;\\n          font-size: 16px;\\n        }\\n\\n        .action-buttons {\\n          grid-column: 1 / -1;\\n          display: flex;\\n          gap: 10px;\\n          justify-content: center;\\n          margin-top: 20px;\\n          padding: 15px;\\n          background: white;\\n          border-radius: 6px;\\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n        }\\n\\n        .save-btn, .reset-btn, .delete-btn {\\n          padding: 10px 20px;\\n          border: none;\\n          border-radius: 6px;\\n          cursor: pointer;\\n          font-weight: bold;\\n          transition: all 0.3s ease;\\n        }\\n\\n        .save-btn {\\n          background: #28a745;\\n          color: white;\\n        }\\n\\n        .save-btn:hover {\\n          background: #218838;\\n          transform: translateY(-2px);\\n        }\\n\\n        .reset-btn {\\n          background: #ffc107;\\n          color: #212529;\\n        }\\n\\n        .reset-btn:hover {\\n          background: #e0a800;\\n          transform: translateY(-2px);\\n        }\\n\\n        .delete-btn {\\n          background: #dc3545;\\n          color: white;\\n        }\\n\\n        .delete-btn:hover {\\n          background: #c82333;\\n          transform: translateY(-2px);\\n        }\\n\\n        .search-employee-btn {\\n          margin-left: 8px;\\n          padding: 6px 12px;\\n          background: #17a2b8;\\n          color: white;\\n          border: none;\\n          border-radius: 4px;\\n          cursor: pointer;\\n          font-size: 12px;\\n          transition: background-color 0.3s ease;\\n        }\\n\\n        .search-employee-btn:hover {\\n          background: #138496;\\n        }\\n        </style>\")\n                      ])\n                    ])\n                  ])\n                ], -1)),\n                _createElementVNode(\"div\", _hoisted_65, [\n                  _createVNode(VarBox, {\n                    tree: advancedExamples.employeeForm\n                  }, {\n                    \"employeeInfo-basicInfo-name--extra\": _withCtx((slotProps) => [\n                      _createElementVNode(\"button\", {\n                        class: \"search-employee-btn\",\n                        onClick: ($event: any) => (searchEmployee(slotProps))\n                      }, \" 🔍 搜索员工 \", 8, _hoisted_66)\n                    ]),\n                    \"employeeInfo-workInfo-salary--simple\": _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_67, [\n                        _cache[57] || (_cache[57] = _createElementVNode(\"span\", { class: \"currency\" }, \"¥\", -1)),\n                        _createElementVNode(\"input\", {\n                          value: slotProps.allProps.modelValue,\n                          onInput: ($event: any) => (updateSalary(slotProps, $event)),\n                          type: \"number\",\n                          class: \"salary-field\",\n                          placeholder: \"请输入薪资\"\n                        }, null, 40, _hoisted_68),\n                        _cache[58] || (_cache[58] = _createElementVNode(\"span\", { class: \"unit\" }, \"元/月\", -1))\n                      ])\n                    ]),\n                    \"employeeInfo--leaf\": _withCtx(() => [\n                      _createElementVNode(\"div\", { class: \"action-buttons\" }, [\n                        _createElementVNode(\"button\", {\n                          class: \"save-btn\",\n                          onClick: saveEmployee\n                        }, \"💾 保存\"),\n                        _createElementVNode(\"button\", {\n                          class: \"reset-btn\",\n                          onClick: resetEmployee\n                        }, \"🔄 重置\"),\n                        _createElementVNode(\"button\", {\n                          class: \"delete-btn\",\n                          onClick: deleteEmployee\n                        }, \"🗑️ 删除\")\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"tree\"])\n                ])\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <!-- 固定左侧导航目录 -->\r\n    <nav class=\"tutorial-nav show-side--away\">\r\n      <h2>教学目录</h2>\r\n      <ul>\r\n        <li><a href=\"#basic-usage\">1. 基础用法</a></li>\r\n        <li><a href=\"#simple-trees\">2. 简单树结构</a></li>\r\n        <li><a href=\"#complex-trees\">3. 复杂树结构</a></li>\r\n        <li><a href=\"#slots-usage\">4. 插槽用法详解</a></li>\r\n        <li><a href=\"#hooks-usage\">5. 钩子用法详解</a></li>\r\n        <li><a href=\"#css-deep\">6. Deep CSS 属性用法</a></li>\r\n        <li><a href=\"#grid-layout\">7. Grid 布局控制</a></li>\r\n        <li><a href=\"#advanced-examples\">8. 高级应用示例</a></li>\r\n      </ul>\r\n    </nav>\r\n    <AppContent :stages=\"['tutorial']\" :hideBottomBar=\"true\">\r\n      <template #stage-tutorial>\r\n        <div class=\"vartree-tutorial\">\r\n\r\n          <!-- 主要内容区域 -->\r\n          <div class=\"tutorial-content\">\r\n            <!-- 1. 基础用法 -->\r\n            <section id=\"basic-usage\" class=\"tutorial-section\">\r\n              <h2>1. 基础用法</h2>\r\n              <p>VarTree是一个用于管理复杂数据结构的工具类，VarInput是对应的渲染组件。</p>\r\n              \r\n              <div class=\"example-container\">\r\n                <h3>1.1 最简单的字符串输入</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const simpleString = createTreeFromConfig(\r\n          cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"simpleString\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 基础样式，无需额外定制 */\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"basicExamples.simpleString\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>1.2 数字输入</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const simpleNumber = createTreeFromConfig(\r\n          cns('number', 'leaf', 'age', 25, false, {}, [], '年龄')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"simpleNumber\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 基础样式，无需额外定制 */\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"basicExamples.simpleNumber\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>1.3 日期输入</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const simpleDate = createTreeFromConfig(\r\n          cns('date', 'leaf', 'birthDate', '1995-01-01', false, {}, [], '出生日期')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"simpleDate\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 基础样式，无需额外定制 */\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"basicExamples.simpleDate\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>1.4 选择输入</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const simpleSelection = createTreeFromConfig(\r\n          cns('selection', 'leaf', 'gender', '男', false, {\r\n            options: ['男', '女', '其他']\r\n          }, [], '性别')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"simpleSelection\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 基础样式，无需额外定制 */\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"basicExamples.simpleSelection\" />\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <!-- 2. 简单树结构 -->\r\n            <section id=\"simple-trees\" class=\"tutorial-section\">\r\n              <h2>2. 简单树结构</h2>\r\n              <p>展示如何构建包含多个字段的字典结构。</p>\r\n              \r\n              <div class=\"example-container\">\r\n                <h3>2.1 用户信息表单</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        // 使用 cns 快速构建结构\r\n        const userInfo = createTreeFromConfig(\r\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n            cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名'),\r\n            cns('number', 'leaf', 'age', 25, false, {}, [], '年龄'),\r\n            cns('string', 'leaf', 'email', 'zhang@example.com', false, {}, [], '邮箱'),\r\n            cns('selection', 'leaf', 'gender', '男', false, {\r\n              options: ['男', '女', '其他']\r\n            }, [], '性别')\r\n          ])\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"userInfo\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 字典结构的基础样式 */\r\n        :deep(.userInfo--dict-header) {\r\n          background: #f8f9fa;\r\n          padding: 10px;\r\n          border-radius: 6px;\r\n          margin-bottom: 10px;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"simpleTreeExamples.userInfo\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>2.2 简单列表结构</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const simpleList = createTreeFromConfig(\r\n          cns('dynamiclist', 'list', 'hobbies', [], false, {}, [\r\n            cns('string', 'leaf', '', '阅读', false),\r\n            cns('string', 'leaf', '', '游泳', false),\r\n            cns('string', 'leaf', '', '编程', false)\r\n          ], '爱好列表')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"simpleList\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 动态列表的样式 */\r\n        :deep(.hobbies--list-header) {\r\n          background: #e3f2fd;\r\n          padding: 10px;\r\n          border-radius: 6px;\r\n        }\r\n\r\n        :deep(.hobbies--list-item) {\r\n          margin: 5px 0;\r\n          padding: 8px;\r\n          border: 1px solid #e0e0e0;\r\n          border-radius: 4px;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"simpleTreeExamples.simpleList\" />\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <!-- 3. 复杂树结构 -->\r\n            <section id=\"complex-trees\" class=\"tutorial-section\">\r\n              <h2>3. 复杂树结构</h2>\r\n              <p>展示多层嵌套的复杂数据结构。</p>\r\n              \r\n              <div class=\"example-container\">\r\n                <h3>3.1 三层字典嵌套</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const threeLevelDict = createTreeFromConfig(\r\n          cns('dict', 'dict', 'company', {}, false, {}, [\r\n            cns('string', 'leaf', 'name', '科技公司', false, {}, [], '公司名称'),\r\n            cns('dict', 'dict', 'address', {}, false, {}, [\r\n              cns('string', 'leaf', 'country', '中国', false, {}, [], '国家'),\r\n              cns('string', 'leaf', 'city', '北京', false, {}, [], '城市'),\r\n              cns('dict', 'dict', 'detail', {}, false, {}, [\r\n                cns('string', 'leaf', 'street', '中关村大街', false, {}, [], '街道'),\r\n                cns('string', 'leaf', 'building', '科技大厦', false, {}, [], '建筑物'),\r\n                cns('number', 'leaf', 'floor', 15, false, {}, [], '楼层')\r\n              ], '详细地址')\r\n            ], '地址信息')\r\n          ])\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"threeLevelDict\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 多层嵌套的样式 */\r\n        :deep(.company--dict-header) {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n        }\r\n\r\n        :deep(.company-address--dict-header) {\r\n          background: #f0f8ff;\r\n          border-left: 4px solid #4a90e2;\r\n        }\r\n\r\n        :deep(.company-address-detail--dict-header) {\r\n          background: #fff3cd;\r\n          border-left: 4px solid #ffc107;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"complexTreeExamples.threeLevelDict\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>3.2 员工项目管理（复杂嵌套）</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const employeeProjects = createTreeFromConfig(\r\n          cns('dict', 'dict', 'employee', {}, false, {}, [\r\n            cns('string', 'leaf', 'name', '李四', false, {}, [], '员工姓名'),\r\n            cns('dynamiclist', 'list', 'projects', [], false, {}, [\r\n              cns('dict', 'dict', '', {}, false, {}, [\r\n                cns('string', 'leaf', 'projectName', '项目A', false, {}, [], '项目名称'),\r\n                cns('date', 'leaf', 'startDate', '2024-01-01', false, {}, [], '开始日期'),\r\n                cns('date', 'leaf', 'endDate', '2024-06-30', false, {}, [], '结束日期'),\r\n                cns('selection', 'leaf', 'status', '进行中', false, {\r\n                  options: ['未开始', '进行中', '已完成', '已暂停']\r\n                }, [], '状态')\r\n              ])\r\n            ], '项目列表')\r\n          ])\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"employeeProjects\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 员工项目管理的样式 */\r\n        :deep(.employee--dict-header) {\r\n          background: #28a745;\r\n          color: white;\r\n          padding: 12px;\r\n          border-radius: 8px;\r\n        }\r\n\r\n        :deep(.employee-projects--list-header) {\r\n          background: #17a2b8;\r\n          color: white;\r\n          padding: 10px;\r\n        }\r\n\r\n        :deep(.employee-projects--list-item) {\r\n          border: 2px solid #17a2b8;\r\n          border-radius: 8px;\r\n          margin: 10px 0;\r\n          padding: 15px;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"complexTreeExamples.employeeProjects\" />\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <!-- 4. 插槽用法详解 -->\r\n            <section id=\"slots-usage\" class=\"tutorial-section\">\r\n              <h2>4. 插槽用法详解</h2>\r\n              <p>VarInput组件提供了多种插槽，允许你完全自定义组件的外观和行为。</p>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>4.1 --extra 插槽：添加额外按钮</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const extraSlot = createTreeFromConfig(\r\n          cns('string', 'leaf', '用户名', '张三', false, {}, [], '用户名')\r\n        )\r\n\r\n        const handleSearch = (slotProps: any) => {\r\n          alert(`搜索: ${slotProps.allProps.modelValue}`)\r\n        }\r\n\r\n        const handleClear = (slotProps: any) => {\r\n          if (slotProps.allProps.node) {\r\n            slotProps.allProps.node.currentValue = ''\r\n          }\r\n        }\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"extraSlot\"&gt;\r\n            &lt;template #用户名--extra=\"slotProps\"&gt;\r\n              &lt;button\r\n                class=\"search-btn\"\r\n                @click=\"handleSearch(slotProps)\"\r\n              &gt;\r\n                🔍 搜索\r\n              &lt;/button&gt;\r\n              &lt;button\r\n                class=\"clear-btn\"\r\n                @click=\"handleClear(slotProps)\"\r\n              &gt;\r\n                ✖️ 清除\r\n              &lt;/button&gt;\r\n            &lt;/template&gt;\r\n          &lt;/VarBox&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        .search-btn, .clear-btn {\r\n          margin-left: 8px;\r\n          padding: 6px 12px;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-size: 12px;\r\n          transition: background-color 0.3s ease;\r\n        }\r\n\r\n        .search-btn {\r\n          background: #28a745;\r\n          color: white;\r\n        }\r\n\r\n        .search-btn:hover {\r\n          background: #218838;\r\n        }\r\n\r\n        .clear-btn {\r\n          background: #dc3545;\r\n          color: white;\r\n        }\r\n\r\n        .clear-btn:hover {\r\n          background: #c82333;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"slotExamples.extraSlot\">\r\n                    <template #用户名--extra=\"slotProps\">\r\n                      <button class=\"search-btn\" @click=\"handleSearch(slotProps)\">🔍 搜索</button>\r\n                      <button class=\"clear-btn\" @click=\"handleClear(slotProps)\">✖️ 清除</button>\r\n                    </template>\r\n                  </VarBox>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>4.2 --simple 插槽：完全自定义输入组件</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const simpleSlot = createTreeFromConfig(\r\n          cns('number', 'leaf', '年龄', 25, false, {}, [], '年龄')\r\n        )\r\n\r\n        const increment = (slotProps: any) => {\r\n          if (slotProps.allProps.node) {\r\n            const currentValue = Number(slotProps.allProps.node.currentValue) || 0\r\n            slotProps.allProps.node.currentValue = currentValue + 1\r\n          }\r\n        }\r\n\r\n        const decrement = (slotProps: any) => {\r\n          if (slotProps.allProps.node) {\r\n            const currentValue = Number(slotProps.allProps.node.currentValue) || 0\r\n            slotProps.allProps.node.currentValue = Math.max(0, currentValue - 1)\r\n          }\r\n        }\r\n\r\n        const updateValue = (slotProps: any, event: Event) => {\r\n          const target = event.target as HTMLInputElement\r\n          if (slotProps.allProps.node) {\r\n            slotProps.allProps.node.currentValue = Number(target.value)\r\n          }\r\n        }\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"simpleSlot\"&gt;\r\n            &lt;template #年龄--simple=\"slotProps\"&gt;\r\n              &lt;div class=\"custom-number-input\"&gt;\r\n                &lt;button @click=\"decrement(slotProps)\"&gt;-&lt;/button&gt;\r\n                &lt;input\r\n                  :value=\"slotProps.allProps.modelValue\"\r\n                  @input=\"updateValue(slotProps, $event)\"\r\n                  type=\"number\"\r\n                  class=\"number-display\"\r\n                /&gt;\r\n                &lt;button @click=\"increment(slotProps)\"&gt;+&lt;/button&gt;\r\n              &lt;/div&gt;\r\n            &lt;/template&gt;\r\n          &lt;/VarBox&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        .custom-number-input {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n          padding: 4px;\r\n        }\r\n\r\n        .custom-number-input button {\r\n          width: 30px;\r\n          height: 30px;\r\n          border: none;\r\n          background: #007bff;\r\n          color: white;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .custom-number-input button:hover {\r\n          background: #0056b3;\r\n        }\r\n\r\n        .number-display {\r\n          width: 80px;\r\n          text-align: center;\r\n          border: none;\r\n          outline: none;\r\n          font-size: 16px;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"slotExamples.simpleSlot\">\r\n                    <template #年龄--simple=\"slotProps\">\r\n                      <div class=\"custom-number-input\">\r\n                        <button @click=\"decrement(slotProps)\">-</button>\r\n                        <input\r\n                          :value=\"slotProps.allProps.modelValue\"\r\n                          @input=\"updateValue(slotProps, $event)\"\r\n                          type=\"number\"\r\n                          class=\"number-display\"\r\n                        />\r\n                        <button @click=\"increment(slotProps)\">+</button>\r\n                      </div>\r\n                    </template>\r\n                  </VarBox>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>4.3 --wrapper 插槽：完全自定义容器</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const wrapperSlot = createTreeFromConfig(\r\n          cns('selection', 'leaf', '性别', '男', false, {\r\n            options: ['男', '女', '其他']\r\n          }, [], '性别')\r\n        )\r\n\r\n        const updateSelectValue = (slotProps: any, event: Event) => {\r\n          const target = event.target as HTMLSelectElement\r\n          if (slotProps.allProps.node) {\r\n            slotProps.allProps.node.currentValue = target.value\r\n          }\r\n        }\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"wrapperSlot\"&gt;\r\n            &lt;template #性别--wrapper=\"slotProps\"&gt;\r\n              &lt;div class=\"custom-wrapper\"&gt;\r\n                &lt;div class=\"custom-label\"&gt;\r\n                  &#123;&#123; slotProps.allProps.node?.nameDisplay &#125;&#125;\r\n                &lt;/div&gt;\r\n                &lt;div class=\"custom-content\"&gt;\r\n                  &lt;select\r\n                    :value=\"slotProps.allProps.modelValue\"\r\n                    @change=\"updateSelectValue(slotProps, $event)\"\r\n                    class=\"custom-select\"\r\n                  &gt;\r\n                    &lt;option value=\"男\"&gt;👨 男&lt;/option&gt;\r\n                    &lt;option value=\"女\"&gt;👩 女&lt;/option&gt;\r\n                    &lt;option value=\"其他\"&gt;🤖 其他&lt;/option&gt;\r\n                  &lt;/select&gt;\r\n                &lt;/div&gt;\r\n              &lt;/div&gt;\r\n            &lt;/template&gt;\r\n          &lt;/VarBox&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        .custom-wrapper {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          padding: 15px;\r\n          border-radius: 8px;\r\n          box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n        }\r\n\r\n        .custom-label {\r\n          font-weight: bold;\r\n          margin-bottom: 8px;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .custom-content {\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n\r\n        .custom-select {\r\n          background: white;\r\n          color: #333;\r\n          border: none;\r\n          padding: 8px 12px;\r\n          border-radius: 4px;\r\n          font-size: 14px;\r\n          cursor: pointer;\r\n          width: 100%;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"slotExamples.wrapperSlot\">\r\n                    <template #性别--wrapper=\"slotProps\">\r\n                      <div class=\"custom-wrapper\">\r\n                        <div class=\"custom-label\">{{ slotProps.allProps.node?.nameDisplay }}</div>\r\n                        <div class=\"custom-content\">\r\n                          <select\r\n                            :value=\"slotProps.allProps.modelValue\"\r\n                            @change=\"updateSelectValue(slotProps, $event)\"\r\n                            class=\"custom-select\"\r\n                          >\r\n                            <option value=\"男\">👨 男</option>\r\n                            <option value=\"女\">👩 女</option>\r\n                            <option value=\"其他\">🤖 其他</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </template>\r\n                  </VarBox>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>4.4 --simple-input-group 插槽：日期输入自定义</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const dateSlot = createTreeFromConfig(\r\n          cns('date', 'leaf', '生日', '1995-01-01', false, {}, [], '生日')\r\n        )\r\n\r\n        const updateDateValue = (slotProps: any, event: Event) => {\r\n          const target = event.target as HTMLInputElement\r\n          if (slotProps.allProps.node) {\r\n            slotProps.allProps.node.currentValue = target.value\r\n          }\r\n        }\r\n\r\n        const setToday = (slotProps: any) => {\r\n          if (slotProps.allProps.node) {\r\n            const today = new Date().toISOString().split('T')[0]\r\n            slotProps.allProps.node.currentValue = today\r\n          }\r\n        }\r\n\r\n        const clearDate = (slotProps: any) => {\r\n          if (slotProps.allProps.node) {\r\n            slotProps.allProps.node.currentValue = ''\r\n          }\r\n        }\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"dateSlot\"&gt;\r\n            &lt;template #生日--simple-input-group=\"slotProps\"&gt;\r\n              &lt;div class=\"custom-date-input\"&gt;\r\n                &lt;input\r\n                  :value=\"slotProps.allProps.modelValue\"\r\n                  @input=\"updateDateValue(slotProps, $event)\"\r\n                  type=\"date\"\r\n                  class=\"date-picker\"\r\n                /&gt;\r\n                &lt;button @click=\"setToday(slotProps)\" class=\"today-btn\"&gt;\r\n                  今天\r\n                &lt;/button&gt;\r\n                &lt;button @click=\"clearDate(slotProps)\" class=\"clear-btn\"&gt;\r\n                  清除\r\n                &lt;/button&gt;\r\n              &lt;/div&gt;\r\n            &lt;/template&gt;\r\n          &lt;/VarBox&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        .custom-date-input {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n\r\n        .date-picker {\r\n          flex: 1;\r\n          padding: 8px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        .today-btn, .clear-btn {\r\n          padding: 8px 12px;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-size: 12px;\r\n        }\r\n\r\n        .today-btn {\r\n          background: #17a2b8;\r\n          color: white;\r\n        }\r\n\r\n        .today-btn:hover {\r\n          background: #138496;\r\n        }\r\n\r\n        .clear-btn {\r\n          background: #dc3545;\r\n          color: white;\r\n        }\r\n\r\n        .clear-btn:hover {\r\n          background: #c82333;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"slotExamples.dateSlot\">\r\n                    <template #生日--simple-input-group=\"slotProps\">\r\n                      <div class=\"custom-date-input\">\r\n                        <input\r\n                          :value=\"slotProps.allProps.modelValue\"\r\n                          @input=\"updateDateValue(slotProps, $event)\"\r\n                          type=\"date\"\r\n                          class=\"date-picker\"\r\n                        />\r\n                        <button @click=\"setToday(slotProps)\" class=\"today-btn\">今天</button>\r\n                        <button @click=\"clearDate(slotProps)\" class=\"clear-btn\">清除</button>\r\n                      </div>\r\n                    </template>\r\n                  </VarBox>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <!-- 5. 钩子用法详解 -->\r\n            <section id=\"hooks-usage\" class=\"tutorial-section\">\r\n              <h2>5. 钩子用法详解</h2>\r\n              <p>通过config.customComponent可以注册自定义组件作为钩子。</p>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>5.1 自定义组件钩子</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { markRaw } from 'vue'\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n        import MyCustomInput from '@/test/varbox/MyCustomInput.vue'\r\n\r\n        // 创建自定义组件\r\n        const CustomInput = {\r\n          props: ['modelValue', 'readonly', 'placeholder'],\r\n          emits: ['update:modelValue'],\r\n          template: `\r\n            &lt;div class=\"custom-hook-input\"&gt;\r\n              &lt;span&gt;🎯 自定义钩子组件&lt;/span&gt;\r\n              &lt;input\r\n                :value=\"modelValue\"\r\n                @input=\"$emit('update:modelValue', $event.target.value)\"\r\n                :readonly=\"readonly\"\r\n                :placeholder=\"placeholder\"\r\n              /&gt;\r\n            &lt;/div&gt;\r\n          `\r\n        }\r\n\r\n        // 在配置中使用\r\n        const customComponent = createTreeFromConfig(\r\n          cns('string', 'leaf', 'customField', '自定义值', false, {\r\n            customComponent: markRaw(MyCustomInput)\r\n          }, [], '自定义字段')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"customComponent\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 自定义钩子组件的样式 */\r\n        :deep(.custom-hook-input) {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px;\r\n          padding: 10px;\r\n          background: #e8f5e8;\r\n          border: 2px solid #28a745;\r\n          border-radius: 6px;\r\n        }\r\n\r\n        :deep(.custom-hook-input span) {\r\n          font-weight: bold;\r\n          color: #28a745;\r\n        }\r\n\r\n        :deep(.custom-hook-input input) {\r\n          flex: 1;\r\n          padding: 8px;\r\n          border: 1px solid #28a745;\r\n          border-radius: 4px;\r\n          outline: none;\r\n        }\r\n\r\n        :deep(.custom-hook-input input:focus) {\r\n          box-shadow: 0 0 0 2px rgba(40, 167, 69, 0.25);\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"hookExamples.customComponent\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>5.2 带验证的自定义钩子</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { markRaw } from 'vue'\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n        import MyCustomInput from '@/test/varbox/MyCustomInput.vue'\r\n\r\n        const validationHook = createTreeFromConfig(\r\n          cns('string', 'leaf', 'email', 'test@example.com', false, {\r\n            customComponent: markRaw(MyCustomInput),\r\n            validators: [\r\n              {\r\n                creteria: (value: any) => {\r\n                  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n                  return emailRegex.test(value)\r\n                },\r\n                message: '请输入有效的邮箱地址'\r\n              }\r\n            ]\r\n          }, [], '邮箱地址')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"validationHook\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 验证钩子的样式 */\r\n        :deep(.email--wrapper.error) {\r\n          border: 2px solid #dc3545;\r\n          background: #f8d7da;\r\n        }\r\n\r\n        :deep(.email--error-message) {\r\n          color: #dc3545;\r\n          font-size: 12px;\r\n          margin-top: 5px;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area\">\r\n                  <VarBox :tree=\"hookExamples.validationHook\" />\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <!-- 6. Deep CSS 属性用法 -->\r\n            <section id=\"css-deep\" class=\"tutorial-section\">\r\n              <h2>6. Deep CSS 属性用法</h2>\r\n              <p>使用:deep()选择器可以穿透作用域样式，精确控制VarInput组件的样式。</p>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>6.1 通过路径精确定位节点</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const pathTargeting = createTreeFromConfig(\r\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n            cns('dict', 'dict', 'personalInfo', {}, false, {}, [\r\n              cns('string', 'leaf', 'name', '李四', false, {}, [], '姓名'),\r\n              cns('string', 'leaf', 'email', 'li@example.com', false, {}, [], '邮箱')\r\n            ], '个人信息'),\r\n            cns('dict', 'dict', 'workInfo', {}, false, {}, [\r\n              cns('string', 'leaf', 'company', '科技公司', false, {}, [], '公司'),\r\n              cns('string', 'leaf', 'position', '工程师', false, {}, [], '职位')\r\n            ], '工作信息')\r\n          ])\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"pathTargeting\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 通过路径字符串精确定位特定节点 */\r\n        :deep(.userInfo-personalInfo-name--wrapper) {\r\n          background: linear-gradient(45deg, #ff6b6b, #feca57);\r\n          color: white;\r\n          padding: 10px;\r\n          border-radius: 6px;\r\n        }\r\n\r\n        :deep(.userInfo-personalInfo-email--leaf-input-container) {\r\n          border: 2px solid #48cae4;\r\n          border-radius: 20px;\r\n          padding: 5px;\r\n        }\r\n\r\n        :deep(.userInfo-workInfo--wrapper) {\r\n          background: #f0f8ff;\r\n          border: 1px solid #4a90e2;\r\n          border-radius: 8px;\r\n          padding: 15px;\r\n          margin: 10px 0;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area path-targeting-demo\">\r\n                  <VarBox :tree=\"cssExamples.pathTargeting\" />\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <!-- 7. Grid 布局控制 -->\r\n            <section id=\"grid-layout\" class=\"tutorial-section\">\r\n              <h2>7. Grid 布局控制</h2>\r\n              <p>通过:deep()选择器控制字典节点的叶子部分使用Grid布局，实现复杂的表单布局。</p>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>7.1 基础Grid布局</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const basicGrid = createTreeFromConfig(\r\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n            cns('string', 'leaf', 'name', '王五', false, {}, [], '姓名'),\r\n            cns('string', 'leaf', 'email', 'wang@example.com', false, {}, [], '邮箱'),\r\n            cns('number', 'leaf', 'age', 30, false, {}, [], '年龄'),\r\n            cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话'),\r\n            cns('string', 'leaf', 'address', '北京市朝阳区', false, {}, [], '地址'),\r\n            cns('selection', 'leaf', 'gender', '男', false, {\r\n              options: ['男', '女', '其他']\r\n            }, [], '性别')\r\n          ])\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"basicGrid\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 设置Grid布局 - 通过路径定位 */\r\n        :deep(.userInfo--dict-leaf-section) {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr 1fr;\r\n          gap: 20px;\r\n          padding: 20px;\r\n          background: #f8f9fa;\r\n          border-radius: 8px;\r\n          margin: 10px 0;\r\n        }\r\n\r\n        /* 字段自动排列，无需指定位置 */\r\n        :deep(.userInfo--dict-leaf-section > *) {\r\n          background: white;\r\n          padding: 10px;\r\n          border-radius: 4px;\r\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area grid-basic-demo\">\r\n                  <VarBox :tree=\"gridExamples.basicGrid\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>7.2 复杂Grid布局 - 指定位置</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const complexGrid = createTreeFromConfig(\r\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n            cns('string', 'leaf', 'name', '赵六', false, {}, [], '姓名'),\r\n            cns('string', 'leaf', 'email', 'zhao@example.com', false, {}, [], '邮箱'),\r\n            cns('string', 'leaf', 'phone', '13900139000', false, {}, [], '电话'),\r\n            cns('number', 'leaf', 'age', 28, false, {}, [], '年龄'),\r\n            cns('string', 'leaf', 'address', '上海市浦东新区', false, {}, [], '地址'),\r\n            cns('selection', 'leaf', 'status', '在职', false, {\r\n              options: ['在职', '离职', '休假']\r\n            }, [], '状态')\r\n          ])\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"complexGrid\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 复杂Grid布局，指定每个字段的位置 */\r\n        :deep(.userInfo--dict-leaf-section) {\r\n          display: grid;\r\n          grid-template-columns: repeat(4, 1fr);\r\n          gap: 15px;\r\n          padding: 20px;\r\n          background: #fff3cd;\r\n          border-radius: 8px;\r\n        }\r\n\r\n        /* 通过路径精确指定每个字段的位置 */\r\n        :deep(.userInfo-name--wrapper) {\r\n          grid-row: 1;\r\n          grid-column: 1 / 3;\r\n        }\r\n        :deep(.userInfo-email--wrapper) {\r\n          grid-row: 1;\r\n          grid-column: 3 / 5;\r\n        }\r\n        :deep(.userInfo-phone--wrapper) {\r\n          grid-row: 2;\r\n          grid-column: 1;\r\n        }\r\n        :deep(.userInfo-age--wrapper) {\r\n          grid-row: 2;\r\n          grid-column: 2;\r\n        }\r\n        :deep(.userInfo-address--wrapper) {\r\n          grid-row: 2;\r\n          grid-column: 3;\r\n        }\r\n        :deep(.userInfo-status--wrapper) {\r\n          grid-row: 2;\r\n          grid-column: 4;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area grid-complex-demo\">\r\n                  <VarBox :tree=\"gridExamples.complexGrid\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>7.3 使用插槽添加额外叶子节点</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        const gridWithSlots = createTreeFromConfig(\r\n          cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n            cns('string', 'leaf', 'name', '孙七', false, {}, [], '姓名'),\r\n            cns('string', 'leaf', 'email', 'sun@example.com', false, {}, [], '邮箱')\r\n          ])\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"gridWithSlots\"&gt;\r\n            &lt;template #userInfo--leaf&gt;\r\n              &lt;div class=\"extra-grid-item\"&gt;\r\n                &lt;label&gt;额外信息&lt;/label&gt;\r\n                &lt;div class=\"extra-content\"&gt;\r\n                  这是通过插槽添加的额外内容\r\n                &lt;/div&gt;\r\n              &lt;/div&gt;\r\n            &lt;/template&gt;\r\n          &lt;/VarBox&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* CSS控制额外节点的位置 */\r\n        :deep(.userInfo--dict-leaf-section) {\r\n          display: grid;\r\n          grid-template-columns: repeat(3, 1fr);\r\n          gap: 15px;\r\n          padding: 20px;\r\n          background: #e8f5e8;\r\n          border-radius: 8px;\r\n          margin: 10px 0;\r\n        }\r\n\r\n        .extra-grid-item {\r\n          grid-column: 3;  /* 放在第3列 */\r\n          grid-row: 1;\r\n          background: #e3f2fd;\r\n          padding: 15px;\r\n          border-radius: 6px;\r\n          border: 2px dashed #2196f3;\r\n        }\r\n\r\n        .extra-content {\r\n          margin-top: 8px;\r\n          font-style: italic;\r\n          color: #1976d2;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area grid-slots-demo\">\r\n                  <VarBox :tree=\"gridExamples.gridWithSlots\">\r\n                    <template #userInfo--leaf>\r\n                      <div class=\"extra-grid-item\">\r\n                        <label>额外信息</label>\r\n                        <div class=\"extra-content\">这是通过插槽添加的额外内容</div>\r\n                      </div>\r\n                    </template>\r\n                  </VarBox>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <!-- 8. 高级应用示例 -->\r\n            <section id=\"advanced-examples\" class=\"tutorial-section\">\r\n              <h2>8. 高级应用示例</h2>\r\n              <p>综合运用所有特性的实际应用场景。</p>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>8.1 复杂节点隐藏功能测试</h3>\r\n                <p>测试 hideSelf、hideList、showWhiteList 对复杂节点（dict和list）的隐藏效果。</p>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        // 测试复杂节点隐藏功能\r\n        const testHideComplexNodes = createTreeFromConfig(\r\n          cns('dict', 'dict', 'testRoot', null, false, {\r\n            hideList: ['hiddenDict', 'hiddenList'],\r\n            showWhiteList: ['visibleDict', 'visibleList']\r\n          }, [\r\n            cns('dict', 'dict', 'visibleDict', null, false, {}, [\r\n              cns('string', 'leaf', 'field1', 'value1', false, {}, [], '字段1')\r\n            ], '可见字典'),\r\n            cns('dict', 'dict', 'hiddenDict', null, false, {}, [\r\n              cns('string', 'leaf', 'field2', 'value2', false, {}, [], '字段2')\r\n            ], '隐藏字典'),\r\n            cns('dynamiclist', 'list', 'visibleList', null, false, {\r\n              childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\r\n            }, [], '可见列表'),\r\n            cns('dynamiclist', 'list', 'hiddenList', null, false, {\r\n              childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\r\n            }, [], '隐藏列表'),\r\n            cns('dict', 'dict', 'selfHiddenDict', null, false, {\r\n              hideSelf: true\r\n            }, [\r\n              cns('string', 'leaf', 'field3', 'value3', false, {}, [], '字段3')\r\n            ], '自隐藏字典')\r\n          ], '测试根节点')\r\n        )\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"testHideComplexNodes\" /&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"result-container\">\r\n                  <h4>运行结果</h4>\r\n                  <div class=\"result-box\">\r\n                    <VarBox :tree=\"advancedExamples.testHideComplexNodes\" />\r\n                  </div>\r\n                  <div class=\"explanation\">\r\n                    <p><strong>预期结果：</strong></p>\r\n                    <ul>\r\n                      <li>✅ 只显示 \"可见字典\" 和 \"可见列表\"</li>\r\n                      <li>❌ \"隐藏字典\" 被 hideList 隐藏</li>\r\n                      <li>❌ \"隐藏列表\" 被 hideList 隐藏</li>\r\n                      <li>❌ \"自隐藏字典\" 被 hideSelf 隐藏</li>\r\n                    </ul>\r\n                    <p><strong>说明：</strong>showWhiteList 优先级高于 hideList，只有白名单中的节点会显示。</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"example-container\">\r\n                <h3>8.2 员工管理表单 - 综合示例</h3>\r\n\r\n                <div class=\"code-blocks-container\">\r\n                  <div class=\"code-block\">\r\n                    <h4>树定义 (Script)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;script lang=\"ts\" setup&gt;\r\n        import { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n        // 综合使用所有特性的员工管理表单\r\n        const employeeForm = createTreeFromConfig(\r\n          cns('dict', 'dict', 'employeeInfo', {}, false, {}, [\r\n            cns('dict', 'dict', 'basicInfo', {}, false, {}, [\r\n              cns('string', 'leaf', 'name', '张三', false, {}, [], '姓名'),\r\n              cns('selection', 'leaf', 'gender', '男', false, {\r\n                options: ['男', '女', '其他']\r\n              }, [], '性别'),\r\n              cns('date', 'leaf', 'birthDate', '1990-01-01', false, {}, [], '出生日期'),\r\n              cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话')\r\n            ], '基本信息'),\r\n            cns('dict', 'dict', 'workInfo', {}, false, {}, [\r\n              cns('string', 'leaf', 'department', '技术部', false, {}, [], '部门'),\r\n              cns('string', 'leaf', 'position', '高级工程师', false, {}, [], '职位'),\r\n              cns('number', 'leaf', 'salary', 15000, false, {}, [], '薪资'),\r\n              cns('date', 'leaf', 'hireDate', '2020-01-01', false, {}, [], '入职日期')\r\n            ], '工作信息')\r\n          ])\r\n        )\r\n\r\n        // 事件处理函数\r\n        const searchEmployee = (slotProps: any) => {\r\n          alert(`搜索员工: ${slotProps.allProps.modelValue}`)\r\n        }\r\n\r\n        const updateSalary = (slotProps: any, event: Event) => {\r\n          const target = event.target as HTMLInputElement\r\n          if (slotProps.allProps.node) {\r\n            slotProps.allProps.node.currentValue = Number(target.value)\r\n          }\r\n        }\r\n\r\n        const saveEmployee = () => {\r\n          alert('员工信息已保存')\r\n        }\r\n\r\n        const resetEmployee = () => {\r\n          alert('表单已重置')\r\n        }\r\n\r\n        const deleteEmployee = () => {\r\n          if (confirm('确定要删除这个员工吗？')) {\r\n            alert('员工已删除')\r\n          }\r\n        }\r\n        &lt;/script&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>模板 (Template)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;template&gt;\r\n          &lt;VarBox :tree=\"employeeForm\"&gt;\r\n            &lt;!-- 为姓名字段添加搜索功能 --&gt;\r\n            &lt;template #employeeInfo-basicInfo-name--extra=\"slotProps\"&gt;\r\n              &lt;button\r\n                class=\"search-employee-btn\"\r\n                @click=\"searchEmployee(slotProps)\"\r\n              &gt;\r\n                🔍 搜索员工\r\n              &lt;/button&gt;\r\n            &lt;/template&gt;\r\n\r\n            &lt;!-- 自定义薪资输入 --&gt;\r\n            &lt;template #employeeInfo-workInfo-salary--simple=\"slotProps\"&gt;\r\n              &lt;div class=\"salary-input\"&gt;\r\n                &lt;span class=\"currency\"&gt;¥&lt;/span&gt;\r\n                &lt;input\r\n                  :value=\"slotProps.allProps.modelValue\"\r\n                  @input=\"updateSalary(slotProps, $event)\"\r\n                  type=\"number\"\r\n                  class=\"salary-field\"\r\n                  placeholder=\"请输入薪资\"\r\n                /&gt;\r\n                &lt;span class=\"unit\"&gt;元/月&lt;/span&gt;\r\n              &lt;/div&gt;\r\n            &lt;/template&gt;\r\n\r\n            &lt;!-- 添加操作按钮区域 --&gt;\r\n            &lt;template #employeeInfo--leaf&gt;\r\n              &lt;div class=\"action-buttons\"&gt;\r\n                &lt;button class=\"save-btn\" @click=\"saveEmployee\"&gt;\r\n                  💾 保存\r\n                &lt;/button&gt;\r\n                &lt;button class=\"reset-btn\" @click=\"resetEmployee\"&gt;\r\n                  🔄 重置\r\n                &lt;/button&gt;\r\n                &lt;button class=\"delete-btn\" @click=\"deleteEmployee\"&gt;\r\n                  🗑️ 删除\r\n                &lt;/button&gt;\r\n              &lt;/div&gt;\r\n            &lt;/template&gt;\r\n          &lt;/VarBox&gt;\r\n        &lt;/template&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"code-block\">\r\n                    <h4>样式 (Style)</h4>\r\n                    <div class=\"code-example\">\r\n                      <pre><code>&lt;style scoped&gt;\r\n        /* 高级示例样式 */\r\n        :deep(.employeeInfo--dict-leaf-section) {\r\n          display: grid;\r\n          grid-template-columns: repeat(4, 1fr);\r\n          gap: 15px;\r\n          padding: 20px;\r\n          background: #f5f5f5;\r\n          border-radius: 8px;\r\n          margin: 10px 0;\r\n        }\r\n\r\n        .salary-input {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 5px;\r\n          border: 1px solid #28a745;\r\n          border-radius: 4px;\r\n          padding: 4px 8px;\r\n          background: #f8fff8;\r\n        }\r\n\r\n        .currency, .unit {\r\n          font-weight: bold;\r\n          color: #28a745;\r\n        }\r\n\r\n        .salary-field {\r\n          border: none;\r\n          outline: none;\r\n          background: transparent;\r\n          text-align: center;\r\n          width: 100px;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .action-buttons {\r\n          grid-column: 1 / -1;\r\n          display: flex;\r\n          gap: 10px;\r\n          justify-content: center;\r\n          margin-top: 20px;\r\n          padding: 15px;\r\n          background: white;\r\n          border-radius: 6px;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        }\r\n\r\n        .save-btn, .reset-btn, .delete-btn {\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 6px;\r\n          cursor: pointer;\r\n          font-weight: bold;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .save-btn {\r\n          background: #28a745;\r\n          color: white;\r\n        }\r\n\r\n        .save-btn:hover {\r\n          background: #218838;\r\n          transform: translateY(-2px);\r\n        }\r\n\r\n        .reset-btn {\r\n          background: #ffc107;\r\n          color: #212529;\r\n        }\r\n\r\n        .reset-btn:hover {\r\n          background: #e0a800;\r\n          transform: translateY(-2px);\r\n        }\r\n\r\n        .delete-btn {\r\n          background: #dc3545;\r\n          color: white;\r\n        }\r\n\r\n        .delete-btn:hover {\r\n          background: #c82333;\r\n          transform: translateY(-2px);\r\n        }\r\n\r\n        .search-employee-btn {\r\n          margin-left: 8px;\r\n          padding: 6px 12px;\r\n          background: #17a2b8;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-size: 12px;\r\n          transition: background-color 0.3s ease;\r\n        }\r\n\r\n        .search-employee-btn:hover {\r\n          background: #138496;\r\n        }\r\n        &lt;/style&gt;</code></pre>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"demo-area advanced-employee-demo\">\r\n                  <VarBox :tree=\"advancedExamples.employeeForm\">\r\n                    <!-- 为姓名字段添加搜索功能 -->\r\n                    <template #employeeInfo-basicInfo-name--extra=\"slotProps\">\r\n                      <button class=\"search-employee-btn\" @click=\"searchEmployee(slotProps)\">\r\n                        🔍 搜索员工\r\n                      </button>\r\n                    </template>\r\n\r\n                    <!-- 自定义薪资输入 -->\r\n                    <template #employeeInfo-workInfo-salary--simple=\"slotProps\">\r\n                      <div class=\"salary-input\">\r\n                        <span class=\"currency\">¥</span>\r\n                        <input\r\n                          :value=\"slotProps.allProps.modelValue\"\r\n                          @input=\"updateSalary(slotProps, $event)\"\r\n                          type=\"number\"\r\n                          class=\"salary-field\"\r\n                          placeholder=\"请输入薪资\"\r\n                        />\r\n                        <span class=\"unit\">元/月</span>\r\n                      </div>\r\n                    </template>\r\n\r\n                    <!-- 添加操作按钮区域 -->\r\n                    <template #employeeInfo--leaf>\r\n                      <div class=\"action-buttons\">\r\n                        <button class=\"save-btn\" @click=\"saveEmployee\">💾 保存</button>\r\n                        <button class=\"reset-btn\" @click=\"resetEmployee\">🔄 重置</button>\r\n                        <button class=\"delete-btn\" @click=\"deleteEmployee\">🗑️ 删除</button>\r\n                      </div>\r\n                    </template>\r\n                  </VarBox>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </AppContent>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { markRaw } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport MyCustomInput from '@/test/varbox/MyCustomInput.vue'\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport { createTreeFromConfig, cns } from '@/utils/VarTree'\r\n\r\n// 基础示例\r\nconst basicExamples = {\r\n  simpleString: createTreeFromConfig(\r\n    cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名')\r\n  ),\r\n  simpleNumber: createTreeFromConfig(\r\n    cns('number', 'leaf', 'age', 25, false, {}, [], '年龄')\r\n  ),\r\n  simpleDate: createTreeFromConfig(\r\n    cns('date', 'leaf', 'birthDate', '1995-01-01', false, {}, [], '出生日期')\r\n  ),\r\n  simpleSelection: createTreeFromConfig(\r\n    cns('selection', 'leaf', 'gender', '男', false, {\r\n      options: ['男', '女', '其他']\r\n    }, [], '性别')\r\n  )\r\n}\r\n\r\n// 简单树结构示例\r\nconst simpleTreeExamples = {\r\n  userInfo: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'username', '张三', false, {}, [], '用户名'),\r\n      cns('number', 'leaf', 'age', 25, false, {}, [], '年龄'),\r\n      cns('string', 'leaf', 'email', 'zhang@example.com', false, {}, [], '邮箱'),\r\n      cns('selection', 'leaf', 'gender', '男', false, {\r\n        options: ['男', '女', '其他']\r\n      }, [], '性别')\r\n    ])\r\n  ),\r\n  simpleList: createTreeFromConfig(\r\n    cns('dynamiclist', 'list', 'hobbies', [], false, {}, [\r\n      cns('string', 'leaf', '', '阅读', false),\r\n      cns('string', 'leaf', '', '游泳', false),\r\n      cns('string', 'leaf', '', '编程', false)\r\n    ], '爱好列表')\r\n  )\r\n}\r\n\r\n// 复杂树结构示例\r\nconst complexTreeExamples = {\r\n  threeLevelDict: createTreeFromConfig(\r\n    cns('dict', 'dict', 'company', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '科技公司', false, {}, [], '公司名称'),\r\n      cns('dict', 'dict', 'address', {}, false, {}, [\r\n        cns('string', 'leaf', 'country', '中国', false, {}, [], '国家'),\r\n        cns('string', 'leaf', 'city', '北京', false, {}, [], '城市'),\r\n        cns('dict', 'dict', 'detail', {}, false, {}, [\r\n          cns('string', 'leaf', 'street', '中关村大街', false, {}, [], '街道'),\r\n          cns('string', 'leaf', 'building', '科技大厦', false, {}, [], '建筑物'),\r\n          cns('number', 'leaf', 'floor', 15, false, {}, [], '楼层')\r\n        ], '详细地址')\r\n      ], '地址信息')\r\n    ])\r\n  ),\r\n  employeeProjects: createTreeFromConfig(\r\n    cns('dict', 'dict', 'employee', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '李四', false, {}, [], '员工姓名'),\r\n      cns('dynamiclist', 'list', 'projects', [], false, {}, [\r\n        cns('dict', 'dict', '', {}, false, {}, [\r\n          cns('string', 'leaf', 'projectName', '项目A', false, {}, [], '项目名称'),\r\n          cns('date', 'leaf', 'startDate', '2024-01-01', false, {}, [], '开始日期'),\r\n          cns('date', 'leaf', 'endDate', '2024-06-30', false, {}, [], '结束日期'),\r\n          cns('selection', 'leaf', 'status', '进行中', false, {\r\n            options: ['未开始', '进行中', '已完成', '已暂停']\r\n          }, [], '状态')\r\n        ])\r\n      ], '项目列表')\r\n    ])\r\n  )\r\n}\r\n\r\n// 插槽示例\r\nconst slotExamples = {\r\n  extraSlot: createTreeFromConfig(\r\n    cns('string', 'leaf', '用户名', '张三', false, {}, [], '用户名')\r\n  ),\r\n  simpleSlot: createTreeFromConfig(\r\n    cns('number', 'leaf', '年龄', 25, false, {}, [], '年龄')\r\n  ),\r\n  wrapperSlot: createTreeFromConfig(\r\n    cns('selection', 'leaf', '性别', '男', false, {\r\n      options: ['男', '女', '其他']\r\n    }, [], '性别')\r\n  ),\r\n  dateSlot: createTreeFromConfig(\r\n    cns('date', 'leaf', '生日', '1995-01-01', false, {}, [], '生日')\r\n  )\r\n}\r\n\r\n// 钩子示例\r\nconst hookExamples = {\r\n  customComponent: createTreeFromConfig(\r\n    cns('string', 'leaf', 'customField', '自定义值', false, {\r\n      customComponent: markRaw(MyCustomInput)\r\n    }, [], '自定义字段')\r\n  ),\r\n  validationHook: createTreeFromConfig(\r\n    cns('string', 'leaf', 'email', 'test@example.com', false, {\r\n      customComponent: markRaw(MyCustomInput),\r\n      validators: [\r\n        {\r\n          creteria: (value: any) => {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n            return emailRegex.test(value)\r\n          },\r\n          message: '请输入有效的邮箱地址'\r\n        }\r\n      ]\r\n    }, [], '邮箱地址')\r\n  )\r\n}\r\n\r\n// CSS示例\r\nconst cssExamples = {\r\n  customForm: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '张三', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'zhang@example.com', false, {}, [], '邮箱'),\r\n      cns('number', 'leaf', 'age', 25, false, {}, [], '年龄')\r\n    ])\r\n  ),\r\n  pathTargeting: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('dict', 'dict', 'personalInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'name', '李四', false, {}, [], '姓名'),\r\n        cns('string', 'leaf', 'email', 'li@example.com', false, {}, [], '邮箱')\r\n      ], '个人信息'),\r\n      cns('dict', 'dict', 'workInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'company', '科技公司', false, {}, [], '公司'),\r\n        cns('string', 'leaf', 'position', '工程师', false, {}, [], '职位')\r\n      ], '工作信息')\r\n    ])\r\n  )\r\n}\r\n\r\n// Grid布局示例\r\nconst gridExamples = {\r\n  basicGrid: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '王五', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'wang@example.com', false, {}, [], '邮箱'),\r\n      cns('number', 'leaf', 'age', 30, false, {}, [], '年龄'),\r\n      cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话'),\r\n      cns('string', 'leaf', 'address', '北京市朝阳区', false, {}, [], '地址'),\r\n      cns('selection', 'leaf', 'gender', '男', false, {\r\n        options: ['男', '女', '其他']\r\n      }, [], '性别')\r\n    ])\r\n  ),\r\n  complexGrid: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '赵六', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'zhao@example.com', false, {}, [], '邮箱'),\r\n      cns('string', 'leaf', 'phone', '13900139000', false, {}, [], '电话'),\r\n      cns('number', 'leaf', 'age', 28, false, {}, [], '年龄'),\r\n      cns('string', 'leaf', 'address', '上海市浦东新区', false, {}, [], '地址'),\r\n      cns('selection', 'leaf', 'status', '在职', false, {\r\n        options: ['在职', '离职', '休假']\r\n      }, [], '状态')\r\n    ])\r\n  ),\r\n  gridWithSlots: createTreeFromConfig(\r\n    cns('dict', 'dict', 'userInfo', {}, false, {}, [\r\n      cns('string', 'leaf', 'name', '孙七', false, {}, [], '姓名'),\r\n      cns('string', 'leaf', 'email', 'sun@example.com', false, {}, [], '邮箱')\r\n    ])\r\n  )\r\n}\r\n\r\n// 高级示例\r\nconst advancedExamples = {\r\n\r\n  testHideComplexNodes: createTreeFromConfig(\r\n    cns('dict', 'dict', 'testRoot', null, false, {\r\n      hideList: ['hiddenDict', 'hiddenList'],\r\n      showWhiteList: ['visibleDict', 'visibleList']\r\n    }, [\r\n      cns('dict', 'dict', 'visibleDict', null, false, {}, [\r\n        cns('string', 'leaf', 'field1', 'value1', false, {}, [], '字段1')\r\n      ], '可见字典'),\r\n      cns('dict', 'dict', 'hiddenDict', null, false, {}, [\r\n        cns('string', 'leaf', 'field2', 'value2', false, {}, [], '字段2')\r\n      ], '隐藏字典'),\r\n      cns('dynamiclist', 'list', 'visibleList', null, false, {\r\n        childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\r\n      }, [], '可见列表'),\r\n      cns('dynamiclist', 'list', 'hiddenList', null, false, {\r\n        childTemplate: cns('string', 'leaf', 'item', '', false, {}, [], '项目')\r\n      }, [], '隐藏列表'),\r\n      cns('dict', 'dict', 'selfHiddenDict', null, false, {\r\n        hideSelf: true\r\n      }, [\r\n        cns('string', 'leaf', 'field3', 'value3', false, {}, [], '字段3')\r\n      ], '自隐藏字典')\r\n    ], '测试根节点')\r\n  ),\r\n\r\n  employeeForm: createTreeFromConfig(\r\n    cns('dict', 'dict', 'employeeInfo', {}, false, {}, [\r\n      cns('dict', 'dict', 'basicInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'name', '张三', false, {}, [], '姓名'),\r\n        cns('selection', 'leaf', 'gender', '男', false, {\r\n          options: ['男', '女', '其他']\r\n        }, [], '性别'),\r\n        cns('date', 'leaf', 'birthDate', '1990-01-01', false, {}, [], '出生日期'),\r\n        cns('string', 'leaf', 'phone', '13800138000', false, {}, [], '电话')\r\n      ], '基本信息'),\r\n      cns('dict', 'dict', 'workInfo', {}, false, {}, [\r\n        cns('string', 'leaf', 'department', '技术部', false, {}, [], '部门'),\r\n        cns('string', 'leaf', 'position', '高级工程师', false, {}, [], '职位'),\r\n        cns('number', 'leaf', 'salary', 15000, false, {}, [], '薪资'),\r\n        cns('date', 'leaf', 'hireDate', '2020-01-01', false, {}, [], '入职日期')\r\n      ], '工作信息')\r\n    ])\r\n  )\r\n}\r\n\r\n// 事件处理函数\r\nconst handleSearch = (slotProps: any) => {\r\n  alert(`搜索: ${slotProps.allProps.modelValue}`)\r\n}\r\n\r\nconst handleClear = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = ''\r\n  }\r\n}\r\n\r\nconst increment = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    const currentValue = Number(slotProps.allProps.node.currentValue) || 0\r\n    slotProps.allProps.node.currentValue = currentValue + 1\r\n  }\r\n}\r\n\r\nconst decrement = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    const currentValue = Number(slotProps.allProps.node.currentValue) || 0\r\n    slotProps.allProps.node.currentValue = Math.max(0, currentValue - 1)\r\n  }\r\n}\r\n\r\nconst updateValue = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLInputElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = Number(target.value)\r\n  }\r\n}\r\n\r\nconst updateSelectValue = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLSelectElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = target.value\r\n  }\r\n}\r\n\r\nconst updateDateValue = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLInputElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = target.value\r\n  }\r\n}\r\n\r\nconst setToday = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    const today = new Date().toISOString().split('T')[0]\r\n    slotProps.allProps.node.currentValue = today\r\n  }\r\n}\r\n\r\nconst clearDate = (slotProps: any) => {\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = ''\r\n  }\r\n}\r\n\r\nconst searchEmployee = (slotProps: any) => {\r\n  alert(`搜索员工: ${slotProps.allProps.modelValue}`)\r\n}\r\n\r\nconst updateSalary = (slotProps: any, event: Event) => {\r\n  const target = event.target as HTMLInputElement\r\n  if (slotProps.allProps.node) {\r\n    slotProps.allProps.node.currentValue = Number(target.value)\r\n  }\r\n}\r\n\r\nconst saveEmployee = () => {\r\n  alert('员工信息已保存')\r\n}\r\n\r\nconst resetEmployee = () => {\r\n  // 重置表单逻辑\r\n  alert('表单已重置')\r\n}\r\n\r\nconst deleteEmployee = () => {\r\n  if (confirm('确定要删除这个员工吗？')) {\r\n    alert('员工已删除')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.vartree-tutorial {\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  position: relative;\r\n  min-height: 100vh;\r\n}\r\n\r\n.tutorial-header {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n  padding: 30px;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.tutorial-header h1 {\r\n  margin: 0 0 15px 0;\r\n  font-size: 2.5em;\r\n  font-weight: 300;\r\n}\r\n\r\n.tutorial-description {\r\n  font-size: 1.1em;\r\n  opacity: 0.9;\r\n  margin: 0;\r\n}\r\n\r\n.tutorial-nav {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 0;\r\n  width: 250px;\r\n  height: 60vh;\r\n  background: var(--theme-color-light-a);\r\n  padding: 20px;\r\n  border-right: 2px solid var(--theme-color-light-a);\r\n  overflow-y: auto;\r\n  z-index: 1000;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.tutorial-nav h2 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  font-size: 1.3em;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid var(--theme-color-light-a);\r\n}\r\n\r\n.tutorial-nav ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.tutorial-nav li {\r\n  margin: 0;\r\n}\r\n\r\n.tutorial-nav a {\r\n  display: block;\r\n  color: var(--theme-color);\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  padding: 10px 15px;\r\n  border-radius: 6px;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.tutorial-nav a:hover {\r\n  background: var(--theme-color-light-a);\r\n  color: var(--theme-color-darker);\r\n  transform: translateX(5px);\r\n}\r\n\r\n/* 主要内容区域 */\r\n.tutorial-content {\r\n  margin-left: 270px;\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n}\r\n\r\n.tutorial-section {\r\n  margin-bottom: 60px;\r\n  scroll-margin-top: 20px;\r\n}\r\n\r\n.tutorial-section h2 {\r\n  color: #333;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 30px;\r\n  font-size: 1.8em;\r\n}\r\n\r\n.tutorial-section > p {\r\n  color: #666;\r\n  font-size: 1.1em;\r\n  margin-bottom: 25px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.example-container {\r\n  margin-bottom: 40px;\r\n  border: 2px solid var(--theme-color-light-a);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.example-container h3 {\r\n  background: transparent;\r\n  margin: 0;\r\n  padding: 15px 20px;\r\n  color: #495057;\r\n  font-size: 1.2em;\r\n}\r\n\r\n.code-example {\r\n  background: #2d3748;\r\n  color: #e2e8f0;\r\n  padding: 20px;\r\n  margin: 0;\r\n  overflow-x: auto;\r\n}\r\n\r\n.code-example pre {\r\n  margin: 0;\r\n  font-family: 'Fira Code', 'Consolas', monospace;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  text-align: left;\r\n}\r\n\r\n/* 三列代码块布局 */\r\n.code-blocks-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  margin-bottom: 20px;\r\n  align-items: start;\r\n  gap: 3px;\r\n  margin: 3px;\r\n}\r\n\r\n.code-block {\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.code-block h4 {\r\n  margin: 0;\r\n  padding: 10px 15px;\r\n  background: var(--theme-color-light-a);\r\n  color: #495057;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n}\r\n\r\n.code-block .code-example {\r\n  margin: 0;\r\n  border-radius: 0;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 300px;\r\n}\r\n\r\n.code-block .code-example::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.code-block .code-example pre {\r\n  font-size: 12px;\r\n  padding: 15px;\r\n  margin: 0;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: flex-start;\r\n}\r\n\r\n.demo-area {\r\n  padding: 25px;\r\n  background: transparent;\r\n  border: var(--theme-color-light-a) 1px solid;\r\n  border-radius: 8px;\r\n}\r\n\r\n\r\n\r\n/* 插槽示例样式 */\r\n.search-btn, .clear-btn {\r\n  margin-left: 8px;\r\n  padding: 6px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.search-btn {\r\n  background: #28a745;\r\n  color: white;\r\n}\r\n\r\n.search-btn:hover {\r\n  background: #218838;\r\n}\r\n\r\n.clear-btn {\r\n  background: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background: #c82333;\r\n}\r\n\r\n.custom-number-input {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 4px;\r\n}\r\n\r\n.custom-number-input button {\r\n  width: 30px;\r\n  height: 30px;\r\n  border: none;\r\n  background: #007bff;\r\n  color: white;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.custom-number-input button:hover {\r\n  background: #0056b3;\r\n}\r\n\r\n.number-display {\r\n  width: 80px;\r\n  text-align: center;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 16px;\r\n}\r\n\r\n.custom-wrapper {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n.custom-label {\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n  font-size: 14px;\r\n}\r\n\r\n.custom-content {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.custom-select {\r\n  background: white;\r\n  color: #333;\r\n  border: none;\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n.custom-date-input {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.date-picker {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.today-btn, .clear-btn {\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n}\r\n\r\n.today-btn {\r\n  background: #17a2b8;\r\n  color: white;\r\n}\r\n\r\n.today-btn:hover {\r\n  background: #138496;\r\n}\r\n\r\n/* CSS示例样式 */\r\n:deep(.userInfo--wrapper) {\r\n  background: #f0f8ff;\r\n  border: 2px solid #4a90e2;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin: 10px 0;\r\n}\r\n\r\n:deep(.userInfo--var-label) {\r\n  color: #2c5aa0;\r\n  font-weight: bold;\r\n}\r\n\r\n:deep(.userInfo-personalInfo-name--wrapper) {\r\n  background: linear-gradient(45deg, #ff6b6b, #feca57);\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  margin: 5px 0;\r\n}\r\n\r\n:deep(.userInfo-personalInfo-email--leaf-input-container) {\r\n  border: 2px solid #48cae4;\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n}\r\n\r\n/* Grid布局样式 */\r\n:deep(.userInfo--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n}\r\n\r\n:deep(.complexForm--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 15px;\r\n  padding: 20px;\r\n  background: #fff3cd;\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n}\r\n\r\n:deep(.userInfo-name--wrapper) {\r\n  grid-row: 1;\r\n  grid-column: 1 / 3;\r\n}\r\n:deep(.userInfo-email--wrapper) {\r\n  grid-row: 1;\r\n  grid-column: 3 / 5;\r\n}\r\n:deep(.userInfo-phone--wrapper) {\r\n  grid-row: 2;\r\n  grid-column: 1;\r\n}\r\n:deep(.userInfo-age--wrapper) {\r\n  grid-row: 2;\r\n  grid-column: 2;\r\n}\r\n:deep(.userInfo-address--wrapper) {\r\n  grid-row: 2;\r\n  grid-column: 3;\r\n}\r\n:deep(.userInfo-status--wrapper) {\r\n  grid-row: 2;\r\n  grid-column: 4;\r\n}\r\n\r\n:deep(.userInfo--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 15px;\r\n  padding: 20px;\r\n  background: #e8f5e8;\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.extra-grid-item {\r\n  grid-column: 3;\r\n  grid-row: 1;\r\n  background: #e3f2fd;\r\n  padding: 15px;\r\n  border-radius: 6px;\r\n  border: 2px dashed #2196f3;\r\n}\r\n\r\n.extra-content {\r\n  margin-top: 8px;\r\n  font-style: italic;\r\n  color: #1976d2;\r\n}\r\n\r\n/* 高级示例样式 */\r\n:deep(.employeeInfo--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 15px;\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.salary-input {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  border: 1px solid #28a745;\r\n  border-radius: 4px;\r\n  padding: 4px 8px;\r\n  background: #f8fff8;\r\n}\r\n\r\n.currency, .unit {\r\n  font-weight: bold;\r\n  color: #28a745;\r\n}\r\n\r\n.salary-field {\r\n  border: none;\r\n  outline: none;\r\n  background: transparent;\r\n  text-align: center;\r\n  width: 100px;\r\n  font-size: 16px;\r\n}\r\n\r\n.action-buttons {\r\n  grid-column: 1 / -1;\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.save-btn, .reset-btn, .delete-btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.save-btn {\r\n  background: #28a745;\r\n  color: white;\r\n}\r\n\r\n.save-btn:hover {\r\n  background: #218838;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.reset-btn {\r\n  background: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n.reset-btn:hover {\r\n  background: #e0a800;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.delete-btn {\r\n  background: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background: #c82333;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.search-employee-btn {\r\n  margin-left: 8px;\r\n  padding: 6px 12px;\r\n  background: #17a2b8;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.search-employee-btn:hover {\r\n  background: #138496;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1024px) {\r\n  .tutorial-nav {\r\n    display: none;\r\n  }\r\n\r\n  .tutorial-content {\r\n    margin-left: 0;\r\n    padding: 20px;\r\n  }\r\n}\r\n\r\n/* 滚动条样式 */\r\n.tutorial-nav::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.tutorial-nav::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n.tutorial-nav::-webkit-scrollbar-thumb {\r\n  background: var(--theme-color-light-a);\r\n  border-radius: 3px;\r\n}\r\n\r\n.tutorial-nav::-webkit-scrollbar-thumb:hover {\r\n  background: #667eea;\r\n}\r\n</style>\r\n","import script from \"./VarTreeTutorial.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./VarTreeTutorial.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./VarTreeTutorial.vue?vue&type=style&index=0&id=40018b34&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-40018b34\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"test-section\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"tree-value-display\"\n}\n\nimport { ref } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\nimport { createTreeFromConfig, createNodeFromConfig, cns, VarNode } from '@/utils/VarTree'\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ItemConditionKitTest',\n  setup(__props) {\n\r\nconst appContentRef = ref(null) as any\r\n\r\n// 创建基础数据树 - 不包含 items 节点\r\nconst mainDataTree = createTreeFromConfig(\r\n  cns('dict','dict','mainData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','itemOverview',{},false,{},[\r\n      cns('string','leaf','inquiry','TEST-001',false,{},[],\"Inquiry:\"),\r\n      cns('string','leaf','soldToParty','CUSTOMER-001',false,{},[],\"Sold-To Party:\"),\r\n      // items 节点将通过 kit.summonItemsNode 添加\r\n    ],'Item Overview')\r\n  ])\r\n)\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit: ItemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/inquiry/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\n// 使用 kit 创建 items 节点\r\nconst itemsNode = itemConditionKit.summonItemsNode(\r\n  mainDataTree, \r\n  ['itemOverview', 'items']\r\n)\r\n\r\n// 初始化测试数据\r\nfunction initializeTestData() {\r\n  const testItems = [\r\n    {\r\n      item: '10',\r\n      material: 'MAT-001',\r\n      orderQuantity: '100',\r\n      orderQuantityUnit: 'PC',\r\n      description: 'Test Material 1',\r\n      reqDelivDate: '2024-01-15',\r\n      netValue: '500.00',\r\n      netValueUnit: 'USD',\r\n      taxValue: '50.00',\r\n      taxValueUnit: 'USD',\r\n      pricingDate: '2024-01-01',\r\n      orderProbability: '0.8',\r\n      pricingElements: []\r\n    },\r\n    {\r\n      item: '20',\r\n      material: 'MAT-002',\r\n      orderQuantity: '200',\r\n      orderQuantityUnit: 'PC',\r\n      description: 'Test Material 2',\r\n      reqDelivDate: '2024-01-20',\r\n      netValue: '800.00',\r\n      netValueUnit: 'USD',\r\n      taxValue: '80.00',\r\n      taxValueUnit: 'USD',\r\n      pricingDate: '2024-01-01',\r\n      orderProbability: '0.9',\r\n      pricingElements: []\r\n    }\r\n  ]\r\n\r\n  testItems.forEach(itemData => {\r\n    const newItem = itemsNode.config.childTemplate ? \r\n      createNodeFromConfig(itemsNode.config.childTemplate) :\r\n      new VarNode()\r\n    newItem.forceSetValue(itemData)\r\n    itemsNode.addChild(newItem)\r\n  })\r\n}\r\n\r\n// ItemConditionDetail 引用\r\nconst itemConditionDetailRef = ref<InstanceType<typeof ItemConditionDetail> | null>(null)\r\n\r\n// 树值显示\r\nconst treeValueDisplay = ref('')\r\n\r\n// 处理 Items 表格按钮点击\r\nasync function handleItemsTableClick() {\r\n  console.log('handleItemsTableClick called')\r\n\r\n  if (!itemsNode) {\r\n    console.error('Items node not found')\r\n    return\r\n  }\r\n\r\n  const selectedChildren = [...itemsNode.getSelectedChildren()]\r\n  console.log('Selected children:', selectedChildren)\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 切换到详细信息阶段\r\n    console.log('切换到详细信息阶段')\r\n    appContentRef.value?.goToStage(1)\r\n\r\n    // 等待组件渲染后，调用详细信息组件的初始化方法\r\n    setTimeout(() => {\r\n      if (itemConditionDetailRef.value) {\r\n        console.log('调用详细信息组件的 handleItemsTableClick')\r\n        itemConditionDetailRef.value.handleItemsTableClick()\r\n      }\r\n    }, 100)\r\n  } else {\r\n    console.log('No items selected')\r\n  }\r\n}\r\n\r\n// 处理保存\r\nfunction handleSave() {\r\n  console.log('保存数据')\r\n  appContentRef.value?.goToStage(0)\r\n}\r\n\r\n// 处理取消\r\nfunction handleCancel() {\r\n  console.log('取消编辑')\r\n  appContentRef.value?.goToStage(0)\r\n}\r\n\r\n// 处理验证失败\r\nfunction handleValidationFailed(items: VarNode[]) {\r\n  console.log('验证失败的items:', items)\r\n}\r\n\r\n// 处理验证成功\r\nfunction handleValidationSuccess(items: VarNode[]) {\r\n  console.log('验证成功的items:', items)\r\n  // 自动切换到详细信息阶段\r\n  appContentRef.value?.goToStage(2)\r\n}\r\n\r\n// 处理 AppContent 的 before-next 钩子\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('Stage change:', currentStage, '->', targetStage)\r\n  return true\r\n}\r\n\r\n// 处理 AppContent 的 before-prev 钩子\r\nasync function handleCancel2(currentStage: number, targetStage: number) {\r\n  console.log('Cancel from stage:', currentStage, 'to:', targetStage)\r\n  return true\r\n}\r\n\r\n// 显示树的getValue结果\r\nfunction showTreeValue() {\r\n  const treeValue = mainDataTree.getValue()\r\n  treeValueDisplay.value = JSON.stringify(treeValue, null, 2)\r\n  console.log('Tree getValue:', treeValue)\r\n}\r\n\r\n// 初始化\r\ninitializeTestData()\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(AppContent, {\n    stages: ['itemOverview', 'itemCondition'],\n    \"before-next\": handleExecute,\n    \"before-prev\": handleCancel2,\n    \"footer-config\": [\r\n      { prevText: '/hide', nextText: '/hide' },\r\n      { prevText: '/hide', nextText: '/hide' }\r\n    ],\n    ref_key: \"appContentRef\",\n    ref: appContentRef\n  }, {\n    [`stage-itemOverview`]: _withCtx(() => [\n      _cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"ItemConditionKit 测试 - Items 列表\", -1)),\n      _createVNode(VarBox, { tree: _unref(mainDataTree) }, {\n        [`mainData-itemOverview-items--extra-buttons`]: _withCtx(() => [\n          _createElementVNode(\"button\", {\n            class: \"execute-button table-extra-button\",\n            onClick: handleItemsTableClick\n          }, \" ... \")\n        ]),\n        _: 2\n      }, 1032, [\"tree\"]),\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"button\", {\n          class: \"test-button\",\n          onClick: showTreeValue\n        }, \" 显示树的getValue \"),\n        (treeValueDisplay.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"树的getValue结果：\", -1)),\n              _createElementVNode(\"pre\", null, _toDisplayString(treeValueDisplay.value), 1)\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    [`stage-itemCondition`]: _withCtx(() => [\n      _cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Item 详细信息 (使用 ItemConditionKit)\", -1)),\n      _createVNode(ItemConditionDetail, {\n        ref_key: \"itemConditionDetailRef\",\n        ref: itemConditionDetailRef,\n        kit: _unref(itemConditionKit),\n        onSave: handleSave,\n        onCancel: handleCancel,\n        onValidationFailed: handleValidationFailed,\n        onValidationSuccess: handleValidationSuccess\n      }, {\n        [`itemDetailConditions-pricingElements--extra-buttons`]: _withCtx(() => _cache[2] || (_cache[2] = [\n          _createElementVNode(\"button\", {\n            class: \"execute-button table-extra-button item-condition-button\",\n            onClick: () => {}\n          }, \" New \", -1),\n          _createElementVNode(\"button\", {\n            class: \"execute-button table-extra-button item-condition-button\",\n            onClick: () => {}\n          }, \" Delete \", -1)\n        ])),\n        _: 2\n      }, 1032, [\"kit\"])\n    ]),\n    [`footer-content-right`]: _withCtx(() => _cache[4] || (_cache[4] = [\n      _createElementVNode(\"div\", { class: \"app-content-footer-content-right\" }, null, -1)\n    ])),\n    _: 2\n  }, 1536))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport { ref } from 'vue'\r\nimport VarBox from '@/components/varbox/VarBox.vue'\r\nimport AppContent from '@/components/applicationContent/AppContent.vue'\r\nimport ItemConditionDetail from '@/components/itemCondition/ItemConditionDetail.vue'\r\nimport { createTreeFromConfig, createNodeFromConfig, cns, VarNode } from '@/utils/VarTree'\r\nimport { createItemConditionKit, type ItemConditionKit } from '@/utils/ItemConditionKit'\r\n\r\nconst appContentRef = ref(null) as any\r\n\r\n// 创建基础数据树 - 不包含 items 节点\r\nconst mainDataTree = createTreeFromConfig(\r\n  cns('dict','dict','mainData',{},false,{hideLabel:true},[\r\n    cns('dict','dict','itemOverview',{},false,{},[\r\n      cns('string','leaf','inquiry','TEST-001',false,{},[],\"Inquiry:\"),\r\n      cns('string','leaf','soldToParty','CUSTOMER-001',false,{},[],\"Sold-To Party:\"),\r\n      // items 节点将通过 kit.summonItemsNode 添加\r\n    ],'Item Overview')\r\n  ])\r\n)\r\n\r\n// 创建 ItemConditionKit 实例\r\nconst itemConditionKit: ItemConditionKit = createItemConditionKit({\r\n  validationEndpoint: '/api/app/inquiry/items-tab-query',\r\n  readonly: false,\r\n  navigationLabels: {\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    previous: '← Previous',\r\n    next: 'Next →'\r\n  }\r\n})\r\n\r\n// 使用 kit 创建 items 节点\r\nconst itemsNode = itemConditionKit.summonItemsNode(\r\n  mainDataTree, \r\n  ['itemOverview', 'items']\r\n)\r\n\r\n// 初始化测试数据\r\nfunction initializeTestData() {\r\n  const testItems = [\r\n    {\r\n      item: '10',\r\n      material: 'MAT-001',\r\n      orderQuantity: '100',\r\n      orderQuantityUnit: 'PC',\r\n      description: 'Test Material 1',\r\n      reqDelivDate: '2024-01-15',\r\n      netValue: '500.00',\r\n      netValueUnit: 'USD',\r\n      taxValue: '50.00',\r\n      taxValueUnit: 'USD',\r\n      pricingDate: '2024-01-01',\r\n      orderProbability: '0.8',\r\n      pricingElements: []\r\n    },\r\n    {\r\n      item: '20',\r\n      material: 'MAT-002',\r\n      orderQuantity: '200',\r\n      orderQuantityUnit: 'PC',\r\n      description: 'Test Material 2',\r\n      reqDelivDate: '2024-01-20',\r\n      netValue: '800.00',\r\n      netValueUnit: 'USD',\r\n      taxValue: '80.00',\r\n      taxValueUnit: 'USD',\r\n      pricingDate: '2024-01-01',\r\n      orderProbability: '0.9',\r\n      pricingElements: []\r\n    }\r\n  ]\r\n\r\n  testItems.forEach(itemData => {\r\n    const newItem = itemsNode.config.childTemplate ? \r\n      createNodeFromConfig(itemsNode.config.childTemplate) :\r\n      new VarNode()\r\n    newItem.forceSetValue(itemData)\r\n    itemsNode.addChild(newItem)\r\n  })\r\n}\r\n\r\n// ItemConditionDetail 引用\r\nconst itemConditionDetailRef = ref<InstanceType<typeof ItemConditionDetail> | null>(null)\r\n\r\n// 树值显示\r\nconst treeValueDisplay = ref('')\r\n\r\n// 处理 Items 表格按钮点击\r\nasync function handleItemsTableClick() {\r\n  console.log('handleItemsTableClick called')\r\n\r\n  if (!itemsNode) {\r\n    console.error('Items node not found')\r\n    return\r\n  }\r\n\r\n  const selectedChildren = [...itemsNode.getSelectedChildren()]\r\n  console.log('Selected children:', selectedChildren)\r\n\r\n  if (selectedChildren && selectedChildren.length > 0) {\r\n    // 切换到详细信息阶段\r\n    console.log('切换到详细信息阶段')\r\n    appContentRef.value?.goToStage(1)\r\n\r\n    // 等待组件渲染后，调用详细信息组件的初始化方法\r\n    setTimeout(() => {\r\n      if (itemConditionDetailRef.value) {\r\n        console.log('调用详细信息组件的 handleItemsTableClick')\r\n        itemConditionDetailRef.value.handleItemsTableClick()\r\n      }\r\n    }, 100)\r\n  } else {\r\n    console.log('No items selected')\r\n  }\r\n}\r\n\r\n// 处理保存\r\nfunction handleSave() {\r\n  console.log('保存数据')\r\n  appContentRef.value?.goToStage(0)\r\n}\r\n\r\n// 处理取消\r\nfunction handleCancel() {\r\n  console.log('取消编辑')\r\n  appContentRef.value?.goToStage(0)\r\n}\r\n\r\n// 处理验证失败\r\nfunction handleValidationFailed(items: VarNode[]) {\r\n  console.log('验证失败的items:', items)\r\n}\r\n\r\n// 处理验证成功\r\nfunction handleValidationSuccess(items: VarNode[]) {\r\n  console.log('验证成功的items:', items)\r\n  // 自动切换到详细信息阶段\r\n  appContentRef.value?.goToStage(2)\r\n}\r\n\r\n// 处理 AppContent 的 before-next 钩子\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  console.log('Stage change:', currentStage, '->', targetStage)\r\n  return true\r\n}\r\n\r\n// 处理 AppContent 的 before-prev 钩子\r\nasync function handleCancel2(currentStage: number, targetStage: number) {\r\n  console.log('Cancel from stage:', currentStage, 'to:', targetStage)\r\n  return true\r\n}\r\n\r\n// 显示树的getValue结果\r\nfunction showTreeValue() {\r\n  const treeValue = mainDataTree.getValue()\r\n  treeValueDisplay.value = JSON.stringify(treeValue, null, 2)\r\n  console.log('Tree getValue:', treeValue)\r\n}\r\n\r\n// 初始化\r\ninitializeTestData()\r\n</script>\r\n\r\n<template>\r\n  <AppContent\r\n    :stages=\"['itemOverview', 'itemCondition']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel2\"\r\n    :footer-config=\"[\r\n      { prevText: '/hide', nextText: '/hide' },\r\n      { prevText: '/hide', nextText: '/hide' }\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <!-- Items 列表阶段 -->\r\n    <template #[`stage-itemOverview`]>\r\n      <h2>ItemConditionKit 测试 - Items 列表</h2>\r\n      <VarBox :tree=\"mainDataTree\">\r\n        <template #[`mainData-itemOverview-items--extra-buttons`]>\r\n          <button\r\n            class=\"execute-button table-extra-button\"\r\n            @click=\"handleItemsTableClick\"\r\n          >\r\n            ...\r\n          </button>\r\n        </template>\r\n      </VarBox>\r\n\r\n      <!-- 测试按钮和显示区域 -->\r\n      <div class=\"test-section\">\r\n        <button class=\"test-button\" @click=\"showTreeValue\">\r\n          显示树的getValue\r\n        </button>\r\n        <div v-if=\"treeValueDisplay\" class=\"tree-value-display\">\r\n          <h3>树的getValue结果：</h3>\r\n          <pre>{{ treeValueDisplay }}</pre>\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n    <!-- Item 详细信息阶段 -->\r\n    <template #[`stage-itemCondition`]>\r\n      <h2>Item 详细信息 (使用 ItemConditionKit)</h2>\r\n      <ItemConditionDetail\r\n        ref=\"itemConditionDetailRef\"\r\n        :kit=\"itemConditionKit\"\r\n        @save=\"handleSave\"\r\n        @cancel=\"handleCancel\"\r\n        @validation-failed=\"handleValidationFailed\"\r\n        @validation-success=\"handleValidationSuccess\"\r\n      >\r\n        <!-- 传递 pricing elements 的额外按钮 -->\r\n        <template #[`itemDetailConditions-pricingElements--extra-buttons`]>\r\n          <button\r\n            class=\"execute-button table-extra-button item-condition-button\"\r\n            @click=\"() => {}\"\r\n          >\r\n            New\r\n          </button>\r\n          <button\r\n            class=\"execute-button table-extra-button item-condition-button\"\r\n            @click=\"() => {}\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </template>\r\n      </ItemConditionDetail>\r\n    </template>\r\n\r\n    <!-- Footer 插槽 - 为teleport提供目标 -->\r\n    <template #[`footer-content-right`]>\r\n      <div class=\"app-content-footer-content-right\">\r\n        <!-- teleport目标容器，ItemConditionDetail的按钮会teleport到这里 -->\r\n      </div>\r\n    </template>\r\n  </AppContent>\r\n</template>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.table-extra-button {\r\n  width: inherit;\r\n  padding: 0 6px;\r\n  min-width: 20px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.table-extra-button:disabled {\r\n  cursor: not-allowed;\r\n}\r\n\r\n.item-condition-button {\r\n  margin-right: 4px;\r\n}\r\n\r\n.save-button {\r\n  padding: 8px 20px;\r\n  margin-right: 10px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.cancel-button {\r\n  padding: 8px 20px;\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n/* 测试区域样式 */\r\n.test-section {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.test-button {\r\n  padding: 8px 16px;\r\n  background-color: var(--theme-color-dark);\r\n  color: var(--theme-color-contrast);\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.test-button:hover {\r\n  background-color: var(--theme-color-execute-button-hover);\r\n}\r\n\r\n.tree-value-display {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.tree-value-display h3 {\r\n  margin: 0 0 10px 0;\r\n  color: var(--theme-color-dark);\r\n  font-size: 14px;\r\n}\r\n\r\n.tree-value-display pre {\r\n  margin: 0;\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n}\r\n\r\n/* 复用样式 */\r\n:deep(.mainData-basicInfo--dict-leaf-section) {\r\n  display: grid;\r\n  grid-template-columns: 50% 35% 15%;\r\n  grid-template-rows: auto auto;\r\n}\r\n\r\n:deep(.mainData-basicInfo-inquiry--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 1;\r\n}\r\n:deep(.mainData-basicInfo-netValue--wrapper) {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n}\r\n:deep(.mainData-basicInfo-netValueUnit--wrapper) {\r\n  grid-column: 3;\r\n  grid-row: 1;\r\n}\r\n:deep(.mainData-basicInfo-soldToParty--wrapper) {\r\n  grid-column: 1;\r\n  grid-row: 2;\r\n}\r\n</style>\r\n","import script from \"./ItemConditionKitTest.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ItemConditionKitTest.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ItemConditionKitTest.vue?vue&type=style&index=0&id=475d810e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-475d810e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createBlock as _createBlock, withCtx as _withCtx, createStaticVNode as _createStaticVNode } from \"vue\"\nimport _imports_0 from '@/assets/icons/create-outbound-deliveries.svg'\nimport _imports_1 from '@/assets/icons/material-documents-overview.svg'\nimport _imports_2 from '@/assets/icons/manage-sales-quotations.svg'\n\n\nconst _hoisted_1 = { class: \"material-document-overview\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"md-page-content\"\n}\nconst _hoisted_3 = { class: \"material-document-search\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"query-results-list\",\n  style: {\"width\":\"100%\"}\n}\nconst _hoisted_5 = { class: \"material-document-rows-container\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"row-item material-document-id\" }\nconst _hoisted_8 = { class: \"row-item plant\" }\nconst _hoisted_9 = { class: \"row-item posting-date\" }\nconst _hoisted_10 = { class: \"row-item document-date\" }\nconst _hoisted_11 = {\n  key: 1,\n  class: \"no-results\"\n}\nconst _hoisted_12 = {\n  key: 2,\n  class: \"initial-output-message\"\n}\nconst _hoisted_13 = { class: \"page-content\" }\nconst _hoisted_14 = { class: \"process-flow-container\" }\nconst _hoisted_15 = { class: \"process-flow-diagram\" }\nconst _hoisted_16 = { class: \"flow-step\" }\nconst _hoisted_17 = { class: \"step-id\" }\nconst _hoisted_18 = [\"checked\"]\nconst _hoisted_19 = {\n  key: 0,\n  class: \"flow-item-details\"\n}\nconst _hoisted_20 = { class: \"flow-step\" }\nconst _hoisted_21 = { class: \"step-id\" }\nconst _hoisted_22 = [\"checked\"]\nconst _hoisted_23 = {\n  key: 0,\n  class: \"flow-item-details\"\n}\nconst _hoisted_24 = { class: \"flow-step\" }\nconst _hoisted_25 = { class: \"step-id\" }\nconst _hoisted_26 = [\"checked\"]\n\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport { ref, Ref, computed, nextTick, onMounted } from 'vue';\r\nimport { createTreeFromConfig, cns } from '@/utils/VarTree';\r\nimport { materialSearch, quotationIdSearch } from '@/utils/searchMethods';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue';\r\ninterface MaterialDocumentResult {\r\n  materialDocument: string;\r\n  plant: string;\r\n  materialDocumentYear: string;\r\n  material: string;\r\n  postingDate: string;\r\n  documentDate: string;\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Overview',\n  setup(__props) {\n\r\nlet API_BASE_URL = window.API_BASE_URL || '';\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || '';\r\n});\r\n\r\nconst appContentRef = ref(null) as any;\r\nconst currentAppStage = computed(() => appContentRef.value?.currentStage || 0);\r\nconst showAppContent = ref(false);\r\n\r\nconst materialQueryStructure = cns(\r\n  \"dict\", \"dict\", \"materialQuery\", null, false, { hideLabel: true },\r\n  [\r\n    cns(\"string\", \"leaf\", \"materialDocument\", '', false, {searchMethods: materialSearch}, [], \"Material Document:\"),\r\n    cns(\"string\", \"leaf\", \"plant\", '', false, {searchMethods: quotationIdSearch}, [], \"Plant:\"),\r\n    cns(\"date\", \"leaf\", \"materialDocumentYear\", '', false, {}, [], \"Material Document Year:\"),\r\n    cns(\"string\", \"leaf\", \"material\", '', false, {searchMethods: materialSearch}, [], \"Material:\"),\r\n    cns(\"date\", \"leaf\", \"postingDate\", '', false, {}, [], \"Posting Date:\"),\r\n    cns(\"date\", \"leaf\", \"documentDate\", '', false, {}, [], \"Document Date:\"),\r\n  ]\r\n);\r\nconst materialQueryTree = createTreeFromConfig(materialQueryStructure);\r\n\r\nconst materialDocumentDetailStrcutrue = cns(\r\n\"dict\", \"dict\", \"materialDocumentDetail\", null, false, {hideLabel: true},\r\n[\r\ncns(\"string\", \"leaf\", \"materialDocument\", '', true, {}, [], \"Material Document:\"),\r\ncns(\"string\", \"leaf\", \"plant\", '', true, {}, [], \"Plant:\"),\r\ncns(\"date\", \"leaf\", \"postingDate\", '', true, {}, [], \"Posting Date:\"),\r\ncns(\"date\", \"leaf\", \"documentDate\", '', true, {}, [], \"Document Date:\"),\r\ncns(\"date\", \"leaf\", \"materialDocumentYear\", '', true, {}, [], \"Material Document Year:\"),\r\n\r\ncns('dynamiclist','list','items',null,false,{\r\nhideList: ['netValue', 'netValueUnit', 'pricingDate', 'orderProbability','reqDelivDate','taxValue','taxValueUnit','pricingElements'],\r\nchildTemplate:cns('dict','dict','item',null,false,{},[\r\ncns('string','leaf','item','',true,{},[],\"Item\"),\r\ncns('string','leaf','material','',true,{},[],\"Material\"),\r\ncns('string','leaf','orderQuantity','',true,{},[],\"Order Quantity\"),\r\ncns('string','leaf','orderQuantityUnit','',true,{hideLabel:true},[],\"SU\"),\r\n]),\r\n},[],\"Items\"),\r\n\r\ncns('dynamiclist', 'list', 'processFlow', null, true, {\r\nhideSelf: true,\r\nchildTemplate:\r\ncns(\"dict\", \"dict\", \"flowItem\", null, false, {}, [\r\ncns(\"string\", \"leaf\", \"dlvId\", '', true, {}, [], \"Delivery ID:\"),\r\ncns(\"string\", \"leaf\", \"materialDocument\", '', true, {}, [], \"Material Document:\"), // Reverted to original name\r\ncns(\"string\", \"leaf\", \"billId\", '', true, {}, [], \"Billing Document:\"),\r\n]),\r\n},\r\n[],\"\"),\r\n])\r\n\r\nconst state: Ref<'display'> = ref('display');\r\nconst materialDocumentVarBoxKey = ref(0);\r\nconst onDisplayState = computed(() => state.value === 'display');\r\n\r\nfunction appToState(newState: 'display') {\r\n  state.value = newState;\r\n  if(materialDocumentDataTree.root)\r\n  {\r\n    materialDocumentDataTree.root.readonly = true;\r\n  }\r\n}\r\n\r\nconst materialDocumentDataTree = createTreeFromConfig(materialDocumentDetailStrcutrue);\r\n\r\n\r\nconst materialDocumentResult: Ref<MaterialDocumentResult[]> = ref([]);\r\nconst searchPerformed = ref(false);\r\n\r\nconst performMaterialDocumentSearch = async () => {\r\n  const fullUrl = `${API_BASE_URL}/api/material/search`;\r\n  const queryData = materialQueryTree.root?.getValue();\r\n\r\n  searchPerformed.value = true;\r\n  materialDocumentResult.value = [];\r\n\r\n  try {\r\n    const response = await fetch(fullUrl, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(queryData),\r\n    });\r\n    const result = await response.json();\r\n\r\n    if (result.success && Array.isArray(result.data)) {\r\n      materialDocumentResult.value = result.data;\r\n    } else {\r\n      materialDocumentResult.value = [];\r\n    }\r\n  } catch (error: any) {\r\n    materialDocumentResult.value = [];\r\n  }\r\n};\r\n\r\nconst materialDocumentFormPrevButtonLabel = computed(() => {\r\n  return '/hide';\r\n});\r\n\r\nconst materialDocumentFormNextButtonLabel = computed(() => {\r\n  return 'Return';\r\n});\r\n\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 0) {\r\n    showAppContent.value = false;\r\n    appContentRef.value.goToStage(0);\r\n    appContentRef.value.footerMessage = '';\r\n    return false;\r\n  }\r\n  appContentRef.value.footerMessage = '';\r\n  return true;\r\n}\r\n\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  appContentRef.value.footerMessage = '';\r\n  showAppContent.value = false;\r\n  return false;\r\n}\r\n\r\nconst viewMaterialDocumentDetail = async (materialDocumentId: string) => {\r\n  showAppContent.value = true;\r\n  appToState('display');\r\n\r\n  nextTick(async () => {\r\n    if (appContentRef.value) {\r\n      appContentRef.value.goToStage(0);\r\n\r\n      appContentRef.value.footerMessage = 'Fetching material document details...';\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/material/get/${materialDocumentId}`);\r\n        const result = await response.json();\r\n        if (result.success && result.data) {\r\n          materialDocumentDataTree.root?.forceSetValue(result.data);\r\n          materialDocumentVarBoxKey.value++;\r\n          console.log(\"API original result.data:\", JSON.stringify(result.data, null, 2));\r\n          appContentRef.value.footerMessage = 'Material document details loaded.';\r\n        } else {\r\n          appContentRef.value.footerMessage = result.message || 'Failed to load material document details.';\r\n          showAppContent.value = false;\r\n        }\r\n      } catch (error: any) {\r\n        appContentRef.value.footerMessage = `Error fetching details: ${error.message}`;\r\n        showAppContent.value = false;\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst getProcessFlowValue = (key: string) => {\r\n  const processFlow = materialDocumentDataTree.root?.children.find(child => child.name === 'processFlow');\r\n  if (processFlow && processFlow.children && processFlow.children.length > 0) {\r\n    // Assuming the first item in processFlow is the relevant one for these IDs\r\n    const flowItem = processFlow.children[0];\r\n    const valueNode = flowItem.children.find((child: any) => child.name === key);\r\n    return valueNode ? valueNode.getValue() : '';\r\n  }\r\n  return '';\r\n};\r\n\r\n// This function needs to determine the item count for each step.\r\n// For \"Material Document\", it likely refers to the 'items' list.\r\n// For \"Delivery\" and \"Accounting Document\", you'd need to define how to get their item counts.\r\n// For now, I'll provide a placeholder or a common approach.\r\nconst getProcessFlowItemCount = (stepName: string) => {\r\n  if (stepName === 'materialDocument') {\r\n    const itemsNode = materialDocumentDataTree.root?.children.find(child => child.name === 'items');\r\n    return itemsNode && Array.isArray(itemsNode.children) ? itemsNode.children.length : 0;\r\n  }\r\n  // You would need to add logic here to fetch item counts for Delivery and Accounting Document\r\n  // This might involve looking into sub-structures of the processFlow or making additional API calls if necessary.\r\n  // For demonstration, returning a fixed value or 0.\r\n  // Example for delivery, if it had an item count in its data:\r\n  // if (stepName === 'dlvId') {\r\n  //   const dlvIdNode = materialDocumentDataTree.root?.children.find(child => child.name === 'processFlow')?.children[0]?.children.find((child:any) => child.name === 'dlvId');\r\n  //   return dlvIdNode?.itemCount || 0; // Assuming itemCount exists\r\n  // }\r\n  return ''; // Or 0 if you prefer a number\r\n};\r\n\r\nconst getMaterialDocumentYear = () => {\r\n  const materialDocumentYearNode = materialDocumentDataTree.root?.children.find(child => child.name === 'materialDocumentYear');\r\n  return materialDocumentYearNode ? materialDocumentYearNode.getValue() : '';\r\n};\r\n\r\nconst getArrowStatusClass = (prevIdKey: string, nextIdKey: string) => {\r\n  const prevId = getProcessFlowValue(prevIdKey);\r\n  const nextId = getProcessFlowValue(nextIdKey);\r\n  const dlvIdExists = !!getProcessFlowValue('dlvId'); // Check if Delivery ID exists\r\n\r\n  if (prevId && nextId) {\r\n    if (dlvIdExists) {\r\n      return 'arrow-status-green'; // Green if both adjacent IDs exist and Delivery ID exists\r\n    } else {\r\n      return 'arrow-status-red'; // Red if both adjacent IDs exist but Delivery ID does NOT exist\r\n    }\r\n  }\r\n  return 'arrow-status-grey'; // Grey by default or if conditions not met\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (!showAppContent.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createVNode(VarBox, {\n              tree: _unref(materialQueryTree),\n              class: \"material-document-query-varbox\"\n            }, null, 8, [\"tree\"]),\n            _createElementVNode(\"div\", {\n              class: \"go-button-container\",\n              onClick: performMaterialDocumentSearch\n            }, _cache[0] || (_cache[0] = [\n              _createElementVNode(\"button\", { class: \"search-enter-button go-button\" }, \"Go\", -1)\n            ]))\n          ]),\n          (searchPerformed.value && materialDocumentResult.value && materialDocumentResult.value.length > 0)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _cache[2] || (_cache[2] = _createStaticVNode(\"<div class=\\\"material-document-row-header\\\" data-v-019c22e4><div class=\\\"header-item material-document-id\\\" data-v-019c22e4>Material Document</div><div class=\\\"header-item plant\\\" data-v-019c22e4>Plant</div><div class=\\\"header-item posting-date\\\" data-v-019c22e4>Posting Date</div><div class=\\\"header-item document-date\\\" data-v-019c22e4>Document Date</div><div class=\\\"header-item\\\" data-v-019c22e4></div></div>\", 1)),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(materialDocumentResult.value, (doc) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: doc.materialDocument,\n                      class: \"material-document-row\",\n                      onClick: ($event: any) => (viewMaterialDocumentDetail(doc.materialDocument))\n                    }, [\n                      _createElementVNode(\"span\", _hoisted_7, _toDisplayString(doc.materialDocument), 1),\n                      _createElementVNode(\"span\", _hoisted_8, _toDisplayString(doc.plant), 1),\n                      _createElementVNode(\"span\", _hoisted_9, _toDisplayString(doc.postingDate), 1),\n                      _createElementVNode(\"span\", _hoisted_10, _toDisplayString(doc.documentDate), 1),\n                      _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"row-item arrow-icon\" }, \"▶\", -1))\n                    ], 8, _hoisted_6))\n                  }), 128))\n                ])\n              ]))\n            : (searchPerformed.value && materialDocumentResult.value && materialDocumentResult.value.length === 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[3] || (_cache[3] = [\n                  _createElementVNode(\"p\", null, \"No material documents found matching your criteria.\", -1)\n                ])))\n              : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _cache[4] || (_cache[4] = [\n                  _createElementVNode(\"p\", null, \"Enter query criteria and click \\\"Go\\\" to see results.\", -1)\n                ])))\n        ]))\n      : _createCommentVNode(\"\", true),\n    (showAppContent.value)\n      ? (_openBlock(), _createBlock(AppContent, {\n          key: 1,\n          stages: ['materialDocumentForm'],\n          \"before-next\": handleExecute,\n          \"before-prev\": handleCancel,\n          \"footer-config\": [\r\n      { prevText: materialDocumentFormPrevButtonLabel.value, nextText: materialDocumentFormNextButtonLabel.value }\r\n    ],\n          ref_key: \"appContentRef\",\n          ref: appContentRef\n        }, {\n          \"stage-materialDocumentForm\": _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_13, [\n              _createElementVNode(\"div\", _hoisted_14, [\n                _cache[14] || (_cache[14] = _createElementVNode(\"div\", { class: \"process-flow-header\" }, \"Process Flow\", -1)),\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _createElementVNode(\"div\", _hoisted_16, [\n                    _cache[6] || (_cache[6] = _createElementVNode(\"div\", { class: \"step-icon\" }, [\n                      _createElementVNode(\"img\", {\n                        src: _imports_0,\n                        alt: \"Delivery\",\n                        class: \"icon-image\"\n                      })\n                    ], -1)),\n                    _cache[7] || (_cache[7] = _createElementVNode(\"span\", { class: \"step-label\" }, \"Delivery\", -1)),\n                    _createElementVNode(\"span\", _hoisted_17, _toDisplayString(getProcessFlowValue('dlvId')), 1),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass(['step-status', { 'ok-status-active': getProcessFlowValue('dlvId') }])\n                    }, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        checked: !!getProcessFlowValue('dlvId'),\n                        disabled: \"\",\n                        class: \"status-checkbox\"\n                      }, null, 8, _hoisted_18),\n                      _cache[5] || (_cache[5] = _createElementVNode(\"span\", { class: \"status-text\" }, \"OK\", -1))\n                    ], 2)\n                  ]),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['flow-arrow', getArrowStatusClass('dlvId', 'materialDocument')])\n                  }, \"▶\", 2),\n                  (getProcessFlowItemCount('dlvId'))\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, _toDisplayString(getProcessFlowItemCount('dlvId')) + \" Item(s) \", 1))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"div\", _hoisted_20, [\n                    _cache[9] || (_cache[9] = _createElementVNode(\"div\", { class: \"step-icon\" }, [\n                      _createElementVNode(\"img\", {\n                        src: _imports_1,\n                        alt: \"Material Document\",\n                        class: \"icon-image\"\n                      })\n                    ], -1)),\n                    _cache[10] || (_cache[10] = _createElementVNode(\"span\", { class: \"step-label\" }, \"Material Document\", -1)),\n                    _createElementVNode(\"span\", _hoisted_21, _toDisplayString(getProcessFlowValue('materialDocument')), 1),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass(['step-status', { 'ok-status-active': getProcessFlowValue('materialDocument') }])\n                    }, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        checked: !!getProcessFlowValue('materialDocument'),\n                        disabled: \"\",\n                        class: \"status-checkbox\"\n                      }, null, 8, _hoisted_22),\n                      _cache[8] || (_cache[8] = _createElementVNode(\"span\", { class: \"status-text\" }, \"OK\", -1))\n                    ], 2),\n                    (getProcessFlowItemCount('materialDocument'))\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, _toDisplayString(getProcessFlowItemCount('materialDocument')) + \" Item(s) \", 1))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['flow-arrow', getArrowStatusClass('materialDocument', 'billId')])\n                  }, \"▶\", 2),\n                  _createElementVNode(\"div\", _hoisted_24, [\n                    _cache[12] || (_cache[12] = _createElementVNode(\"div\", { class: \"step-icon\" }, [\n                      _createElementVNode(\"img\", {\n                        src: _imports_2,\n                        alt: \"Accounting Document\",\n                        class: \"icon-image\"\n                      })\n                    ], -1)),\n                    _cache[13] || (_cache[13] = _createElementVNode(\"span\", { class: \"step-label\" }, \"Accounting Document\", -1)),\n                    _createElementVNode(\"span\", _hoisted_25, _toDisplayString(getProcessFlowValue('billId')), 1),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass(['step-status', { 'ok-status-active': getProcessFlowValue('billId') }])\n                    }, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        checked: !!getProcessFlowValue('billId'),\n                        disabled: \"\",\n                        class: \"status-checkbox\"\n                      }, null, 8, _hoisted_26),\n                      _cache[11] || (_cache[11] = _createElementVNode(\"span\", { class: \"status-text\" }, \"OK\", -1))\n                    ], 2)\n                  ])\n                ])\n              ]),\n              (_openBlock(), _createBlock(VarBox, {\n                tree: _unref(materialDocumentDataTree),\n                class: _normalizeClass({\r\n           'material-document-detail-varbox': true\r\n         }),\n                key: materialDocumentVarBoxKey.value\n              }, null, 8, [\"tree\"]))\n            ])\n          ]),\n          _: 1\n        }, 8, [\"footer-config\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"material-document-overview\">\r\n    <div class=\"md-page-content\" v-if=\"!showAppContent\">\r\n      <div class=\"material-document-search\">\r\n        <VarBox\r\n          :tree=\"materialQueryTree\"\r\n          class=\"material-document-query-varbox\"\r\n        />\r\n        <div class=\"go-button-container\" @click=\"performMaterialDocumentSearch\">\r\n          <button class=\"search-enter-button go-button\">Go</button>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"searchPerformed && materialDocumentResult && materialDocumentResult.length > 0\" class=\"query-results-list\" style=\"width: 100%;\">\r\n        <div class=\"material-document-rows-container\">\r\n          <div class=\"material-document-row-header\">\r\n              <div class=\"header-item material-document-id\">Material Document</div>\r\n              <div class=\"header-item plant\">Plant</div>\r\n              <div class=\"header-item posting-date\">Posting Date</div>\r\n              <div class=\"header-item document-date\">Document Date</div>\r\n              <div class=\"header-item\"></div>\r\n          </div>\r\n          <div v-for=\"doc in materialDocumentResult\" :key=\"doc.materialDocument\" class=\"material-document-row\" @click=\"viewMaterialDocumentDetail(doc.materialDocument)\">\r\n            <span class=\"row-item material-document-id\">{{ doc.materialDocument }}</span>\r\n            <span class=\"row-item plant\">{{ doc.plant }}</span>\r\n            <span class=\"row-item posting-date\">{{ doc.postingDate }}</span>\r\n            <span class=\"row-item document-date\">{{ doc.documentDate }}</span>\r\n            <span class=\"row-item arrow-icon\">▶</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"searchPerformed && materialDocumentResult && materialDocumentResult.length === 0\" class=\"no-results\">\r\n        <p>No material documents found matching your criteria.</p>\r\n      </div>\r\n      <div v-else class=\"initial-output-message\">\r\n        <p>Enter query criteria and click \"Go\" to see results.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <AppContent\r\n    v-if=\"showAppContent\"\r\n    :stages=\"['materialDocumentForm']\"\r\n    :before-next=\"handleExecute\"\r\n    :before-prev=\"handleCancel\"\r\n    :footer-config=\"[\r\n      { prevText: materialDocumentFormPrevButtonLabel, nextText: materialDocumentFormNextButtonLabel }\r\n    ]\"\r\n    ref=\"appContentRef\"\r\n  >\r\n    <template #stage-materialDocumentForm>\r\n      <div class=\"page-content\">\r\n        <div class=\"process-flow-container\">\r\n          <div class=\"process-flow-header\">Process Flow</div>\r\n          <div class=\"process-flow-diagram\">\r\n            <div class=\"flow-step\">\r\n              <div class=\"step-icon\">\r\n                <img src=\"@/assets/icons/create-outbound-deliveries.svg\" alt=\"Delivery\" class=\"icon-image\" />\r\n              </div>\r\n              <span class=\"step-label\">Delivery</span>\r\n              <span class=\"step-id\">{{ getProcessFlowValue('dlvId') }}</span>\r\n              <div :class=\"['step-status', { 'ok-status-active': getProcessFlowValue('dlvId') }]\">\r\n                <input type=\"checkbox\" :checked=\"!!getProcessFlowValue('dlvId')\" disabled class=\"status-checkbox\" />\r\n                <span class=\"status-text\">OK</span>\r\n              </div>\r\n            </div>\r\n\r\n            <span :class=\"['flow-arrow', getArrowStatusClass('dlvId', 'materialDocument')]\">▶</span>\r\n\r\n            <div class=\"flow-item-details\" v-if=\"getProcessFlowItemCount('dlvId')\">\r\n              {{ getProcessFlowItemCount('dlvId') }} Item(s)\r\n            </div>\r\n\r\n            <div class=\"flow-step\">\r\n              <div class=\"step-icon\">\r\n                <img src=\"@/assets/icons/material-documents-overview.svg\" alt=\"Material Document\" class=\"icon-image\" />\r\n              </div>\r\n              <span class=\"step-label\">Material Document</span>\r\n              <span class=\"step-id\">{{ getProcessFlowValue('materialDocument') }}</span>\r\n              <div :class=\"['step-status', { 'ok-status-active': getProcessFlowValue('materialDocument') }]\">\r\n                <input type=\"checkbox\" :checked=\"!!getProcessFlowValue('materialDocument')\" disabled class=\"status-checkbox\" />\r\n                <span class=\"status-text\">OK</span>\r\n              </div>\r\n              <div class=\"flow-item-details\" v-if=\"getProcessFlowItemCount('materialDocument')\">\r\n                {{ getProcessFlowItemCount('materialDocument') }} Item(s)\r\n              </div>\r\n            </div>\r\n\r\n            <span :class=\"['flow-arrow', getArrowStatusClass('materialDocument', 'billId')]\">▶</span>\r\n\r\n            <div class=\"flow-step\">\r\n              <div class=\"step-icon\">\r\n                <img src=\"@/assets/icons/manage-sales-quotations.svg\" alt=\"Accounting Document\" class=\"icon-image\" />\r\n              </div>\r\n              <span class=\"step-label\">Accounting Document</span>\r\n              <span class=\"step-id\">{{ getProcessFlowValue('billId') }}</span>\r\n              <div :class=\"['step-status', { 'ok-status-active': getProcessFlowValue('billId') }]\">\r\n                <input type=\"checkbox\" :checked=\"!!getProcessFlowValue('billId')\" disabled class=\"status-checkbox\" />\r\n                <span class=\"status-text\">OK</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <VarBox\r\n         :tree=\"materialDocumentDataTree\"\r\n         :class=\"{\r\n           'material-document-detail-varbox': true\r\n         }\"\r\n         :key=\"materialDocumentVarBoxKey\"\r\n         >\r\n         </VarBox>\r\n      </div>\r\n    </template>\r\n    </AppContent>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport VarBox from '@/components/varbox/VarBox.vue';\r\nimport { ref, Ref, computed, nextTick, onMounted } from 'vue';\r\nimport { createTreeFromConfig, cns } from '@/utils/VarTree';\r\nimport { materialSearch, quotationIdSearch } from '@/utils/searchMethods';\r\nimport AppContent from '@/components/applicationContent/AppContent.vue';\r\nlet API_BASE_URL = window.API_BASE_URL || '';\r\nonMounted(() => {\r\n  API_BASE_URL = window.API_BASE_URL || '';\r\n});\r\n\r\nconst appContentRef = ref(null) as any;\r\nconst currentAppStage = computed(() => appContentRef.value?.currentStage || 0);\r\nconst showAppContent = ref(false);\r\n\r\nconst materialQueryStructure = cns(\r\n  \"dict\", \"dict\", \"materialQuery\", null, false, { hideLabel: true },\r\n  [\r\n    cns(\"string\", \"leaf\", \"materialDocument\", '', false, {searchMethods: materialSearch}, [], \"Material Document:\"),\r\n    cns(\"string\", \"leaf\", \"plant\", '', false, {searchMethods: quotationIdSearch}, [], \"Plant:\"),\r\n    cns(\"date\", \"leaf\", \"materialDocumentYear\", '', false, {}, [], \"Material Document Year:\"),\r\n    cns(\"string\", \"leaf\", \"material\", '', false, {searchMethods: materialSearch}, [], \"Material:\"),\r\n    cns(\"date\", \"leaf\", \"postingDate\", '', false, {}, [], \"Posting Date:\"),\r\n    cns(\"date\", \"leaf\", \"documentDate\", '', false, {}, [], \"Document Date:\"),\r\n  ]\r\n);\r\nconst materialQueryTree = createTreeFromConfig(materialQueryStructure);\r\n\r\nconst materialDocumentDetailStrcutrue = cns(\r\n\"dict\", \"dict\", \"materialDocumentDetail\", null, false, {hideLabel: true},\r\n[\r\ncns(\"string\", \"leaf\", \"materialDocument\", '', true, {}, [], \"Material Document:\"),\r\ncns(\"string\", \"leaf\", \"plant\", '', true, {}, [], \"Plant:\"),\r\ncns(\"date\", \"leaf\", \"postingDate\", '', true, {}, [], \"Posting Date:\"),\r\ncns(\"date\", \"leaf\", \"documentDate\", '', true, {}, [], \"Document Date:\"),\r\ncns(\"date\", \"leaf\", \"materialDocumentYear\", '', true, {}, [], \"Material Document Year:\"),\r\n\r\ncns('dynamiclist','list','items',null,false,{\r\nhideList: ['netValue', 'netValueUnit', 'pricingDate', 'orderProbability','reqDelivDate','taxValue','taxValueUnit','pricingElements'],\r\nchildTemplate:cns('dict','dict','item',null,false,{},[\r\ncns('string','leaf','item','',true,{},[],\"Item\"),\r\ncns('string','leaf','material','',true,{},[],\"Material\"),\r\ncns('string','leaf','orderQuantity','',true,{},[],\"Order Quantity\"),\r\ncns('string','leaf','orderQuantityUnit','',true,{hideLabel:true},[],\"SU\"),\r\n]),\r\n},[],\"Items\"),\r\n\r\ncns('dynamiclist', 'list', 'processFlow', null, true, {\r\nhideSelf: true,\r\nchildTemplate:\r\ncns(\"dict\", \"dict\", \"flowItem\", null, false, {}, [\r\ncns(\"string\", \"leaf\", \"dlvId\", '', true, {}, [], \"Delivery ID:\"),\r\ncns(\"string\", \"leaf\", \"materialDocument\", '', true, {}, [], \"Material Document:\"), // Reverted to original name\r\ncns(\"string\", \"leaf\", \"billId\", '', true, {}, [], \"Billing Document:\"),\r\n]),\r\n},\r\n[],\"\"),\r\n])\r\n\r\nconst state: Ref<'display'> = ref('display');\r\nconst materialDocumentVarBoxKey = ref(0);\r\nconst onDisplayState = computed(() => state.value === 'display');\r\n\r\nfunction appToState(newState: 'display') {\r\n  state.value = newState;\r\n  if(materialDocumentDataTree.root)\r\n  {\r\n    materialDocumentDataTree.root.readonly = true;\r\n  }\r\n}\r\n\r\ninterface MaterialDocumentResult {\r\n  materialDocument: string;\r\n  plant: string;\r\n  materialDocumentYear: string;\r\n  material: string;\r\n  postingDate: string;\r\n  documentDate: string;\r\n}\r\n\r\nconst materialDocumentDataTree = createTreeFromConfig(materialDocumentDetailStrcutrue);\r\n\r\n\r\nconst materialDocumentResult: Ref<MaterialDocumentResult[]> = ref([]);\r\nconst searchPerformed = ref(false);\r\n\r\nconst performMaterialDocumentSearch = async () => {\r\n  const fullUrl = `${API_BASE_URL}/api/material/search`;\r\n  const queryData = materialQueryTree.root?.getValue();\r\n\r\n  searchPerformed.value = true;\r\n  materialDocumentResult.value = [];\r\n\r\n  try {\r\n    const response = await fetch(fullUrl, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(queryData),\r\n    });\r\n    const result = await response.json();\r\n\r\n    if (result.success && Array.isArray(result.data)) {\r\n      materialDocumentResult.value = result.data;\r\n    } else {\r\n      materialDocumentResult.value = [];\r\n    }\r\n  } catch (error: any) {\r\n    materialDocumentResult.value = [];\r\n  }\r\n};\r\n\r\nconst materialDocumentFormPrevButtonLabel = computed(() => {\r\n  return '/hide';\r\n});\r\n\r\nconst materialDocumentFormNextButtonLabel = computed(() => {\r\n  return 'Return';\r\n});\r\n\r\nasync function handleCancel(currentStage: number, targetStage: number) {\r\n  if (currentStage === 0) {\r\n    showAppContent.value = false;\r\n    appContentRef.value.goToStage(0);\r\n    appContentRef.value.footerMessage = '';\r\n    return false;\r\n  }\r\n  appContentRef.value.footerMessage = '';\r\n  return true;\r\n}\r\n\r\nasync function handleExecute(currentStage: number, targetStage: number) {\r\n  appContentRef.value.footerMessage = '';\r\n  showAppContent.value = false;\r\n  return false;\r\n}\r\n\r\nconst viewMaterialDocumentDetail = async (materialDocumentId: string) => {\r\n  showAppContent.value = true;\r\n  appToState('display');\r\n\r\n  nextTick(async () => {\r\n    if (appContentRef.value) {\r\n      appContentRef.value.goToStage(0);\r\n\r\n      appContentRef.value.footerMessage = 'Fetching material document details...';\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/material/get/${materialDocumentId}`);\r\n        const result = await response.json();\r\n        if (result.success && result.data) {\r\n          materialDocumentDataTree.root?.forceSetValue(result.data);\r\n          materialDocumentVarBoxKey.value++;\r\n          console.log(\"API original result.data:\", JSON.stringify(result.data, null, 2));\r\n          appContentRef.value.footerMessage = 'Material document details loaded.';\r\n        } else {\r\n          appContentRef.value.footerMessage = result.message || 'Failed to load material document details.';\r\n          showAppContent.value = false;\r\n        }\r\n      } catch (error: any) {\r\n        appContentRef.value.footerMessage = `Error fetching details: ${error.message}`;\r\n        showAppContent.value = false;\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst getProcessFlowValue = (key: string) => {\r\n  const processFlow = materialDocumentDataTree.root?.children.find(child => child.name === 'processFlow');\r\n  if (processFlow && processFlow.children && processFlow.children.length > 0) {\r\n    // Assuming the first item in processFlow is the relevant one for these IDs\r\n    const flowItem = processFlow.children[0];\r\n    const valueNode = flowItem.children.find((child: any) => child.name === key);\r\n    return valueNode ? valueNode.getValue() : '';\r\n  }\r\n  return '';\r\n};\r\n\r\n// This function needs to determine the item count for each step.\r\n// For \"Material Document\", it likely refers to the 'items' list.\r\n// For \"Delivery\" and \"Accounting Document\", you'd need to define how to get their item counts.\r\n// For now, I'll provide a placeholder or a common approach.\r\nconst getProcessFlowItemCount = (stepName: string) => {\r\n  if (stepName === 'materialDocument') {\r\n    const itemsNode = materialDocumentDataTree.root?.children.find(child => child.name === 'items');\r\n    return itemsNode && Array.isArray(itemsNode.children) ? itemsNode.children.length : 0;\r\n  }\r\n  // You would need to add logic here to fetch item counts for Delivery and Accounting Document\r\n  // This might involve looking into sub-structures of the processFlow or making additional API calls if necessary.\r\n  // For demonstration, returning a fixed value or 0.\r\n  // Example for delivery, if it had an item count in its data:\r\n  // if (stepName === 'dlvId') {\r\n  //   const dlvIdNode = materialDocumentDataTree.root?.children.find(child => child.name === 'processFlow')?.children[0]?.children.find((child:any) => child.name === 'dlvId');\r\n  //   return dlvIdNode?.itemCount || 0; // Assuming itemCount exists\r\n  // }\r\n  return ''; // Or 0 if you prefer a number\r\n};\r\n\r\nconst getMaterialDocumentYear = () => {\r\n  const materialDocumentYearNode = materialDocumentDataTree.root?.children.find(child => child.name === 'materialDocumentYear');\r\n  return materialDocumentYearNode ? materialDocumentYearNode.getValue() : '';\r\n};\r\n\r\nconst getArrowStatusClass = (prevIdKey: string, nextIdKey: string) => {\r\n  const prevId = getProcessFlowValue(prevIdKey);\r\n  const nextId = getProcessFlowValue(nextIdKey);\r\n  const dlvIdExists = !!getProcessFlowValue('dlvId'); // Check if Delivery ID exists\r\n\r\n  if (prevId && nextId) {\r\n    if (dlvIdExists) {\r\n      return 'arrow-status-green'; // Green if both adjacent IDs exist and Delivery ID exists\r\n    } else {\r\n      return 'arrow-status-red'; // Red if both adjacent IDs exist but Delivery ID does NOT exist\r\n    }\r\n  }\r\n  return 'arrow-status-grey'; // Grey by default or if conditions not met\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  .material-document-overview {\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n    background-color: var(--theme-color-dark);\r\n    width: 100%;\r\n  }\r\n  .materialQueryVarbox{\r\n    flex-grow: 1;\r\n    padding: 12px 15px;\r\n    box-sizing: border-box;\r\n  }\r\n  :deep(.materialQuery-plant--wrapper){\r\n    grid-row: 1;\r\n    grid-column: 2;\r\n    max-width: 300px;\r\n  }\r\n  :deep(.materialQuery-materialDocument--wrapper){\r\n    grid-row: 1;\r\n    grid-column: 1;\r\n    max-width: 350px;\r\n  }\r\n  :deep(.materialQuery-materialDocumentYear--wrapper){\r\n    grid-row: 1;\r\n    grid-column: 3;\r\n  }\r\n  :deep(.materialQuery-material--wrapper){\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n    max-width: 300px;\r\n  }\r\n  :deep(.materialQuery-postingDate--wrapper){\r\n    grid-row: 2;\r\n    grid-column: 2;\r\n  }\r\n  :deep(.materialQuery-documentDate--wrapper){\r\n    grid-row: 2;\r\n    grid-column: 3;\r\n  }\r\n\r\n  /* Added styles based on ManageSalesOrders.vue */\r\n  .md-page-content {\r\n    flex-grow: 1;\r\n    background-color: var(--theme-color-page);\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-height: 90%;\r\n    padding: 20px;\r\n    margin: 20px;\r\n  }\r\n\r\n  .material-document-search {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: transparent;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    padding: 30px;\r\n  }\r\n\r\n  .material-document-query-varbox :deep(.var-input--main input) {\r\n    flex-grow: 1;\r\n    padding: 12px 15px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .go-button-container {\r\n    width: 80px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-self:flex-end;\r\n    background-color: var(--theme-color-dark);\r\n    margin-top: 10px;\r\n    transition: background-color 0.3s ease;\r\n    color: var(--theme-color-text);\r\n    font-weight: bold;\r\n    justify-content: center;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .go-button-container:hover {\r\n      background-color: var(--theme-color-execute-button-hover);\r\n  }\r\n\r\n  .go-button {\r\n    font-size: 1.0em;\r\n    text-align: center;\r\n  }\r\n\r\n  .query-results-list {\r\n    width: 100%;\r\n    font-size: 1em;\r\n    color: var(--color-text-primary);\r\n  }\r\n\r\n  .material-document-rows-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .material-document-row-header,\r\n  .material-document-row {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid var(--theme-color-lighter);\r\n    padding: 8px 0; /* Add padding for better spacing */\r\n  }\r\n\r\n  .material-document-row-header {\r\n    background-color: var(--theme-color-table-header-bg);\r\n    font-weight: bold;\r\n    color: var(--theme-color-table-header-text);\r\n  }\r\n\r\n  .material-document-row {\r\n    background-color: transparent;\r\n    transition: background-color 0.2s ease-in-out;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .material-document-row:hover {\r\n    background-color: var(--theme-color-lighter);\r\n  }\r\n\r\n  .material-document-row:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  .header-item, .row-item {\r\n    align-self: center;\r\n    padding: 0 10px; /* Add horizontal padding for text */\r\n    box-sizing: border-box; /* Include padding in width calculation */\r\n  }\r\n\r\n  .material-document-id { flex-basis: 25%; text-align: center;}\r\n  .plant { flex-basis: 20%; text-align: center;}\r\n  .posting-date { flex-basis: 20%; text-align: center;}\r\n  .document-date { flex-basis: 20%; text-align: center;}\r\n  .arrow-icon { flex: 0 0 15%; text-align: right; padding-right: 20px;}\r\n\r\n\r\n  .no-results, .initial-output-message {\r\n    font-size: 1em;\r\n    color: #666;\r\n    font-weight: normal;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .footer-cancel-button {\r\n    background-color: var(--btn-default-bg);\r\n    color: var(--btn-default-text);\r\n    font-weight: bold;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  .footer-cancel-button:hover {\r\n    background-color: var(--btn-hover-bg);\r\n    color: var(--btn-hover-text);\r\n  }\r\n\r\n  /* New styles for Process Flow */\r\n  .process-flow-container {\r\n    background-color: var(--theme-color-page); /* Adjust as needed */\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .process-flow-header {\r\n    font-size: 1.2em;\r\n    font-weight: bold;\r\n    color: var(--theme-color-dark);\r\n    margin-bottom: 20px;\r\n    align-self: flex-start; /* Aligns \"Process Flow\" to the left */\r\n  }\r\n\r\n  .process-flow-diagram {\r\n    display: flex;\r\n    align-items: top;\r\n    justify-content: center;\r\n    width: 80%;\r\n    margin-bottom: 10px; /* Space between diagram and item count */\r\n  }\r\n\r\n  .flow-step {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    min-width: 20%; /* Ensure some minimum width for each step */\r\n  }\r\n\r\n  .step-icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    background-color: var(--theme-color-dark); /* Example background color */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 8px;\r\n    border: 2px solid var(--theme-color-dark);\r\n  }\r\n\r\n  .step-icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    background-color: var(--theme-color-dark); /* Example background color */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 8px;\r\n    border: 3px solid var(--theme-color-dark);\r\n    /* 确保 SVG 背景颜色透明，否则可能会被 step-icon 的背景色覆盖 */\r\n    background-color: white; /* 或者设置为你想要的背景色，如果 SVG 本身是透明的 */\r\n  }\r\n\r\n  .icon-image {\r\n    max-width: 75%; /* 确保图片不会超出其容器 */\r\n    max-height: 75%; /* 确保图片不会超出其容器 */\r\n    width: auto; /* 保持图片原始宽高比 */\r\n    height: auto; /* 保持图片原始宽高比 */\r\n    display: block; /* 移除图片底部可能存在的额外空间 */\r\n  }\r\n\r\n  .step-label {\r\n    font-weight: bold;\r\n    color: var(--color-text-primary);\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  .step-id {\r\n    font-size: 0.9em;\r\n    color: #555;\r\n    word-break: break-all; /* Ensures long IDs wrap */\r\n  }\r\n\r\n  .step-status {\r\n    margin-top: 5px;\r\n  }\r\n\r\n  .ok-status {\r\n    color: green;\r\n    font-weight: bold;\r\n  }\r\n\r\n .flow-arrow {\r\n  font-size: 2em;\r\n  align-self: center;\r\n  margin: 0 10px;\r\n  font-weight: bold;\r\n  color: #999999; /* Initial grey color for arrows */\r\n  }\r\n\r\n  .flow-arrow.arrow-status-green {\r\n    color: green;\r\n  }\r\n\r\n  .flow-arrow.arrow-status-red {\r\n    color: red;\r\n  }\r\n\r\n  .flow-arrow.arrow-status-grey {\r\n    color: #999999;\r\n  }\r\n\r\n  .flow-item-details {\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    color: #666;\r\n  }\r\n.step-id {\r\n  font-size: 0.9em;\r\n  color: #555;\r\n  word-break: break-all;\r\n  min-height: 1.2em; /* Ensure it takes up at least one line height even if empty */\r\n  display: block; /* Make it a block element to control its height */\r\n  visibility: visible; /* Keep it visible even if content is empty to maintain layout */\r\n}\r\n\r\n/* New styles for the checkbox and text within step-status */\r\n.step-status {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center; /* Center the checkbox and OK text */\r\n  color: #999999; /* Grey by default */\r\n  font-weight: bold;\r\n  min-height: 1.2em; /* Ensure consistent height for the status area */\r\n}\r\n\r\n.step-status.ok-status-active {\r\n  color: green; /* Green when active */\r\n}\r\n\r\n.status-checkbox {\r\n  width: 0%;\r\n  height: 0%;\r\n  /* This ensures the checkbox itself is colored green when checked */\r\n  accent-color: green;\r\n}\r\n\r\n.status-checkbox:disabled {\r\n  cursor: default;\r\n}\r\n</style>","import script from \"./Overview.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Overview.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./Overview.vue?vue&type=style&index=0&id=019c22e4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-019c22e4\"]])\n\nexport default __exports__","// src/router/index.ts\r\nimport { createRouter, createWebHistory } from \"vue-router\";\r\nimport Application from '@/views/Application.vue';\r\nimport ApplicationDirectory from '@/views/ApplicationDirectory.vue';\r\nimport MaintainBusinessPartnerView from '@/views/MaintainBP/MaintainBusinessPartnerView.vue';\r\nimport TestPageErp from \"@/test/varbox/TestPageErp.vue\";\r\nimport SearchModalTest from \"@/test/SearchModalTest.vue\";\r\nimport AppContentTest from \"@/test/AppContentTest.vue\";\r\nimport BPRelationshipTest from \"@/test/BPRelationshipTest.vue\";\r\nimport ExampleApplication from '@/views/example/ExampleApplication.vue';\r\nimport Login from '@/views/Login.vue';\r\nimport Register from '@/views/Register.vue';\r\nimport Home from '@/views/Home.vue';\r\nimport CreateBp from '@/views/BPRelationship/Create.vue';\r\nimport ManageSalesOrders from \"@/views/ManageSO/ManageSalesOrders.vue\";\r\n\r\n// 询价单\r\nimport CreateInquiry from \"@/views/inquiry/Create.vue\";\r\nimport ChangeInquiry from \"@/views/inquiry/Change.vue\";\r\nimport DisplayInquiry from \"@/views/inquiry/Display.vue\";\r\n\r\n// BP关系\r\nimport CreateBPRelationship from '@/views/BPRelationship/Create.vue';\r\nimport DisplayBPRelationship from \"@/views/BPRelationship/Display.vue\";\r\nimport ChangeBPRelationship from \"@/views/BPRelationship/Change.vue\";\r\n\r\n// 出库交货单\r\nimport CreateOutboundDelivery from '@/views/outboundDeliveries/Create.vue';\r\nimport PickOutboundDelivery from '@/views/outboundDeliveries/Pick.vue';\r\nimport ManageOutboundDeliveries from '@/views/outboundDeliveries/Manage.vue';\r\n\r\n// 开票凭证\r\nimport CreateBillingDocument from '@/views/billDoc/Create.vue';\r\nimport DisplayBillingDocument from '@/views/billDoc/Display.vue';\r\nimport ChangeBillingDocument from '@/views/billDoc/Change.vue';\r\n\r\nimport getMyPassBack from '@/views/GetMyPassBack.vue'; // 引入主页组件\r\nimport { title } from \"process\";\r\nimport ManageSalesQuotations from '@/views/manageSalesQuotations/manageSalesQuotations.vue';\r\nimport VarTreeTutorial from '@/views/VarTreeTutorial.vue';\r\nimport ItemConditionKitTest from '@/views/test/ItemConditionKitTest.vue';\r\n\r\nimport MaterialDocumentOverview from '@/views/MaterialDocumentOverview/Overview.vue';\r\nimport path from \"path\";\r\n\r\nconst routes = [\r\n  // 保留原有的路径\r\n  {\r\n    path:'/',\r\n    redirect: '/login' // 默认重定向到登录页面\r\n  },\r\n  {\r\n    path: '/home',\r\n    name: 'Home',\r\n    component: Home // 你的系统主页或默认页面\r\n  },\r\n  {\r\n    path: '/test/erppage', // 定义一个专门用于测试的路由路径\r\n    name: 'MaintainBPTest',\r\n    component: TestPageErp // 引入你的测试文件\r\n  },\r\n  {\r\n    path: '/test/erppage/vake',\r\n    name: 'Test-Page-Vake',\r\n    component: CreateBPRelationship\r\n  },\r\n  \r\n  // 新增的Application父路由，包含导航栏和背景\r\n  {\r\n    path: '/application',\r\n    component: Application,\r\n    children: [\r\n      {\r\n        path: '',\r\n        name: 'ApplicationDirectory',\r\n        component: ApplicationDirectory,\r\n        meta: { title: 'Applications: Development' }\r\n      },\r\n      {\r\n        path: 'maintain-business-partner',\r\n        name: 'ApplicationMaintainBusinessPartner',\r\n        component: MaintainBusinessPartnerView,\r\n        meta: { title: 'Maintain Business Partner' }\r\n      },\r\n      {\r\n        path: 'test/erppage/vake',\r\n        name: 'ApplicationTest-Page-Vake',\r\n        component: CreateBPRelationship,\r\n        meta: { title: 'Create BP Relationship' }\r\n      },\r\n      {\r\n        path: 'test/erppage',\r\n        name: 'ApplicationTestPageErp',\r\n        component: TestPageErp,\r\n        meta: { title: 'Test Page' }\r\n      },\r\n      {\r\n        path: 'test/search-modal',\r\n        name: 'ApplicationSearchModalTest',\r\n        component: SearchModalTest,\r\n        meta: { title: 'Search Modal Test' }\r\n      },\r\n      {\r\n        path: 'test/app-content',\r\n        name: 'ApplicationAppContentTest',\r\n        component: AppContentTest,\r\n        meta: { title: 'AppContent Component Test' }\r\n      },\r\n      {\r\n        path: 'test/bp-relationship',\r\n        name: 'ApplicationBPRelationshipTest',\r\n        component: BPRelationshipTest,\r\n        meta: { title: 'BP Relationship Test' }\r\n      },\r\n      {\r\n        path: 'test/item-condition-kit',\r\n        name: 'ApplicationItemConditionKitTest',\r\n        component: ItemConditionKitTest,\r\n        meta: { title: 'ItemConditionKit Test' }\r\n      },\r\n      {\r\n        path: 'example',\r\n        name: 'ApplicationExample',\r\n        component: ExampleApplication,\r\n        meta: { title: 'Example Application' }\r\n      },\r\n      {\r\n        path: 'home',\r\n        name: 'ApplicationHome',\r\n        component: Home,\r\n        meta: { title: 'Sales and Distribution' }\r\n      },\r\n      {\r\n        path: 'create-bp-relationship',\r\n        name: 'CreateBPRelationship',\r\n        component: CreateBPRelationship,\r\n        meta: { title: 'Create BP Relationship' }\r\n      },\r\n      {\r\n        path: 'manage-sales-orders',\r\n        name: 'ManageSalesOrders',\r\n        component: ManageSalesOrders,\r\n        meta:{ title: 'Manage Sales Orders' }\r\n      },\r\n      {\r\n        path: 'create-inquiry',\r\n        name: 'CreateInquiry',\r\n        component: CreateInquiry,\r\n        meta: { title: 'Create Inquiry' }\r\n      },\r\n      {\r\n        path: 'manage-sales-quotations',\r\n        name: 'ManageSalesQuotations',\r\n        component: ManageSalesQuotations,\r\n        meta: { title: 'Manage Sales Quotations' }\r\n      },\r\n      {\r\n        path: 'display-inquiry',\r\n        name: 'DisplayInquiry',\r\n        component: DisplayInquiry,\r\n        meta: { title: 'Display Inquiry' }\r\n      },\r\n      {\r\n        path: 'change-inquiry',\r\n        name: 'ChangeInquiry',\r\n        component: ChangeInquiry,\r\n        meta: { title: 'Change Inquiry' }\r\n      },\r\n      {\r\n        path: 'display-bp-relationship',\r\n        name: 'DisplayBPRelationship',\r\n        component: DisplayBPRelationship,\r\n        meta: { title: 'Display BP Relationship' }\r\n      },\r\n      {\r\n        path: 'change-bp-relationship',\r\n        name: 'ChangeBPRelationship',\r\n        component: ChangeBPRelationship,\r\n        meta: { title: 'Change BP Relationship' }\r\n      },\r\n      {\r\n        path: 'create-outbound-delivery',\r\n        name: 'CreateOutboundDelivery',\r\n        component: CreateOutboundDelivery,\r\n        meta: { title: 'Create Outbound Delivery' }\r\n      },\r\n      {\r\n        path: 'manage-outbound-deliveries',\r\n        name: 'ManageOutboundDeliveries',\r\n        component: ManageOutboundDeliveries,\r\n        meta: { title: 'Manage Outbound Deliveries' }\r\n      },\r\n      {\r\n        path: 'pick-outbound-delivery',\r\n        name: 'PickOutboundDelivery',\r\n        component: PickOutboundDelivery,\r\n        meta: { title: 'Pick Outbound Delivery' }\r\n      },\r\n      {\r\n        path: 'vartree-&-varinput-tutorial',\r\n        name: 'VarTreeTutorial',\r\n        component: VarTreeTutorial,\r\n        meta: { title: 'VarBox Tutorial' }\r\n      },\r\n      {\r\n        path: 'create-billing-document',\r\n        name: 'CreateBillingDocument',\r\n        component: CreateBillingDocument,\r\n        meta: { title: 'Create Billing Document' }\r\n      },\r\n      {\r\n        path: 'display-billing-document',\r\n        name: 'DisplayBillingDocument',\r\n        component: DisplayBillingDocument,\r\n        meta: { title: 'Display Billing Document' }\r\n      },\r\n      {\r\n        path: 'change-billing-document',\r\n        name: 'ChangeBillingDocument',\r\n        component: ChangeBillingDocument,\r\n        meta: { title: 'Change Billing Document' }\r\n      },\r\n      {\r\n        path: 'material-documents-overview',\r\n        name: 'MaterialDocumentOverview',\r\n        component: MaterialDocumentOverview,\r\n        meta: { title: 'MaterialDocumentOverview' }\r\n      },{\r\n        path: 'posting-incoming-payments',\r\n        name: 'PostingIncomingPayments',\r\n        component: () => import('@/views/postingIncomingPayments/postingIncomingPayments.vue'),\r\n        meta: { title: 'Posting Incoming Payments' }\r\n      },{\r\n        path: 'display-journal-entry/:id',\r\n        name: 'DisplayJournalEntry',\r\n        component: () => import('@/views/postingIncomingPayments/displayJournalEntry.vue'),\r\n        meta: { title: 'Display Journal Entry' }\r\n      }\r\n    ]\r\n  },\r\n  { \r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login \r\n  },\r\n  { \r\n    path: '/register', \r\n    name: 'Register',\r\n    component: Register \r\n  },\r\n  {\r\n    path: '/getMyPassBack',\r\n    name: 'GetMyPassBack',\r\n    component: getMyPassBack // 主页组件\r\n  }\r\n  // 你可以在这里添加其他页面路由\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(), // 使用 HTML5 History 模式\r\n  routes\r\n});\r\n\r\nexport default router;","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, mergeProps as _mergeProps, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nimport VarInput from '@/components/varbox/VarInput.vue'\r\nimport { VarTree } from '@/utils/VarTree';\r\nimport { computed } from 'vue'\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'VarBox',\n  props: {\n    tree: {},\n    indentLevel: {},\n    wrapperStyle: {},\n    path: {},\n    hideLabel: { type: Boolean }\n  },\n  emits: [\"update\"],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props\r\nconst emit = __emit\r\nfunction handleUpdate(payload: any) {\r\n  emit('update', payload)\r\n}\r\nconst showLabel = computed(()=>{\r\n  if(props.hideLabel == true){\r\n    return false\r\n  }\r\n  return true\r\n})\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (props.tree)\n    ? (_openBlock(), _createBlock(VarInput, _mergeProps({\n        key: 0,\n        varTree: props.tree,\n        nodePath: props.path ?? [],\n        readonly: props.tree.root?.readonly,\n        config: props.tree.root?.config,\n        indentLevel: props.indentLevel,\n        showLabel: showLabel.value,\n        wrapperStyle: props.wrapperStyle,\n        onUpdate: handleUpdate\n      }, _ctx.$attrs, {\n        key: props.tree.forceUpdateKey.value\n      }), _createSlots({ _: 2 }, [\n        _renderList(_ctx.$slots, (_, slotName) => {\n          return {\n            name: slotName,\n            fn: _withCtx((slotProps) => [\n              _renderSlot(_ctx.$slots, slotName, _normalizeProps(_guardReactiveProps(slotProps)))\n            ])\n          }\n        })\n      ]), 1040, [\"varTree\", \"nodePath\", \"readonly\", \"config\", \"indentLevel\", \"showLabel\", \"wrapperStyle\"]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n  <VarInput\r\n    v-if=\"props.tree\"\r\n    :varTree=\"props.tree\"\r\n    :nodePath=\"props.path ?? []\"\r\n    :readonly=\"props.tree.root?.readonly\"\r\n    :config=\"props.tree.root?.config\"\r\n    :indentLevel=\"props.indentLevel\"\r\n    :showLabel=\"showLabel\"\r\n    :wrapperStyle=\"props.wrapperStyle\"\r\n    @update=\"handleUpdate\"\r\n    v-bind=\"$attrs\"\r\n    :key=\"props.tree.forceUpdateKey.value\"\r\n  >\r\n    <!-- 透传插槽 -->\r\n    <template v-for=\"(_, slotName) in $slots\" #[slotName]=\"slotProps: any\">\r\n      <slot :name=\"slotName\" v-bind=\"slotProps\"></slot>\r\n    </template>\r\n  </VarInput>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport VarInput from '@/components/varbox/VarInput.vue'\r\nimport { VarTree } from '@/utils/VarTree';\r\nimport { computed } from 'vue'\r\nconst props = defineProps<{\r\n  tree: VarTree,\r\n  indentLevel?: number, \r\n  // showLabel?: boolean,\r\n  wrapperStyle?: Record<string, any>\r\n  path?: string[]\r\n  hideLabel?: boolean\r\n}>()\r\nconst emit = defineEmits<{\r\n  (e: 'update', payload: any): void\r\n}>()\r\nfunction handleUpdate(payload: any) {\r\n  emit('update', payload)\r\n}\r\nconst showLabel = computed(()=>{\r\n  if(props.hideLabel == true){\r\n    return false\r\n  }\r\n  return true\r\n})\r\n</script>","import script from \"./VarBox.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./VarBox.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"334\":\"09ddf085\",\"953\":\"53ae35bf\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"334\":\"68e343df\",\"953\":\"4f71a89f\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"site:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"334\":1,\"953\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksite\"] = self[\"webpackChunksite\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1282); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_hoisted_1","render","_ctx","_cache","$props","$setup","$data","$options","_component_router_view","_resolveComponent","_openBlock","_createElementBlock","_createVNode","defineComponent","name","__exports__","window","API_BASE_URL","process","createApp","App","use","router","mount","getPathString","tree","path","root","length","escape","segment","join","s","replace","m","VarNode","constructor","nodeType","varType","defaultValue","readonly","children","config","nameDisplay","iconPath","_defineProperty","this","index","currentValue","result","forEach","child","_currentValue","val","hasOwnProperty","Array","isArray","deletions","push","filter","includes","i","newChild","getValue","setValue","newValue","forceSetValue","childValue","undefined","childTemplate","createNodeFromConfig","clone","addChild","removeChild","splice","getSelectedChildren","selected","setSelection","value","selectChild","isLeaf","getNameDisplay","clonedChildren","node","template","clearedChildren","findNodeByPath","currentNode","pathSegment","find","parseInt","VarTree","rootNode","nodeIndex","forceUpdateKey","ref","_initializeTree","forceUpdate","setRoot","getChildren","getRoot","cloneRoot","_inorderTraversal","getAllNodes","nodes","_preorderTraversal","setValueByJson","_setValueByJson","key","replaceNodeByPath","sourceNode","targetPath","existingIndex","findIndex","isNaN","parentPath","slice","lastSegment","parentNode","findPathToNode","targetNode","dfs","currentPath","nextSegment","String","validators","date","Date","getTime","number","Number","required","email","emailRegex","test","url","URL","struct","childNodes","entries","c","childStruct","type","createTreeFromConfig","createNodeStructure","cns","isNodeStructure","obj","customerIdParamSearchStructure","customerIdParamSearchTree","customerSearch","paramTree","serviceUrl","bpParamSearchStructure","hideLabel","searchMethods","bpParamSearchTree","quotationIdParamSearchStructure","quotationIdParamSearchTree","bpSearch","GLAccountSearch","CurrencyUnitSearch","relationSearch","inquiryTypeSearch","salesOrgSearch","distributionChannelSearch","divisionSearch","inquiryIdSearch","materialSearch","quotationIdSearch","soParamSearchStructure","soParamSearchTree","salesOrderIdSearch","billingDocumentIdSearch","resultHeaderDisplay","soldToPartySearch","class","_hoisted_2","_hoisted_3","_hoisted_4","hideMagicString","_defineComponent","__name","props","stages","footerConfig","beforeNext","Function","beforePrev","afterNext","afterPrev","showNavButtons","Boolean","prevText","nextText","hideBottomBar","emits","setup","__props","expose","__expose","emit","__emit","bottomBarTo","onMounted","showBottomBar","computed","toRefs","currentStage","isNavigating","footerMessage","async","goToStage","oldStage","handleNext","canProceed","_currentStage","_targetStage","handlePrev","next","prev","defaultFooterButtons","showPrev","showNext","stageFooterConfig","mergedFooterButtons","getCurrentStageName","getTotalStages","isFirstStage","isLastStage","reset","allInterfaces","allProps","stageName","totalStages","_unref","_renderSlot","$slots","_normalizeProps","_guardReactiveProps","_createElementVNode","_toDisplayString","_createBlock","_Teleport","to","onClick","disabled","_createCommentVNode","SimpleInputBoxProps","modelValue","default","SimpleInputBoxEmits","slotScopeData","blur","handleBlur","handleEnter","pathString","nodePath","inputValue","showDropdown","showDropdownComputed","selectionOptions","options","inputClass","handleFocus","validator","isValid","creteria","message","data","handleInput","toggleShowDropdown","setShowDropdown","v","handleInputClick","selectOption","option","closeDropdown","watch","newStringValue","immediate","document","addEventListener","onUnmounted","removeEventListener","_normalizeClass","_withDirectives","$event","placeholder","onBlur","onFocus","onKeyup","_withKeys","_withModifiers","onInput","_vModelText","_Fragment","_renderList","_hoisted_5","displayValue","dateValue","formatToDateInput","showPicker","handleTextInput","showDatePicker","handleDateChange","hideDatePicker","dateStr","year","getFullYear","month","getMonth","padStart","day","getDate","formatDisplayDate","toLocaleDateString","stringValue","toString","nextTick","picker","querySelector","focus","setTimeout","_createStaticVNode","min","minDate","max","maxDate","onChange","SimpleInputBoxEmitsWithBool","_vModelCheckbox","varTree","handleUpdate","payload","VarBox","onUpdate","getAPIBaseUrl","SearchService","executeSearch","method","params","console","log","response","fetch","headers","body","JSON","stringify","ok","status","statusText","json","error","success","total","searchBusinessPartner","searchProduct","simpleSearch","query","advancedSearch","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","visible","modalTo","stage","selectedMethodIndex","resultTree","showMoreMethods","visibleMethodsCount","currentMethod","visibleMethods","hiddenMethods","hasMoreMethods","stage0Title","stage1Title","handleParamUpdate","handleExecute","searchParams","resultNodes","item","searchResultTree","errorResultTree","handleBack","closeModal","handleConfirm","results","selectedResults","firstSelectedResult","handleBackdropClick","selectHiddenMethod","setSearchResults","newVisible","active","ParamInput","viewBox","fill","xmlns","d","stroke","src","_imports_0","width","_imports_1","indentLevel","showLabel","wrapperStyle","componentConfig","validationError","nodeValue","selectedRows","Set","isAllSelected","isLeafNode","isDictNode","isListNode","isDynamicList","effectiveReadonly","shouldRenderAsTable","reachedMaxLength","containerStyle","inputStyle","initNodeValue","getLeafComponent","getPlaceholder","getInputClass","getTableHeaders","getChildConfig","handleValueChange","handleChildUpdate","handleValidation","handleValidationError","addListItem","removeListItem","createNewListItem","setNodeValue","getNodeValue","toggleRowSelection","toggleAllSelection","removeSelectedItems","focusCounter","searchButtonCounter","handleSearchButtonClick","displaySearchButton","displaySearchIcon","showSearchModal","shouldShowSearchButton","refresh","update","isShowLabel","maxLength","baseClassPrefix","classPrefix","wrapperClass","t","mainContentClass","extraComponentsClass","extraTableButtonsClass","searchButtonClass","leafChildren","isChildDisplay","complexChildren","listItems","rowProvided","handleSearchButtonEnter","handleSearchButtonLeave","handleSearchModalClose","handleSearchModalConfirm","customHandler","customSearchResultHandler","firstResult","action","StringInput","typeMap","DateInput","SelectionInput","BooleanInput","pathReadonly","pathError","showWhiteList","hideList","hideSelf","getChildNameDisplayTranslation","childNameDisplayTranslation","getChildComponentConfig","childrenNotHide","firstChild","updateInfo","currentSearchButtonCounter","currentFocusCount","newItem","delete","newSelectedRows","selectedIndex","add","updateAllSelectedState","has","clear","childrenCount","size","sortedIndices","from","sort","a","b","lastChild","deep","_component_VarInput","customComponent","_resolveDynamicComponent","style","_normalizeStyle","onValidationError","_createSlots","_","slotName","fn","_withCtx","slotProps","_mergeProps","$attrs","onMouseenter","onMouseleave","paddingLeft","ref_for","checked","header","dictChild","dictIndex","SearchModal","onClose","onConfirm","popEvents","enter-from-node","input-from-node","pageTitle","showSearchInput","searchQuery","useRouter","route","useRoute","handleRightClick","event","preventDefault","goToUserProfile","goBack","history","back","goToHomePage","startsWith","homePageUrl","toggleSearchInput","searchInput","performSearch","alert","onContextmenu","alt","_imports_2","_imports_3","ApplicationHistoryManager","storageKey","maxHistorySize","getHistory","historyData","localStorage","getItem","parse","addVisitRecord","applicationInfo","visitRecord","applicationName","routePath","lore","tags","visitTime","toISOString","visitCount","record","existingRecord","unshift","setItem","clearHistory","removeItem","removeHistoryRecord","filteredHistory","getRecentApplications","limit","syncToServer","userId","fetchFromServer","applicationHistoryManager","_hoisted_13","_hoisted_14","recentApps","loadRecentApplications","navigateToApplication","app","fullPath","removeFromHistory","confirm","handleLogout","formatVisitTime","now","visit","diffMs","diffMins","Math","floor","diffHours","diffDays","currentRoute","title","currentPageTitle","showProfileSideZone","sideZoneKey","handleGlobalSearch","updatePageTitle","updateTitleFromRoute","routeMeta","meta","handleProfileButtonClick","handleSideZoneNavigate","handleSideZoneClose","handleKeyDown","NavigationBar","onSearch","onProfileClick","onUpdateTitle","RecentApplications","onNavigate","selectedTag","applications","availableTags","tag","filteredApplications","selectTag","getTagDisplayName","tagNames","_component_FilterTabs","tabs","businessPartnerTabs","onTabSelected","handleTabSelected","activeContentKey","showDetailView","_hoisted_15","_hoisted_16","args","backToSearchResults","_component_VarBox","currentVarTree","customerVarBoxKey","customerQueryTree","searchPerformed","businessPartnerResults","bp","customerId","viewBusinessPartnerDetail","firstName","lastName","city","country","bpRole","_hoisted_17","handleActionButtonClick","actionButtonText","tab","activeTab","selectTab","label","initialActiveTab","methods","tabValue","$emit","created","customerQueryStructure","createCustomerTreeStructure","isPerson","components","FilterTabs","customerCreateTree","customerDetailTree","selectedBusinessPartnerId","newKey","selectedTabValue","createBusinessPartner","saveBusinessPartnerDetail","performBusinessPartnerSearch","queryData","fetchBusinessPartnerDetail","bpType","bpIdAndRoleSection","createData","detailData","mounted","_component_var_box","testcaseNames","href","testCases","contentValidator","target","VarInput","MyCustomInput","testResults","simpleString","simpleNumber","simpleDate","simpleSelection","threeLevelDict","threeLevelList","mixed","dynamicList","tableTest","configBased","numberInput","fileInput","configObject","markRaw","simpleStringTree","flag","simpleNumberTree","simpleDateTree","simpleSelectionTree","threeLevelDictTree","threeLevelListTree","mixedTree","readonlyTree","dynamicListTree","tableTestTree","configBasedTree","initializeComplexData","complexKeys","getTreeByKey","treeMap","handleSearch","varProps","handleClear","increment","decrement","customHandlerLogs","timestamp","toLocaleTimeString","createSearchMethods","createMultiSearchMethods","testTreeWithSearch","testTreeWithoutSearch","testTreeMultiSearch","testTreeCustomHandler","_createTextVNode","_component_AppContent","beforeNextHook","beforePrevHook","onStageChange","onNext","onPrev","testInput","processType","processingProgress","processingStatus","estimatedTime","actualProcessTime","processResult","resultConfirmed","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","resetToFirst","toggleNavButtons","simulateProcessing","_hoisted_22","_hoisted_23","_hoisted_24","currentAppStage","_hoisted_25","_hoisted_26","lastAction","_hoisted_27","hookValidation","_hoisted_28","_hoisted_29","_hoisted_30","eventLogs","_hoisted_31","time","_hoisted_32","clearLogs","AppContent","targetStage","addLog","trim","newStage","startProcessing","$refs","appContentRef","resetProcessingState","getEstimatedTime","startTime","interval","setInterval","random","round","generateResult","clearInterval","timeMap","input","processedAt","toUpperCase","metadata","processingTime","algorithm","state","onCreateState","onChangeState","onDisplayState","appToState","newState","writableTrees","initialCreationTree","initialSearchTree","bpRelationshipDataTree","generalDataTree","initializeResult","initializeByCreation","then","catch","basicInfoValue","formStruct","initializeByGet","bpRelationshipData","content","basicInfo","generalData","initializeStageNextButtonLabel","informationStagePrevButtonLabel","informationStageNextButtonLabel","handleCancel","confirmValue","ref_key","mainRef","Main","currentMode","showComponent","testCreate","testDisplay","testChange","testAPI","CreateBP","DisplayBP","ChangeBP","_hoisted_33","isSubmitting","submitSuccess","submitError","submittedEmployeeId","submitTime","isBasicInfoValid","employeeBasicInfoTree","coreRequiredFields","hasCoreFields","every","field","phone","isDepartmentInfoValid","deptInfo","employeeDepartmentTree","department","position","createDepartmentSearchMethods","description","deptType","headCount","level","suggestedSalary","requirements","createManagerSearchMethods","customDepartmentHandler","customPositionHandler","salaryNode","customManagerHandler","hireDate","today","createSkillSearchMethods","category","suggestedLevel","createCompanySearchMethods","industry","scale","customSkillHandler","skillNode","parent","levelNode","customCompanyHandler","employeeSkillsTree","startDate","endDate","handleBasicInfoUpdate","handleDepartmentUpdate","handleSkillsUpdate","handleStageChange","skillsInfo","skills","incompleteSkills","some","skill","skillName","confirmed","submitResult","submitEmployeeData","employeeData","departmentInfo","employeeId","toLocaleString","resetForm","goToDirectory","characterRestrictionMessage","passwordLengthMessage","Type","internalValue","inputTypeRef","currentInputType","togglePasswordVisibility","allowedCharsRegex","validateAll","newInputValue","newType","_vModelDynamic","register","username","password","login","token","formTree","messageType","errorMessage","handleLogin","usernameNode","passwordNode","nodesToValidate","_component_router_link","__","color","marginTop","handlePasswordBlur","handlePasswordEnter","handleRegister","onEnter","_Transition","mode","handleClick","pageName","resolvedIconPath","iconContext","require","iconsMap","aliasPath","substring","pagePath","defaultIconPath","appInfo","warn","appTree","appCategories","categoryNode","SingleApp","toLowerCase","ItemConditionKit","itemTemplate","defaultItemTemplate","defaultDetailStructures","conditions","itemsNode","itemsNodeRef","navigationLabels","cancel","save","previous","initializeDetailTrees","structures","detailStructures","detailTrees","sales","detailPageConfig","validationEndpoint","headerTree","selectedItems","setItemsNode","updateConfig","newConfig","getDetailTrees","createItemConditionKit","material","orderQuantity","reqDelivDate","pricingDate","orderProbability","kit","currentItemIndex","currentTabIndex","editingNode","isDataReady","teleportTarget","showButtonsInline","hasMultipleItems","canGoPrevious","canGoNext","hasTabs","tabsConfig","currentDetailTree","handleItemsTableClick","selectedChildren","itemsWithoutValidation","validation","validateItems","hasInvalidItems","updateItemDetailTrees","itemNodes","itemValues","breakdowns","breakdown","badRecordIndices","badIndex","allDataLegal","currentItem","setNodeFromItem","sourcePath","targetTree","detailTree","validateCurrentItemConditionData","nodeList","validateCurrentItemConditionDataOnly","syncCurrentDataToOriginalItem","handleInputFromNode","switchToItem","switchToPreviousItem","switchToNextItem","handleTabClick","checkTeleportTarget","footerTarget","initializeComponent","hasSelectedItems","onEnterFromNode","onInputFromNode","slotData","itemConditionKit","showAppContent","showQuotationModal","quotationModalMessage","quotationQueryStructure","quotationQueryTree","salesOrderVarBoxKey","salesOrderQueryStructure","salesOrderDataTree","summonItemsNode","salesOrderQueryTree","salesOrdersResult","performSalesOrderSearch","fullUrl","salesOrderFormPrevButtonLabel","salesOrderFormNextButtonLabel","itemDetailsPrevButtonLabel","itemDetailsNextButtonLabel","showConfirmationModal","dataToSave","endpoint","so_id","allItemsValid","itemsTabQueryAll","viewSalesOrderDetail","soId","createSalesOrder","quotation_id","cancelQuotationInput","confirmQuotationInput","quotationId","quotationData","basicInfoNode","quotation","soldToParty","shipToParty","customerReference","netValue","netValueUnit","customerReferenceDate","itemOverviewNode","itemOverview","itemsListNode","items","itemData","newItemNode","handleChangeToDisplayAndSave","handleEnterFromNodeSalesOrderTree","itemsTabQuery","pricingElements","handleItemConditionValidationSuccess","handleItemConditionValidationFailed","handleItemConditionSave","handleItemConditionCancel","showConfirm","confirmMessage","confirmResolve","Promise","order","soldToPartyName","customer_no","customer_reference","req_delivery_date","net_value","currency","doc_date","ItemConditionDetail","onValidationSuccess","onValidationFailed","onSave","onCancel","inquiryDataTree","inquiryData","expectOralVal","expectOralValUnit","handleSave","handleValidationFailed","handleValidationSuccess","handleEnterFromNodeInquiryTree","r","initialInputTree","salesOrdersTree","loadSalesOrders","orders","handleGoClick","handleExecuteClick","selectedOrders","orderValues","pickingId","deliveryDetailTree","deliveryDetailTreeWritablePaths","setDeliveryDetailTreeWritable","isGIComplete","itemDetailTree","deliveryItemsTree","ns","getAllData","deliveryDetail","setItemDetailNode","handleItemDetailsClick","l","itemNode","updateCurrentItemDetailData","force","isValidate","deliveryId","detail","isPosted","giSummaryKey","handlePostGIs","allData","postData","handleEnterFromNodeItemDetail","_node","_value","_data","handleInputFromNodeItemDetail","saveItemDetail","cancelItemDetail","selectedTab","giSummaryContent","posted","readyToPost","plannedGIDate","grossWeight","netWeight","volume","priority","address","showPickMain","goToPickMain","exitPickMain","loadDeliveries","deliveriesTableLength","deliveriesTree","deliveries","deliveryList","handlePickClick","selectedNodes","deliveryIds","PickMain","billingDataTree","billingData","handleAfterNext","handleAfterPrev","unvalidatedItems","script","cancelInquiryCreation","showInquiryModal","inquiryIdInput","createQuotationFromInquiry","inquiryId","quotationDataTree","onSearchState","searchResults","searchResultsTree","initialCreationItemsNode","initialCreationItemOverviewNode","getStatusClass","formatDate","dateString","searchScreenNextButtonLabel","quotationDetailPrevButtonLabel","quotationDetailNextButtonLabel","fetchQuotationDetails","salesQuotationId","res","viewDetails","responseData","salesQuotation","isStructureValid","quotationStruct","initializeCreation","toRaw","newQuotationData","overallStatus","latestExpiration","for","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","basicExamples","simpleTreeExamples","userInfo","simpleList","complexTreeExamples","employeeProjects","slotExamples","extraSlot","simpleSlot","wrapperSlot","dateSlot","hookExamples","validationHook","cssExamples","customForm","pathTargeting","gridExamples","basicGrid","complexGrid","gridWithSlots","advancedExamples","testHideComplexNodes","employeeForm","updateValue","updateSelectValue","updateDateValue","setToday","split","clearDate","searchEmployee","updateSalary","saveEmployee","resetEmployee","deleteEmployee","mainDataTree","initializeTestData","testItems","orderQuantityUnit","taxValue","taxValueUnit","itemConditionDetailRef","treeValueDisplay","handleCancel2","showTreeValue","treeValue","materialQueryStructure","materialQueryTree","materialDocumentDetailStrcutrue","materialDocumentVarBoxKey","materialDocumentDataTree","materialDocumentResult","performMaterialDocumentSearch","materialDocumentFormPrevButtonLabel","materialDocumentFormNextButtonLabel","viewMaterialDocumentDetail","materialDocumentId","getProcessFlowValue","processFlow","flowItem","valueNode","getProcessFlowItemCount","stepName","getArrowStatusClass","prevIdKey","nextIdKey","prevId","nextId","dlvIdExists","doc","materialDocument","plant","postingDate","documentDate","routes","redirect","component","Home","TestPageErp","CreateBPRelationship","Application","ApplicationDirectory","MaintainBusinessPartnerView","SearchModalTest","AppContentTest","BPRelationshipTest","ItemConditionKitTest","ExampleApplication","ManageSalesOrders","CreateInquiry","ManageSalesQuotations","DisplayInquiry","ChangeInquiry","DisplayBPRelationship","ChangeBPRelationship","CreateOutboundDelivery","ManageOutboundDeliveries","PickOutboundDelivery","VarTreeTutorial","CreateBillingDocument","DisplayBillingDocument","ChangeBillingDocument","MaterialDocumentOverview","Login","Register","getMyPassBack","createRouter","createWebHistory","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","deferred","O","chunkIds","notFulfilled","Infinity","fulfilled","j","n","getter","__esModule","definition","defineProperty","enumerable","get","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","prop","prototype","inProgress","dataWebpackPrefix","done","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","onerror","onload","clearTimeout","doneFns","bind","head","appendChild","Symbol","toStringTag","p","createStylesheet","fullhref","oldTag","reject","linkTag","rel","nonce","onLinkComplete","errorType","realHref","err","request","insertBefore","nextSibling","findStylesheet","existingLinkTags","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}